[
    {
        "db_desc": "CREATE TABLE product_category_name_translation (\n    \n\nCREATE TABLE sellers (\n    seller_state TEXT, -- example: ['SP', 'RJ', 'PE']\n);\n\nCREATE TABLE customers (\n    \n\nCREATE TABLE geolocation (\n    \n\nCREATE TABLE order_items (\n    \n\nCREATE TABLE order_payments (\n    \n\nCREATE TABLE order_reviews (\n    \n\nCREATE TABLE orders (\n    order_purchase_timestamp TEXT, -- example: ['2017-12-06 18:20:00']\n    order_delivered_carrier_date TEXT, -- example: ['2017-12-06 20:15:00']\n\nCREATE TABLE products (\n    \n\nCREATE TABLE leads_qualified (\n    first_contact_date TEXT, -- example: ['2018-01-29', '2018-01-15', '2017-12-09', '2017-12-08', '2017-12-07', '2017-08-28']\n    origin TEXT, -- example: ['social', 'paid_search', 'organic_search']\n);\n\nCREATE TABLE leads_closed (\n    average_stock TEXT, -- example: ['20-50', '1-5', '5-20']",
        "question": "Can you calculate the 5-day symmetric moving average of predicted toy sales for December 5 to 8, 2018, using daily sales data from January 1, 2017, to August 29, 2018, with a simple linear regression model? Finally provide the sum of those four 5-day moving averages?",
        "instance_id": "local002",
        "db_id": "E_commerce"
    },
    {
        "db_desc": "CREATE TABLE Album (\n    AlbumId INTEGER, -- example: [1, 4, 2]\n    PRIMARY KEY (AlbumId),\n    CONSTRAINT fk_album_artistid FOREIGN KEY (ArtistId) REFERENCES Artist (ArtistId)\n);\n\nCREATE TABLE Artist (\n    PRIMARY KEY (ArtistId)\n);\n\nCREATE TABLE Customer (\n    CustomerId INTEGER, -- example: [1, 3, 12]\n    Company NVARCHAR(80), -- example: ['Embraer - Empresa Brasileira de Aeron\u00e1ut', 'JetBrains s.r.o.', 'Woodstock Discos']\n    City NVARCHAR(40), -- example: ['S\u00e3o Jos\u00e9 dos Campos', 'Stuttgart', 'Montr\u00e9al']\n    Phone NVARCHAR(24), -- example: ['+55 (12) 3923-5555', '+49 0711 2842222', '+1 (514) 721-4711']\n    PRIMARY KEY (CustomerId),\n    CONSTRAINT fk_customer_supportrepid FOREIGN KEY (SupportRepId) REFERENCES Employee (EmployeeId)\n);\n\nCREATE TABLE Employee (\n    EmployeeId INTEGER, -- example: [1, 2, 6]\n    ReportsTo INTEGER, -- example: [1, 2, 6]\n    City NVARCHAR(40), -- example: ['Edmonton', 'Calgary', 'Lethbridge']\n    Phone NVARCHAR(24), -- example: ['+1 (780) 428-9482', '+1 (403) 262-3443', '+1 (403) 263-4423']\n    PRIMARY KEY (EmployeeId),\n    CONSTRAINT fk_employee_reportsto FOREIGN KEY (ReportsTo) REFERENCES Employee (EmployeeId)\n);\n\nCREATE TABLE Genre (\n    GenreId INTEGER, -- example: [1, 2, 3]\n    PRIMARY KEY (GenreId)\n);\n\nCREATE TABLE Invoice (\n    InvoiceId INTEGER, -- example: [98, 121, 143]\n    CustomerId INTEGER, -- example: [1, 2, 3]\n    Total NUMERIC(10,2), -- example: [1.98, 3.96, 5.94]\n    PRIMARY KEY (InvoiceId),\n    CONSTRAINT fk_invoice_customerid FOREIGN KEY (CustomerId) REFERENCES Customer (CustomerId)\n);\n\nCREATE TABLE InvoiceLine (\n    InvoiceId INTEGER, -- example: [1, 2, 3]\n    TrackId INTEGER, -- example: [1, 2, 3]\n    UnitPrice NUMERIC(10,2), -- example: [0.99, 1.99]\n    Quantity INTEGER, -- example: [1]\n    PRIMARY KEY (InvoiceLineId),\n    CONSTRAINT fk_invoiceline_invoiceid FOREIGN KEY (InvoiceId) REFERENCES Invoice (InvoiceId),\n    CONSTRAINT fk_invoiceline_trackid FOREIGN KEY (TrackId) REFERENCES Track (TrackId)\n);\n\nCREATE TABLE MediaType (\n    MediaTypeId INTEGER, -- example: [1, 2, 3]\n    PRIMARY KEY (MediaTypeId)\n);\n\nCREATE TABLE Playlist (\n    PlaylistId INTEGER, -- example: [1, 2, 3]\n    PRIMARY KEY (PlaylistId)\n);\n\nCREATE TABLE PlaylistTrack (\n    PlaylistId INTEGER, -- example: [1, 3, 5]\n    TrackId INTEGER, -- example: [1, 2, 3]\n    PRIMARY KEY (PlaylistId),\n    CONSTRAINT fk_playlisttrack_playlistid FOREIGN KEY (PlaylistId) REFERENCES Playlist (PlaylistId),\n    CONSTRAINT fk_playlisttrack_trackid FOREIGN KEY (TrackId) REFERENCES Track (TrackId)\n);\n\nCREATE TABLE Track (\n    TrackId INTEGER, -- example: [1, 6, 7]\n    Name NVARCHAR(200), -- example: ['Everlong']\n    AlbumId INTEGER, -- example: [1, 2, 3]\n    MediaTypeId INTEGER, -- example: [1, 2, 3]\n    GenreId INTEGER, -- example: [1, 2, 3]\n    Milliseconds INTEGER, -- example: [343719, 342562, 230619]\n    UnitPrice NUMERIC(10,2), -- example: [0.99, 1.99]\n    PRIMARY KEY (TrackId),\n    CONSTRAINT fk_track_albumid FOREIGN KEY (AlbumId) REFERENCES Album (AlbumId),\n    CONSTRAINT fk_track_mediatypeid FOREIGN KEY (MediaTypeId) REFERENCES MediaType (MediaTypeId),\n    CONSTRAINT fk_track_genreid FOREIGN KEY (GenreId) REFERENCES Genre (GenreId)\n);",
        "question": "Calculate the duration of each track, classify them as short, medium, or long, output the minimum and maximum time for each kind (in minutes) and the total revenue for each category, group by the category.",
        "instance_id": "local244",
        "db_id": "music"
    },
    {
        "db_desc": "CREATE TABLE hardware_dim_customer (\n    customer TEXT, -- example: ['Atliq Exclusive', 'Atliq e Store', 'Neptune']\n    platform TEXT, -- example: ['Brick & Mortar', 'E-Commerce']\n    market TEXT, -- example: ['India', 'Indonesia', 'Japan']\n    region TEXT, -- example: ['APAC', 'EU', 'LATAM']\n);\n\nCREATE TABLE hardware_fact_pre_invoice_deductions (\n    \n\nCREATE TABLE web_sales_reps (\n    id INTEGER, -- example: [321500, 321510, 321520]\n    name TEXT, -- example: ['Samuel Racine', 'Eugena Esser', 'Michel Averette']\n\nCREATE TABLE hardware_dim_product (\n    product TEXT, -- example: ['AQ Dracula HDD \u2013 3.5 Inch SATA 6 Gb/s 54', 'AQ WereWolf NAS Internal Hard Drive HDD ', 'AQ Zion Saga']\n\nCREATE TABLE web_orders (\n    id INTEGER, -- example: [1, 2, 3]\n    total INTEGER, -- example: [169, 288, 132]\n\nCREATE TABLE StaffHours (\n    EventType TEXT, -- example: ['Enter', 'Exit']\n);\n\nCREATE TABLE university_enrollment (\n    \n\nCREATE TABLE university_faculty (\n    FacState TEXT, -- example: ['WA']\n\nCREATE TABLE university_student (\n    StdState TEXT, -- example: ['WA']\n\nCREATE TABLE university_offering (\n    CourseNo TEXT, -- example: ['IS320', 'IS460', 'FIN300']\n\nCREATE TABLE web_accounts (\n    id INTEGER, -- example: [1001, 1011, 1021]\n    name TEXT, -- example: ['Walmart', 'Exxon Mobil', 'Apple']\n    website TEXT, -- example: ['www.walmart.com', 'www.exxonmobil.com', 'www.apple.com']\n    lat REAL, -- example: [40.23849561, 41.1691563, 42.29049481]\n\nCREATE TABLE web_events (\n    id INTEGER, -- example: [1, 2, 3]\n\nCREATE TABLE SalaryDataset (\n    CompanyName TEXT, -- example: ['Mu Sigma', 'IBM', 'Tata Consultancy Services']\n    SalariesReported REAL, -- example: [105.0, 95.0, 66.0]\n    Location TEXT, -- example: ['Pune', 'New Delhi', 'Mumbai', 'Hyderabad']\n    Salary TEXT, -- example: ['\u20b96,48,573/yr', '\u20b911,91,950/yr', '\u20b98,36,874/yr']\n);\n\nCREATE TABLE web_region (\n    id INTEGER, -- example: [1, 2, 3]\n    name TEXT, -- example: ['Northeast', 'Midwest', 'Southeast']\n);\n\nCREATE TABLE hardware_fact_gross_price (\n    \n\nCREATE TABLE hardware_fact_manufacturing_cost (\n    \n\nCREATE TABLE university_course (\n    CourseNo TEXT, -- example: ['FIN300', 'FIN450', 'FIN480']\n\nCREATE TABLE hardware_fact_sales_monthly (\n    `date` TEXT, -- example: ['2019-09-01', '2019-10-01', '2019-11-01']",
        "question": "Using a Salary Dataset where the salary values need to be cleaned by removing non-numeric characters and converting them to a numeric type, write a detailed SQL query that identifies the top 5 companies by average salary in each of Mumbai, Pune, New Delhi, and Hyderabad, then compares each company\u2019s average salary in those cities to the overall national average salary. The final result should display four columns: Location, Company Name, Average Salary in State, and Average Salary in Country, listing only the top 5 companies in each of the specified locations.",
        "instance_id": "local253",
        "db_id": "education_business"
    },
    {
        "db_desc": "CREATE TABLE player (\n    batting_hand TEXT, -- example: ['Left-hand bat', 'Right-hand bat']\n    bowling_skill TEXT, -- example: ['Right-arm medium', 'Right-arm offbreak', 'Right-arm fast-medium']\n    country_name TEXT, -- example: ['India', 'New Zealand', 'Australia']\n    PRIMARY KEY (player_id)\n);\n\nCREATE TABLE team (\n    name TEXT, -- example: ['Royal Challengers Bangalore', 'Chennai Super Kings', 'Kings XI Punjab']\n    PRIMARY KEY (team_id)\n);\n\nCREATE TABLE `match` (\n    match_id INTEGER, -- example: [335987, 335988, 335989]\n    match_date DATE, -- example: ['2008-04-18', '2008-04-19', '2008-04-20']\n    venue TEXT, -- example: ['M Chinnaswamy Stadium', 'Punjab Cricket Association Stadium Mohal', 'Feroz Shah Kotla']\n    toss_decision TEXT, -- example: ['bat']\n    win_type TEXT, -- example: ['wickets', 'runs']\n    match_winner INTEGER, -- example: [1, 3, 6]\n    man_of_the_match INTEGER, -- example: [2, 19, 90]\n    PRIMARY KEY (match_id)\n);\n\nCREATE TABLE player_match (\n    match_id INTEGER, -- example: [335987, 335988, 335989]\n    PRIMARY KEY (match_id)\n);\n\nCREATE TABLE ball_by_ball (\n    match_id INTEGER, -- example: [335987, 335988, 335989]\n    over_id INTEGER, -- example: [1, 2, 3]\n    ball_id INTEGER, -- example: [1, 2, 3]\n    innings_no INTEGER, -- example: [2, 1]\n    team_batting INTEGER, -- example: [2, 1, 3]\n    team_bowling INTEGER, -- example: [1, 2, 4]\n    striker_batting_position INTEGER, -- example: [1, 2, 3]\n    striker INTEGER, -- example: [6, 2, 7]\n    bowler INTEGER, -- example: [106, 14, 15]\n    PRIMARY KEY (match_id)\n);\n\nCREATE TABLE batsman_scored (\n    match_id INTEGER, -- example: [335987, 335988, 335989]\n    over_id INTEGER, -- example: [1, 2, 3]\n    ball_id INTEGER, -- example: [1, 2, 3]\n    runs_scored INTEGER, -- example: [1, 0, 4]\n    innings_no INTEGER, -- example: [2, 1]\n    PRIMARY KEY (match_id)\n);\n\nCREATE TABLE wicket_taken (\n    match_id INTEGER, -- example: [335987, 335988, 335989]\n    over_id INTEGER, -- example: [2, 3, 5]\n    ball_id INTEGER, -- example: [1, 2, 5]\n    player_out INTEGER, -- example: [154, 46, 8]\n    kind_out TEXT, -- example: ['stumped', 'run out', 'lbw', 'hit wicket', 'caught', 'bowled']\n    innings_no INTEGER, -- example: [2, 1]\n    PRIMARY KEY (match_id)\n);\n\nCREATE TABLE extra_runs (\n    match_id INTEGER, -- example: [335987, 335988, 335989]\n    over_id INTEGER, -- example: [1, 2, 3]\n    ball_id INTEGER, -- example: [1, 2, 3]\n    extra_type TEXT, -- example: ['wides', 'noballs']\n    extra_runs INTEGER, -- example: [1, 4, 2]\n    innings_no INTEGER, -- example: [1, 2]\n    PRIMARY KEY (match_id)\n);",
        "question": "Calculate the total number of wickets taken by each bowler (excluding run-outs and other dismissals not attributed to the bowler), their economy rate (total runs conceded divided by total overs bowled, considering only runs scored off the bat and ignoring any extra runs like wides and no-balls), their strike rate (average number of balls bowled per wicket taken), and their best bowling performance in a single match (the match with the most wickets taken by the bowler, formatted as \"wickets-runs\" where runs are the runs conceded excluding extras).",
        "instance_id": "local258",
        "db_id": "IPL"
    },
    {
        "db_desc": "CREATE TABLE player (\n    player_id INTEGER, -- example: [1, 2, 3]\n    player_name TEXT, -- example: ['SC Ganguly', 'BB McCullum', 'RT Ponting']\n    batting_hand TEXT, -- example: ['Right-hand bat']\n    bowling_skill TEXT, -- example: ['Right-arm medium', 'Right-arm offbreak', 'Right-arm fast-medium']\n    country_name TEXT, -- example: ['India', 'New Zealand', 'Australia']\n    PRIMARY KEY (player_id)\n);\n\nCREATE TABLE team (\n    team_id INTEGER, -- example: [2, 3, 4]\n    name TEXT, -- example: ['Royal Challengers Bangalore', 'Chennai Super Kings', 'Kings XI Punjab']\n    PRIMARY KEY (team_id)\n);\n\nCREATE TABLE `match` (\n    match_id INTEGER, -- example: [335987, 335988, 335989]\n    team_1 INTEGER, -- example: [2, 4, 6]\n    team_2 INTEGER, -- example: [1, 3, 5]\n    match_date DATE, -- example: ['2008-04-18', '2008-04-19', '2008-04-20']\n    venue TEXT, -- example: ['M Chinnaswamy Stadium', 'Punjab Cricket Association Stadium Mohal', 'Feroz Shah Kotla']\n    win_type TEXT, -- example: ['wickets', 'runs']\n    match_winner INTEGER, -- example: [1, 3, 6]\n    man_of_the_match INTEGER, -- example: [2, 19, 90]\n    PRIMARY KEY (match_id)\n);\n\nCREATE TABLE player_match (\n    match_id INTEGER, -- example: [335987, 335988, 335989]\n    player_id INTEGER, -- example: [1, 2, 3]\n    `role` TEXT, -- example: ['Player']\n    team_id INTEGER, -- example: [7, 1, 11]\n    PRIMARY KEY (match_id)\n);\n\nCREATE TABLE ball_by_ball (\n    match_id INTEGER, -- example: [335987, 335988, 335989]\n    over_id INTEGER, -- example: [1, 2, 3]\n    ball_id INTEGER, -- example: [1, 2, 3]\n    innings_no INTEGER, -- example: [2, 1]\n    team_batting INTEGER, -- example: [2, 1, 3]\n    team_bowling INTEGER, -- example: [1, 2, 4]\n    striker_batting_position INTEGER, -- example: [1, 2, 3]\n    striker INTEGER, -- example: [6, 2, 7]\n    bowler INTEGER, -- example: [106, 14, 15]\n    PRIMARY KEY (match_id)\n);\n\nCREATE TABLE batsman_scored (\n    match_id INTEGER, -- example: [335987, 335988, 335989]\n    over_id INTEGER, -- example: [1, 2, 3]\n    ball_id INTEGER, -- example: [1, 2, 3]\n    runs_scored INTEGER, -- example: [1, 0, 4]\n    innings_no INTEGER, -- example: [2, 1]\n    PRIMARY KEY (match_id)\n);\n\nCREATE TABLE wicket_taken (\n    match_id INTEGER, -- example: [335987, 335988, 335989]\n    over_id INTEGER, -- example: [2, 3, 5]\n    ball_id INTEGER, -- example: [1, 2, 5]\n    player_out INTEGER, -- example: [154, 46, 8]\n    kind_out TEXT, -- example: ['bowled']\n    innings_no INTEGER, -- example: [2, 1]\n    PRIMARY KEY (match_id)\n);\n\nCREATE TABLE extra_runs (\n    match_id INTEGER, -- example: [335987, 335988, 335989]\n    over_id INTEGER, -- example: [1, 2, 3]\n    ball_id INTEGER, -- example: [1, 2, 3]\n    extra_type TEXT, -- example: ['legbyes', 'wides', 'byes']\n    extra_runs INTEGER, -- example: [1, 4, 2]\n    innings_no INTEGER, -- example: [1, 2]\n    PRIMARY KEY (match_id)\n);",
        "question": "For each player, list their ID, name, their most frequent role across all matches, batting hand, bowling skill, total runs scored, total matches played, total times they were dismissed, batting average (total runs divided by total dismissals), highest score in a single match, the number of matches in which they scored at least 30 runs, at least 50 runs, and at least 100 runs, total balls faced in their career, strike rate (total runs divided by total balls faced, multiplied by 100), total wickets taken, economy rate (average runs conceded per over), and their best bowling performance in a single match (most wickets taken in a match, formatted as \"wickets taken-runs given\", where the best performance is the one with the most wickets, and if tied, the fewest runs conceded). Ignore the extra runs data.",
        "instance_id": "local259",
        "db_id": "IPL"
    },
    {
        "db_desc": "CREATE TABLE problem (\n    name TEXT, -- example: ['Critical Heat Flux', 'Delaney solubility', 'Franck-Hertz']\n    path TEXT, -- example: ['https://www.kaggle.com/datasets/uciml/ir', 'https://www.kaggle.com/datasets/prathamt', 'https://www.kaggle.com/datasets/prashant']\n    type TEXT, -- example: ['classification', 'regression']\n    PRIMARY KEY (name)\n);\n\nCREATE TABLE eda (\n    name TEXT, -- example: ['iris', 'concrete', 'Delaney solubility']\n    version INTEGER, -- example: [1, 2, 3]\n    type TEXT, -- example: ['num', 'cat']\n\nCREATE TABLE feature_importance (\n    name TEXT, -- example: ['iris', 'concrete', 'Delaney solubility']\n    version INTEGER, -- example: [1, 2, 3]\n    step INTEGER, -- example: [1, 2, 3]\n\nCREATE TABLE solution (\n    name TEXT, -- example: ['iris', 'concrete', 'Delaney solubility']\n    version INTEGER, -- example: [1, 2, 3]\n    nb_model INTEGER, -- example: [5, 2, 3]\n    score NUMERIC, -- example: [0.7, 0.5, 0.9]\n\nCREATE TABLE model_score (\n    name TEXT, -- example: ['iris', 'concrete', 'Delaney solubility']\n    version INTEGER, -- example: [1, 2, 3]\n    step INTEGER, -- example: [1, 2, 3]\n    model TEXT, -- example: ['Stack']\n    train_score NUMERIC, -- example: [0.96, 0.74, 0.79]\n    test_score NUMERIC, -- example: [0.66, 0.74, 0.82]\n);\n\nCREATE TABLE model_importance (\n    name TEXT, -- example: ['iris', 'concrete', 'Delaney solubility']\n    version INTEGER, -- example: [1, 2, 3]\n    step INTEGER, -- example: [1, 2, 3]\n    model TEXT, -- example: ['LOGRSCV', 'LOGRLCV', 'MLPC1']\n\nCREATE TABLE model (\n    name TEXT, -- example: ['iris', 'concrete', 'Delaney solubility']\n    version INTEGER, -- example: [1, 2, 3]\n    step INTEGER, -- example: [1, 2, 3]\n    L1_model TEXT, -- example: ['regression', 'tree']\n);",
        "question": "Which problems exceed the total number of times they appear in the solution table when counting all occurrences, across steps 1, 2, and 3, where any non-\"Stack\" model's maximum test score is lower than the \"Stack\" model's test score for the same step and version?",
        "instance_id": "local262",
        "db_id": "stacking"
    },
    {
        "db_desc": "CREATE TABLE problem (\n    name TEXT, -- example: ['Critical Heat Flux', 'Delaney solubility', 'Franck-Hertz']\n    path TEXT, -- example: ['https://www.kaggle.com/datasets/uciml/ir', 'https://www.kaggle.com/datasets/prathamt', 'https://www.kaggle.com/datasets/prashant']\n    type TEXT, -- example: ['classification', 'regression']\n    PRIMARY KEY (name)\n);\n\nCREATE TABLE eda (\n    name TEXT, -- example: ['iris', 'concrete', 'Delaney solubility']\n    version INTEGER, -- example: [1, 2, 3]\n    feature TEXT, -- example: ['Strength']\n    type TEXT, -- example: ['num', 'cat']\n\nCREATE TABLE feature_importance (\n    name TEXT, -- example: ['iris', 'concrete', 'Delaney solubility']\n    version INTEGER, -- example: [1, 2, 3]\n    step INTEGER, -- example: [1, 2, 3]\n    importance NUMERIC, -- example: [0, 0.28125, 0.7187499999999999]\n);\n\nCREATE TABLE solution (\n    name TEXT, -- example: ['iris', 'concrete', 'Delaney solubility']\n    version INTEGER, -- example: [1, 2, 3]\n    correlation NUMERIC, -- example: [0.75]\n    nb_model INTEGER, -- example: [5, 2, 3]\n    score NUMERIC, -- example: [0.7, 0.5, 0.9]\n\nCREATE TABLE model_score (\n    name TEXT, -- example: ['iris', 'concrete', 'Delaney solubility']\n    version INTEGER, -- example: [1, 2, 3]\n    step INTEGER, -- example: [1, 2, 3]\n    model TEXT, -- example: ['Stack']\n    train_score NUMERIC, -- example: [0.96, 0.74, 0.79]\n    test_score NUMERIC, -- example: [0.66, 0.74, 0.82]\n);\n\nCREATE TABLE model_importance (\n    name TEXT, -- example: ['iris', 'concrete', 'Delaney solubility']\n    version INTEGER, -- example: [1, 2, 3]\n    step INTEGER, -- example: [1, 2, 3]\n    model TEXT, -- example: ['LOGRSCV', 'LOGRLCV', 'MLPC1']\n    importance NUMERIC, -- example: [0.0027022443424496926, 0.0027583162720716957, 0.0076949449019090045]\n);\n\nCREATE TABLE model (\n    name TEXT, -- example: ['iris', 'concrete', 'Delaney solubility']\n    version INTEGER, -- example: [1, 2, 3]\n    step INTEGER, -- example: [1, 2, 3]\n    L1_model TEXT, -- example: ['regression', 'tree']\n);",
        "question": "Identify the L1_model associated with each model (specified by name and version) that occurs most frequently for each status ('strong' or 'soft'), along with the number of times it occurs. A model has a 'strong' status if, for any of its steps, the maximum test score among non-'Stack' models is less than the 'Stack' model's test score. It has a 'soft' status if the maximum test score among non-'Stack' models equals the 'Stack' model's test score. Count how many times each L1_model is associated with a 'strong' or 'soft' status across all models, and determine which L1_model has the highest occurrence for each status.",
        "instance_id": "local263",
        "db_id": "stacking"
    },
    {
        "db_desc": "CREATE TABLE problem (\n    name TEXT, -- example: ['Critical Heat Flux', 'Delaney solubility', 'Franck-Hertz']\n    path TEXT, -- example: ['https://www.kaggle.com/datasets/uciml/ir', 'https://www.kaggle.com/datasets/prathamt', 'https://www.kaggle.com/datasets/prashant']\n    type TEXT, -- example: ['classification', 'regression']\n    PRIMARY KEY (name)\n);\n\nCREATE TABLE eda (\n    name TEXT, -- example: ['iris', 'concrete', 'Delaney solubility']\n    version INTEGER, -- example: [1, 2, 3]\n    feature TEXT, -- example: ['sepal_length', 'sepal_width', 'petal_length']\n    type TEXT, -- example: ['num', 'cat']\n\nCREATE TABLE feature_importance (\n    name TEXT, -- example: ['iris', 'concrete', 'Delaney solubility']\n    version INTEGER, -- example: [1, 2, 3]\n    step INTEGER, -- example: [1, 2, 3]\n    feature TEXT, -- example: ['petal_length', 'petal_width', 'sepal_width']\n\nCREATE TABLE solution (\n    name TEXT, -- example: ['iris', 'concrete', 'Delaney solubility']\n    version INTEGER, -- example: [1, 2, 3]\n    nb_model INTEGER, -- example: [5, 2, 3]\n    score NUMERIC, -- example: [0.7, 0.5, 0.9]\n\nCREATE TABLE model_score (\n    name TEXT, -- example: ['iris', 'concrete', 'Delaney solubility']\n    version INTEGER, -- example: [1, 2, 3]\n    step INTEGER, -- example: [1, 2, 3]\n    model TEXT, -- example: ['Stack']\n\nCREATE TABLE model_importance (\n    name TEXT, -- example: ['iris', 'concrete', 'Delaney solubility']\n    version INTEGER, -- example: [1, 2, 3]\n    step INTEGER, -- example: [1, 2, 3]\n    model TEXT, -- example: ['LOGRSCV', 'LOGRLCV', 'MLPC1']\n\nCREATE TABLE model (\n    name TEXT, -- example: ['iris', 'concrete', 'Delaney solubility']\n    version INTEGER, -- example: [1, 2, 3]\n    step INTEGER, -- example: [1, 2, 3]\n    L1_model TEXT, -- example: ['regression', 'tree']\n);",
        "question": "Which model category (L1_model) appears the most frequently across all steps and versions when comparing traditional models to the Stack model, and what is the total count of its occurrences?",
        "instance_id": "local264",
        "db_id": "stacking"
    },
    {
        "db_desc": "CREATE TABLE customers (\n    id INTEGER, -- example: [50042, 50741, 51007]\n    PRIMARY KEY (id)\n);\n\nCREATE TABLE conway_gen_zero (\n    x INTEGER,\n    y INTEGER,\n    alive INTEGER,\n    PRIMARY KEY (x)\n);\n\nCREATE TABLE web_devices (\n    pc INTEGER, -- example: [1042, 967]\n    PRIMARY KEY (`day`)\n);\n\nCREATE TABLE web_demographics (\n    m_tw_qty INTEGER, -- example: [86, 142]\n    f_tw_qty INTEGER, -- example: [76, 92]\n    PRIMARY KEY (`day`)\n);\n\nCREATE TABLE channels_dim (\n    id INTEGER, -- example: [42, 44]\n    PRIMARY KEY (id)\n);\n\nCREATE TABLE gender_dim (\n    PRIMARY KEY (letter)\n);\n\nCREATE TABLE packaging (\n    id INTEGER, -- example: [501, 502, 511]\n    PRIMARY KEY (id)\n);\n\nCREATE TABLE packaging_relations (\n    packaging_id INTEGER, -- example: [511, 521, 522]\n    contains_id INTEGER, -- example: [501, 502, 511]\n    qty INTEGER, -- example: [3, 2, 72]\n    PRIMARY KEY (packaging_id),\n    CONSTRAINT fk_packaging_relations_packaging_id FOREIGN KEY (packaging_id) REFERENCES packaging (id),\n    CONSTRAINT fk_packaging_relations_contains_id FOREIGN KEY (contains_id) REFERENCES packaging (id)\n);\n\nCREATE TABLE product_groups (\n    id INTEGER, -- example: [142, 152, 202]\n    PRIMARY KEY (id)\n);\n\nCREATE TABLE products (\n    id INTEGER, -- example: [4040, 4160, 4280]\n    group_id INTEGER, -- example: [142, 152, 202]\n    PRIMARY KEY (id),\n    CONSTRAINT fk_products_group_id FOREIGN KEY (group_id) REFERENCES product_groups (id)\n);\n\nCREATE TABLE monthly_sales (\n    product_id INTEGER, -- example: [4040, 4160, 4280]\n    qty INTEGER, -- example: [42, 37, 39]\n    PRIMARY KEY (product_id),\n    CONSTRAINT fk_monthly_sales_product_id FOREIGN KEY (product_id) REFERENCES products (id)\n);\n\nCREATE TABLE breweries (\n    id INTEGER, -- example: [518, 523, 536]\n    PRIMARY KEY (id)\n);\n\nCREATE TABLE purchases (\n    id INTEGER, -- example: [601, 611, 621]\n    brewery_id INTEGER, -- example: [518, 523, 536]\n    product_id INTEGER, -- example: [4040, 4160, 4280]\n    qty INTEGER, -- example: [52, 17, 34]\n    cost REAL, -- example: [388.0, 122.0, 163.0]\n    PRIMARY KEY (id),\n    CONSTRAINT fk_purchases_brewery_id FOREIGN KEY (brewery_id) REFERENCES breweries (id),\n    CONSTRAINT fk_purchases_product_id FOREIGN KEY (product_id) REFERENCES products (id)\n);\n\nCREATE TABLE product_alcohol (\n    product_id INTEGER, -- example: [4040, 4160, 4280]\n    PRIMARY KEY (product_id),\n    CONSTRAINT fk_product_alcohol_product_id FOREIGN KEY (product_id) REFERENCES products (id)\n);\n\nCREATE TABLE customer_favorites (\n    customer_id INTEGER, -- example: [50042, 50741, 51007]\n    PRIMARY KEY (customer_id),\n    CONSTRAINT fk_customer_favorites_customer_id FOREIGN KEY (customer_id) REFERENCES customers (id)\n);\n\nCREATE TABLE customer_reviews (\n    customer_id INTEGER, -- example: [50042, 50741, 51007]\n    PRIMARY KEY (customer_id),\n    CONSTRAINT fk_customer_reviews_customer_id FOREIGN KEY (customer_id) REFERENCES customers (id)\n);\n\nCREATE TABLE locations (\n    id INTEGER, -- example: [1, 2, 3]\n    PRIMARY KEY (id)\n);\n\nCREATE TABLE inventory (\n    id INTEGER, -- example: [1148, 1151, 1154]\n    location_id INTEGER, -- example: [2, 3, 4]\n    product_id INTEGER, -- example: [4040, 4160, 4280]\n    purchase_id INTEGER, -- example: [719, 720, 721]\n    qty REAL, -- example: [11.0, 48.0, 36.0]\n    PRIMARY KEY (id),\n    CONSTRAINT fk_inventory_location_id FOREIGN KEY (location_id) REFERENCES locations (id),\n    CONSTRAINT fk_inventory_product_id FOREIGN KEY (product_id) REFERENCES products (id),\n    CONSTRAINT fk_inventory_purchase_id FOREIGN KEY (purchase_id) REFERENCES purchases (id)\n);\n\nCREATE TABLE orders (\n    id INTEGER, -- example: [421, 427, 429]\n    customer_id INTEGER, -- example: [50042, 50741, 51069]\n    delivery TEXT,\n    PRIMARY KEY (id),\n    CONSTRAINT fk_orders_customer_id FOREIGN KEY (customer_id) REFERENCES customers (id)\n);\n\nCREATE TABLE orderlines (\n    id INTEGER, -- example: [9120, 9122, 9233]\n    order_id INTEGER, -- example: [421, 422, 423]\n    product_id INTEGER, -- example: [4280, 6520, 6600]\n    qty REAL, -- example: [110.0, 140.0, 80.0]\n    amount REAL, -- example: [2400.0, 2250.0, 1750.0]\n    PRIMARY KEY (id),\n    CONSTRAINT fk_orderlines_order_id FOREIGN KEY (order_id) REFERENCES orders (id),\n    CONSTRAINT fk_orderlines_product_id FOREIGN KEY (product_id) REFERENCES products (id)\n);\n\nCREATE TABLE monthly_budget (\n    product_id INTEGER, -- example: [6520, 6600]\n    qty REAL, -- example: [30.0, 40.0, 50.0]\n    PRIMARY KEY (product_id),\n    CONSTRAINT fk_monthly_budget_product_id FOREIGN KEY (product_id) REFERENCES products (id)\n);\n\nCREATE TABLE product_minimums (\n    product_id INTEGER, -- example: [6520, 6600]\n    PRIMARY KEY (product_id),\n    CONSTRAINT fk_product_minimums_product_id FOREIGN KEY (product_id) REFERENCES products (id)\n);\n\nCREATE TABLE stock (\n    symbol TEXT, -- example: ['BEER']\n    PRIMARY KEY (symbol)\n);\n\nCREATE TABLE ticker (\n    symbol TEXT, -- example: ['BEER']\n    price REAL, -- example: [14.9, 14.2, 15.7]\n    PRIMARY KEY (symbol),\n    CONSTRAINT fk_ticker_symbol FOREIGN KEY (symbol) REFERENCES stock (symbol)\n);\n\nCREATE TABLE web_apps (\n    id INTEGER, -- example: [542]\n    PRIMARY KEY (id)\n);\n\nCREATE TABLE web_pages (\n    app_id INTEGER, -- example: [542]\n    page_no INTEGER, -- example: [1, 2, 3]\n    PRIMARY KEY (app_id),\n    CONSTRAINT fk_web_pages_app_id FOREIGN KEY (app_id) REFERENCES web_apps (id)\n);\n\nCREATE TABLE web_counter_hist (\n    app_id INTEGER, -- example: [542]\n    page_no INTEGER, -- example: [1, 2, 3]\n    PRIMARY KEY (app_id),\n    CONSTRAINT fk_web_counter_hist_app_id FOREIGN KEY (app_id) REFERENCES web_pages (app_id),\n    CONSTRAINT fk_web_counter_hist_page_no FOREIGN KEY (page_no) REFERENCES web_pages (page_no)\n);\n\nCREATE TABLE server_heartbeat (\n    \n\nCREATE TABLE web_page_visits (\n    app_id INTEGER, -- example: [542]\n    page_no INTEGER, -- example: [1, 2, 3]\n    CONSTRAINT fk_web_page_visits_app_id FOREIGN KEY (app_id) REFERENCES web_pages (app_id),\n    CONSTRAINT fk_web_page_visits_page_no FOREIGN KEY (page_no) REFERENCES web_pages (page_no)\n);\n\nCREATE TABLE employees (\n    id INTEGER, -- example: [142, 144, 147]\n    title TEXT, -- example: ['Managing Director', 'IT Manager', 'Product Director']\n    supervisor_id INTEGER, -- example: [142, 143, 144]\n    PRIMARY KEY (id),\n    CONSTRAINT fk_employees_supervisor_id FOREIGN KEY (supervisor_id) REFERENCES employees (id)\n);\n\nCREATE TABLE emp_hire_periods (\n    emp_id INTEGER, -- example: [142, 143, 144]\n    end_ TEXT, -- example: ['2012-04-01', '2014-01-01', '2016-06-01']\n    title TEXT, -- example: ['Product Director', 'Managing Director', 'IT Technician']\n    PRIMARY KEY (emp_id),\n    CONSTRAINT fk_emp_hire_periods_emp_id FOREIGN KEY (emp_id) REFERENCES employees (id)\n);\n\nCREATE TABLE picking_list (\n    id INTEGER, -- example: [841, 842]\n    picker_emp_id INTEGER, -- example: [149, 152]\n    PRIMARY KEY (id),\n    CONSTRAINT fk_picking_list_picker_emp_id FOREIGN KEY (picker_emp_id) REFERENCES employees (id)\n);\n\nCREATE TABLE picking_line (\n    picklist_id INTEGER, -- example: [841, 842]\n    line_no INTEGER, -- example: [1, 2, 3]\n    location_id INTEGER, -- example: [16, 29, 65]\n    order_id INTEGER, -- example: [421, 422, 423]\n    product_id INTEGER, -- example: [4280, 6520]\n    qty REAL, -- example: [42.0, 14.0, 20.0]\n    PRIMARY KEY (picklist_id),\n    CONSTRAINT fk_picking_line_picklist_id FOREIGN KEY (picklist_id) REFERENCES picking_list (id),\n    CONSTRAINT fk_picking_line_location_id FOREIGN KEY (location_id) REFERENCES locations (id),\n    CONSTRAINT fk_picking_line_order_id FOREIGN KEY (order_id) REFERENCES orders (id),\n    CONSTRAINT fk_picking_line_product_id FOREIGN KEY (product_id) REFERENCES products (id)\n);\n\nCREATE TABLE picking_log (\n    picklist_id INTEGER, -- example: [841, 842]\n    activity TEXT, -- example: ['D', 'A', 'P']\n    location_id INTEGER, -- example: [16, 29, 65]\n    pickline_no INTEGER, -- example: [1, 2, 3]\n    PRIMARY KEY (picklist_id),\n    CONSTRAINT fk_picking_log_picklist_id FOREIGN KEY (picklist_id) REFERENCES picking_line (picklist_id),\n    CONSTRAINT fk_picking_log_picklist_id FOREIGN KEY (picklist_id) REFERENCES picking_list (id),\n    CONSTRAINT fk_picking_log_location_id FOREIGN KEY (location_id) REFERENCES locations (id),\n    CONSTRAINT fk_picking_log_pickline_no FOREIGN KEY (pickline_no) REFERENCES picking_line (line_no)\n);\n\nCREATE TABLE id_name_type (\n    id INTEGER,\n    name TEXT,\n    PRIMARY KEY (id)\n);\n\nCREATE TABLE id_name_coll_type (\n    collection_id INTEGER,\n    PRIMARY KEY (collection_id)\n);\n\nCREATE TABLE id_name_coll_entries (\n    collection_id INTEGER,\n    id INTEGER,\n    name TEXT,\n    PRIMARY KEY (collection_id),\n    CONSTRAINT fk_id_name_coll_entries_collection_id FOREIGN KEY (collection_id) REFERENCES id_name_coll_type (collection_id)\n);\n\nCREATE TABLE favorite_coll_type (\n    id INTEGER,\n    PRIMARY KEY (id)\n);",
        "question": "What is the average total quantity across all final packaging combinations, considering only the leaf-level items within each combination after fully expanding any nested packaging relationships?",
        "instance_id": "local269",
        "db_id": "oracle_sql"
    },
    {
        "db_desc": "CREATE TABLE customers (\n    id INTEGER, -- example: [50042, 50741, 51007]\n    name TEXT, -- example: ['The White Hart', 'Hygge og Humle', 'Boom Beer Bar']\n    PRIMARY KEY (id)\n);\n\nCREATE TABLE conway_gen_zero (\n    x INTEGER,\n    y INTEGER,\n    alive INTEGER,\n    PRIMARY KEY (x)\n);\n\nCREATE TABLE web_devices (\n    `day` TEXT, -- example: ['2019-05-01', '2019-05-02']\n    pc INTEGER, -- example: [1042, 967]\n    phone INTEGER, -- example: [1610, 2159]\n    PRIMARY KEY (`day`)\n);\n\nCREATE TABLE web_demographics (\n    `day` TEXT, -- example: ['2019-05-01', '2019-05-02']\n    m_tw_qty INTEGER, -- example: [86, 142]\n    f_tw_qty INTEGER, -- example: [76, 92]\n    PRIMARY KEY (`day`)\n);\n\nCREATE TABLE channels_dim (\n    id INTEGER, -- example: [42, 44]\n    name TEXT, -- example: ['Twitter', 'Facebook']\n    PRIMARY KEY (id)\n);\n\nCREATE TABLE gender_dim (\n    name TEXT, -- example: ['Female', 'Male']\n    PRIMARY KEY (letter)\n);\n\nCREATE TABLE packaging (\n    id INTEGER, -- example: [501, 502, 511]\n    name TEXT, -- example: ['Bottle 330cl', 'Bottle 500cl', 'Gift Carton']\n    PRIMARY KEY (id)\n);\n\nCREATE TABLE packaging_relations (\n    packaging_id INTEGER, -- example: [511, 521, 522]\n    contains_id INTEGER, -- example: [501, 502, 511]\n    qty INTEGER, -- example: [3, 2, 72]\n    PRIMARY KEY (packaging_id),\n    CONSTRAINT fk_packaging_relations_packaging_id FOREIGN KEY (packaging_id) REFERENCES packaging (id),\n    CONSTRAINT fk_packaging_relations_contains_id FOREIGN KEY (contains_id) REFERENCES packaging (id)\n);\n\nCREATE TABLE product_groups (\n    id INTEGER, -- example: [142, 152, 202]\n    name TEXT, -- example: ['Stout', 'Belgian', 'Wheat']\n    PRIMARY KEY (id)\n);\n\nCREATE TABLE products (\n    id INTEGER, -- example: [4040, 4160, 4280]\n    name TEXT, -- example: ['Coalminers Sweat', 'Reindeer Fuel', 'Hoppy Crude Oil']\n    group_id INTEGER, -- example: [142, 152, 202]\n    PRIMARY KEY (id),\n    CONSTRAINT fk_products_group_id FOREIGN KEY (group_id) REFERENCES product_groups (id)\n);\n\nCREATE TABLE monthly_sales (\n    product_id INTEGER, -- example: [4040, 4160, 4280]\n    qty INTEGER, -- example: [42, 37, 39]\n    PRIMARY KEY (product_id),\n    CONSTRAINT fk_monthly_sales_product_id FOREIGN KEY (product_id) REFERENCES products (id)\n);\n\nCREATE TABLE breweries (\n    id INTEGER, -- example: [518, 523, 536]\n    name TEXT, -- example: ['Balthazar Brauerei', 'Happy Hoppy Hippo', 'Brewing Barbarian']\n    PRIMARY KEY (id)\n);\n\nCREATE TABLE purchases (\n    id INTEGER, -- example: [601, 611, 621]\n    brewery_id INTEGER, -- example: [518, 523, 536]\n    product_id INTEGER, -- example: [4040, 4160, 4280]\n    qty INTEGER, -- example: [52, 17, 34]\n    cost REAL, -- example: [388.0, 122.0, 163.0]\n    PRIMARY KEY (id),\n    CONSTRAINT fk_purchases_brewery_id FOREIGN KEY (brewery_id) REFERENCES breweries (id),\n    CONSTRAINT fk_purchases_product_id FOREIGN KEY (product_id) REFERENCES products (id)\n);\n\nCREATE TABLE product_alcohol (\n    product_id INTEGER, -- example: [4040, 4160, 4280]\n    PRIMARY KEY (product_id),\n    CONSTRAINT fk_product_alcohol_product_id FOREIGN KEY (product_id) REFERENCES products (id)\n);\n\nCREATE TABLE customer_favorites (\n    customer_id INTEGER, -- example: [50042, 50741, 51007]\n    PRIMARY KEY (customer_id),\n    CONSTRAINT fk_customer_favorites_customer_id FOREIGN KEY (customer_id) REFERENCES customers (id)\n);\n\nCREATE TABLE customer_reviews (\n    customer_id INTEGER, -- example: [50042, 50741, 51007]\n    PRIMARY KEY (customer_id),\n    CONSTRAINT fk_customer_reviews_customer_id FOREIGN KEY (customer_id) REFERENCES customers (id)\n);\n\nCREATE TABLE locations (\n    id INTEGER, -- example: [1, 2, 3]\n    warehouse INTEGER, -- example: [1, 2]\n    PRIMARY KEY (id)\n);\n\nCREATE TABLE inventory (\n    id INTEGER, -- example: [1148, 1151, 1154]\n    location_id INTEGER, -- example: [2, 3, 4]\n    product_id INTEGER, -- example: [4040, 4160, 4280]\n    purchase_id INTEGER, -- example: [719, 720, 721]\n    qty REAL, -- example: [11.0, 48.0, 36.0]\n    PRIMARY KEY (id),\n    CONSTRAINT fk_inventory_location_id FOREIGN KEY (location_id) REFERENCES locations (id),\n    CONSTRAINT fk_inventory_product_id FOREIGN KEY (product_id) REFERENCES products (id),\n    CONSTRAINT fk_inventory_purchase_id FOREIGN KEY (purchase_id) REFERENCES purchases (id)\n);\n\nCREATE TABLE orders (\n    id INTEGER, -- example: [421, 427, 429]\n    customer_id INTEGER, -- example: [50042, 50741, 51069]\n    delivery TEXT,\n    PRIMARY KEY (id),\n    CONSTRAINT fk_orders_customer_id FOREIGN KEY (customer_id) REFERENCES customers (id)\n);\n\nCREATE TABLE orderlines (\n    id INTEGER, -- example: [9120, 9122, 9233]\n    order_id INTEGER, -- example: [421, 422, 423]\n    product_id INTEGER, -- example: [4280, 6520, 6600]\n    qty REAL, -- example: [110.0, 140.0, 80.0]\n    amount REAL, -- example: [2400.0, 2250.0, 1750.0]\n    PRIMARY KEY (id),\n    CONSTRAINT fk_orderlines_order_id FOREIGN KEY (order_id) REFERENCES orders (id),\n    CONSTRAINT fk_orderlines_product_id FOREIGN KEY (product_id) REFERENCES products (id)\n);\n\nCREATE TABLE monthly_budget (\n    product_id INTEGER, -- example: [6520, 6600]\n    qty REAL, -- example: [30.0, 40.0, 50.0]\n    PRIMARY KEY (product_id),\n    CONSTRAINT fk_monthly_budget_product_id FOREIGN KEY (product_id) REFERENCES products (id)\n);\n\nCREATE TABLE product_minimums (\n    product_id INTEGER, -- example: [6520, 6600]\n    PRIMARY KEY (product_id),\n    CONSTRAINT fk_product_minimums_product_id FOREIGN KEY (product_id) REFERENCES products (id)\n);\n\nCREATE TABLE stock (\n    symbol TEXT, -- example: ['BEER']\n    company TEXT, -- example: ['Good Beer Trading Co']\n    PRIMARY KEY (symbol)\n);\n\nCREATE TABLE ticker (\n    symbol TEXT, -- example: ['BEER']\n    `day` TEXT, -- example: ['2019-04-01', '2019-04-02', '2019-04-03']\n    price REAL, -- example: [14.9, 14.2, 15.7]\n    PRIMARY KEY (symbol),\n    CONSTRAINT fk_ticker_symbol FOREIGN KEY (symbol) REFERENCES stock (symbol)\n);\n\nCREATE TABLE web_apps (\n    id INTEGER, -- example: [542]\n    name TEXT, -- example: ['Webshop']\n    PRIMARY KEY (id)\n);\n\nCREATE TABLE web_pages (\n    app_id INTEGER, -- example: [542]\n    page_no INTEGER, -- example: [1, 2, 3]\n    PRIMARY KEY (app_id),\n    CONSTRAINT fk_web_pages_app_id FOREIGN KEY (app_id) REFERENCES web_apps (id)\n);\n\nCREATE TABLE web_counter_hist (\n    app_id INTEGER, -- example: [542]\n    page_no INTEGER, -- example: [1, 2, 3]\n    `day` TEXT, -- example: ['2019-04-01', '2019-04-02', '2019-04-03']\n    PRIMARY KEY (app_id),\n    CONSTRAINT fk_web_counter_hist_app_id FOREIGN KEY (app_id) REFERENCES web_pages (app_id),\n    CONSTRAINT fk_web_counter_hist_page_no FOREIGN KEY (page_no) REFERENCES web_pages (page_no)\n);\n\nCREATE TABLE server_heartbeat (\n    beat_time TEXT, -- example: ['2019-04-10 13:00', '2019-04-10 13:05', '2019-04-10 13:10']\n);\n\nCREATE TABLE web_page_visits (\n    app_id INTEGER, -- example: [542]\n    page_no INTEGER, -- example: [1, 2, 3]\n    CONSTRAINT fk_web_page_visits_app_id FOREIGN KEY (app_id) REFERENCES web_pages (app_id),\n    CONSTRAINT fk_web_page_visits_page_no FOREIGN KEY (page_no) REFERENCES web_pages (page_no)\n);\n\nCREATE TABLE employees (\n    id INTEGER, -- example: [142, 144, 147]\n    name TEXT, -- example: ['Harold King', 'Mogens Juel', 'Axel de Proef']\n    supervisor_id INTEGER, -- example: [142, 143, 144]\n    PRIMARY KEY (id),\n    CONSTRAINT fk_employees_supervisor_id FOREIGN KEY (supervisor_id) REFERENCES employees (id)\n);\n\nCREATE TABLE emp_hire_periods (\n    emp_id INTEGER, -- example: [142, 143, 144]\n    PRIMARY KEY (emp_id),\n    CONSTRAINT fk_emp_hire_periods_emp_id FOREIGN KEY (emp_id) REFERENCES employees (id)\n);\n\nCREATE TABLE picking_list (\n    id INTEGER, -- example: [841, 842]\n    created TEXT, -- example: ['2019-01-16 14:03:41', '2019-01-19 15:57:42']\n    picker_emp_id INTEGER, -- example: [149, 152]\n    PRIMARY KEY (id),\n    CONSTRAINT fk_picking_list_picker_emp_id FOREIGN KEY (picker_emp_id) REFERENCES employees (id)\n);\n\nCREATE TABLE picking_line (\n    picklist_id INTEGER, -- example: [841, 842]\n    line_no INTEGER, -- example: [1, 2, 3]\n    location_id INTEGER, -- example: [16, 29, 65]\n    order_id INTEGER, -- example: [421, 422, 423]\n    product_id INTEGER, -- example: [4280, 6520]\n    qty REAL, -- example: [42.0, 14.0, 20.0]\n    PRIMARY KEY (picklist_id),\n    CONSTRAINT fk_picking_line_picklist_id FOREIGN KEY (picklist_id) REFERENCES picking_list (id),\n    CONSTRAINT fk_picking_line_location_id FOREIGN KEY (location_id) REFERENCES locations (id),\n    CONSTRAINT fk_picking_line_order_id FOREIGN KEY (order_id) REFERENCES orders (id),\n    CONSTRAINT fk_picking_line_product_id FOREIGN KEY (product_id) REFERENCES products (id)\n);\n\nCREATE TABLE picking_log (\n    picklist_id INTEGER, -- example: [841, 842]\n    activity TEXT, -- example: ['D', 'A', 'P']\n    location_id INTEGER, -- example: [16, 29, 65]\n    pickline_no INTEGER, -- example: [1, 2, 3]\n    PRIMARY KEY (picklist_id),\n    CONSTRAINT fk_picking_log_picklist_id FOREIGN KEY (picklist_id) REFERENCES picking_line (picklist_id),\n    CONSTRAINT fk_picking_log_picklist_id FOREIGN KEY (picklist_id) REFERENCES picking_list (id),\n    CONSTRAINT fk_picking_log_location_id FOREIGN KEY (location_id) REFERENCES locations (id),\n    CONSTRAINT fk_picking_log_pickline_no FOREIGN KEY (pickline_no) REFERENCES picking_line (line_no)\n);\n\nCREATE TABLE id_name_type (\n    id INTEGER,\n    name TEXT,\n    PRIMARY KEY (id)\n);\n\nCREATE TABLE id_name_coll_type (\n    collection_id INTEGER,\n    PRIMARY KEY (collection_id)\n);\n\nCREATE TABLE id_name_coll_entries (\n    collection_id INTEGER,\n    id INTEGER,\n    name TEXT,\n    PRIMARY KEY (collection_id),\n    CONSTRAINT fk_id_name_coll_entries_collection_id FOREIGN KEY (collection_id) REFERENCES id_name_coll_type (collection_id)\n);\n\nCREATE TABLE favorite_coll_type (\n    id INTEGER,\n    PRIMARY KEY (id)\n);",
        "question": "Which top-level packaging containers, meaning those not contained within any other packaging, have any item for which the total quantity accumulated across all nested levels in the hierarchy exceeds 500, and what are the names of both these containers and the corresponding items?",
        "instance_id": "local270",
        "db_id": "oracle_sql"
    },
    {
        "db_desc": "CREATE TABLE customers (\n    id INTEGER, -- example: [50042, 50741, 51007]\n    name TEXT, -- example: ['The White Hart', 'Hygge og Humle', 'Boom Beer Bar']\n    PRIMARY KEY (id)\n);\n\nCREATE TABLE conway_gen_zero (\n    x INTEGER,\n    y INTEGER,\n    alive INTEGER,\n    PRIMARY KEY (x)\n);\n\nCREATE TABLE web_devices (\n    `day` TEXT, -- example: ['2019-05-01', '2019-05-02']\n    pc INTEGER, -- example: [1042, 967]\n    phone INTEGER, -- example: [1610, 2159]\n    PRIMARY KEY (`day`)\n);\n\nCREATE TABLE web_demographics (\n    `day` TEXT, -- example: ['2019-05-01', '2019-05-02']\n    m_tw_cnt INTEGER, -- example: [1232, 1438]\n    m_tw_qty INTEGER, -- example: [86, 142]\n    f_tw_qty INTEGER, -- example: [76, 92]\n    PRIMARY KEY (`day`)\n);\n\nCREATE TABLE channels_dim (\n    id INTEGER, -- example: [42, 44]\n    name TEXT, -- example: ['Twitter', 'Facebook']\n    PRIMARY KEY (id)\n);\n\nCREATE TABLE gender_dim (\n    name TEXT, -- example: ['Female', 'Male']\n    PRIMARY KEY (letter)\n);\n\nCREATE TABLE packaging (\n    id INTEGER, -- example: [501, 502, 511]\n    name TEXT, -- example: ['Bottle 330cl', 'Bottle 500cl', 'Gift Carton']\n    PRIMARY KEY (id)\n);\n\nCREATE TABLE packaging_relations (\n    packaging_id INTEGER, -- example: [511, 521, 522]\n    contains_id INTEGER, -- example: [501, 502, 511]\n    qty INTEGER, -- example: [3, 2, 72]\n    PRIMARY KEY (packaging_id),\n    CONSTRAINT fk_packaging_relations_packaging_id FOREIGN KEY (packaging_id) REFERENCES packaging (id),\n    CONSTRAINT fk_packaging_relations_contains_id FOREIGN KEY (contains_id) REFERENCES packaging (id)\n);\n\nCREATE TABLE product_groups (\n    id INTEGER, -- example: [142, 152, 202]\n    name TEXT, -- example: ['Stout', 'Belgian', 'Wheat']\n    PRIMARY KEY (id)\n);\n\nCREATE TABLE products (\n    id INTEGER, -- example: [4040, 4160, 4280]\n    name TEXT, -- example: ['Coalminers Sweat', 'Reindeer Fuel', 'Hoppy Crude Oil']\n    group_id INTEGER, -- example: [142, 152, 202]\n    PRIMARY KEY (id),\n    CONSTRAINT fk_products_group_id FOREIGN KEY (group_id) REFERENCES product_groups (id)\n);\n\nCREATE TABLE monthly_sales (\n    product_id INTEGER, -- example: [4040, 4160, 4280]\n    qty INTEGER, -- example: [42, 37, 39]\n    PRIMARY KEY (product_id),\n    CONSTRAINT fk_monthly_sales_product_id FOREIGN KEY (product_id) REFERENCES products (id)\n);\n\nCREATE TABLE breweries (\n    id INTEGER, -- example: [518, 523, 536]\n    name TEXT, -- example: ['Balthazar Brauerei', 'Happy Hoppy Hippo', 'Brewing Barbarian']\n    PRIMARY KEY (id)\n);\n\nCREATE TABLE purchases (\n    id INTEGER, -- example: [601, 611, 621]\n    purchased TEXT, -- example: ['2016-01-01', '2016-01-03', '2016-01-07']\n    brewery_id INTEGER, -- example: [518, 523, 536]\n    product_id INTEGER, -- example: [4040, 4160, 4280]\n    qty INTEGER, -- example: [52, 17, 34]\n    cost REAL, -- example: [388.0, 122.0, 163.0]\n    PRIMARY KEY (id),\n    CONSTRAINT fk_purchases_brewery_id FOREIGN KEY (brewery_id) REFERENCES breweries (id),\n    CONSTRAINT fk_purchases_product_id FOREIGN KEY (product_id) REFERENCES products (id)\n);\n\nCREATE TABLE product_alcohol (\n    product_id INTEGER, -- example: [4040, 4160, 4280]\n    PRIMARY KEY (product_id),\n    CONSTRAINT fk_product_alcohol_product_id FOREIGN KEY (product_id) REFERENCES products (id)\n);\n\nCREATE TABLE customer_favorites (\n    customer_id INTEGER, -- example: [50042, 50741, 51007]\n    PRIMARY KEY (customer_id),\n    CONSTRAINT fk_customer_favorites_customer_id FOREIGN KEY (customer_id) REFERENCES customers (id)\n);\n\nCREATE TABLE customer_reviews (\n    customer_id INTEGER, -- example: [50042, 50741, 51007]\n    PRIMARY KEY (customer_id),\n    CONSTRAINT fk_customer_reviews_customer_id FOREIGN KEY (customer_id) REFERENCES customers (id)\n);\n\nCREATE TABLE locations (\n    id INTEGER, -- example: [1, 2, 3]\n    warehouse INTEGER, -- example: [1, 2]\n    aisle TEXT, -- example: ['A', 'B', 'C']\n    `position` INTEGER, -- example: [1, 2, 3]\n    PRIMARY KEY (id)\n);\n\nCREATE TABLE inventory (\n    id INTEGER, -- example: [1148, 1151, 1154]\n    location_id INTEGER, -- example: [2, 3, 4]\n    product_id INTEGER, -- example: [4040, 4160, 4280]\n    purchase_id INTEGER, -- example: [719, 720, 721]\n    qty REAL, -- example: [11.0, 48.0, 36.0]\n    PRIMARY KEY (id),\n    CONSTRAINT fk_inventory_location_id FOREIGN KEY (location_id) REFERENCES locations (id),\n    CONSTRAINT fk_inventory_product_id FOREIGN KEY (product_id) REFERENCES products (id),\n    CONSTRAINT fk_inventory_purchase_id FOREIGN KEY (purchase_id) REFERENCES purchases (id)\n);\n\nCREATE TABLE orders (\n    id INTEGER, -- example: [421, 427, 429]\n    customer_id INTEGER, -- example: [50042, 50741, 51069]\n    ordered TEXT, -- example: ['2019-01-15', '2019-01-17', '2019-01-18']\n    delivery TEXT,\n    PRIMARY KEY (id),\n    CONSTRAINT fk_orders_customer_id FOREIGN KEY (customer_id) REFERENCES customers (id)\n);\n\nCREATE TABLE orderlines (\n    id INTEGER, -- example: [9120, 9122, 9233]\n    order_id INTEGER, -- example: [421, 422, 423]\n    product_id INTEGER, -- example: [4280, 6520, 6600]\n    qty REAL, -- example: [110.0, 140.0, 80.0]\n    amount REAL, -- example: [2400.0, 2250.0, 1750.0]\n    PRIMARY KEY (id),\n    CONSTRAINT fk_orderlines_order_id FOREIGN KEY (order_id) REFERENCES orders (id),\n    CONSTRAINT fk_orderlines_product_id FOREIGN KEY (product_id) REFERENCES products (id)\n);\n\nCREATE TABLE monthly_budget (\n    product_id INTEGER, -- example: [6520, 6600]\n    qty REAL, -- example: [30.0, 40.0, 50.0]\n    PRIMARY KEY (product_id),\n    CONSTRAINT fk_monthly_budget_product_id FOREIGN KEY (product_id) REFERENCES products (id)\n);\n\nCREATE TABLE product_minimums (\n    product_id INTEGER, -- example: [6520, 6600]\n    qty_minimum REAL, -- example: [100.0, 30.0]\n    qty_purchase REAL, -- example: [400.0, 100.0]\n    PRIMARY KEY (product_id),\n    CONSTRAINT fk_product_minimums_product_id FOREIGN KEY (product_id) REFERENCES products (id)\n);\n\nCREATE TABLE stock (\n    symbol TEXT, -- example: ['BEER']\n    company TEXT, -- example: ['Good Beer Trading Co']\n    PRIMARY KEY (symbol)\n);\n\nCREATE TABLE ticker (\n    symbol TEXT, -- example: ['BEER']\n    `day` TEXT, -- example: ['2019-04-01', '2019-04-02', '2019-04-03']\n    price REAL, -- example: [14.9, 14.2, 15.7]\n    PRIMARY KEY (symbol),\n    CONSTRAINT fk_ticker_symbol FOREIGN KEY (symbol) REFERENCES stock (symbol)\n);\n\nCREATE TABLE web_apps (\n    id INTEGER, -- example: [542]\n    name TEXT, -- example: ['Webshop']\n    PRIMARY KEY (id)\n);\n\nCREATE TABLE web_pages (\n    app_id INTEGER, -- example: [542]\n    page_no INTEGER, -- example: [1, 2, 3]\n    PRIMARY KEY (app_id),\n    CONSTRAINT fk_web_pages_app_id FOREIGN KEY (app_id) REFERENCES web_apps (id)\n);\n\nCREATE TABLE web_counter_hist (\n    app_id INTEGER, -- example: [542]\n    page_no INTEGER, -- example: [1, 2, 3]\n    `day` TEXT, -- example: ['2019-04-01', '2019-04-02', '2019-04-03']\n    PRIMARY KEY (app_id),\n    CONSTRAINT fk_web_counter_hist_app_id FOREIGN KEY (app_id) REFERENCES web_pages (app_id),\n    CONSTRAINT fk_web_counter_hist_page_no FOREIGN KEY (page_no) REFERENCES web_pages (page_no)\n);\n\nCREATE TABLE server_heartbeat (\n    beat_time TEXT, -- example: ['2019-04-10 13:00', '2019-04-10 13:05', '2019-04-10 13:10']\n);\n\nCREATE TABLE web_page_visits (\n    app_id INTEGER, -- example: [542]\n    page_no INTEGER, -- example: [1, 2, 3]\n    CONSTRAINT fk_web_page_visits_app_id FOREIGN KEY (app_id) REFERENCES web_pages (app_id),\n    CONSTRAINT fk_web_page_visits_page_no FOREIGN KEY (page_no) REFERENCES web_pages (page_no)\n);\n\nCREATE TABLE employees (\n    id INTEGER, -- example: [142, 144, 147]\n    name TEXT, -- example: ['Harold King', 'Mogens Juel', 'Axel de Proef']\n    supervisor_id INTEGER, -- example: [142, 143, 144]\n    PRIMARY KEY (id),\n    CONSTRAINT fk_employees_supervisor_id FOREIGN KEY (supervisor_id) REFERENCES employees (id)\n);\n\nCREATE TABLE emp_hire_periods (\n    emp_id INTEGER, -- example: [142, 143, 144]\n    PRIMARY KEY (emp_id),\n    CONSTRAINT fk_emp_hire_periods_emp_id FOREIGN KEY (emp_id) REFERENCES employees (id)\n);\n\nCREATE TABLE picking_list (\n    id INTEGER, -- example: [841, 842]\n    created TEXT, -- example: ['2019-01-16 14:03:41', '2019-01-19 15:57:42']\n    picker_emp_id INTEGER, -- example: [149, 152]\n    PRIMARY KEY (id),\n    CONSTRAINT fk_picking_list_picker_emp_id FOREIGN KEY (picker_emp_id) REFERENCES employees (id)\n);\n\nCREATE TABLE picking_line (\n    picklist_id INTEGER, -- example: [841, 842]\n    line_no INTEGER, -- example: [1, 2, 3]\n    location_id INTEGER, -- example: [16, 29, 65]\n    order_id INTEGER, -- example: [421, 422, 423]\n    product_id INTEGER, -- example: [4280, 6520]\n    qty REAL, -- example: [42.0, 14.0, 20.0]\n    PRIMARY KEY (picklist_id),\n    CONSTRAINT fk_picking_line_picklist_id FOREIGN KEY (picklist_id) REFERENCES picking_list (id),\n    CONSTRAINT fk_picking_line_location_id FOREIGN KEY (location_id) REFERENCES locations (id),\n    CONSTRAINT fk_picking_line_order_id FOREIGN KEY (order_id) REFERENCES orders (id),\n    CONSTRAINT fk_picking_line_product_id FOREIGN KEY (product_id) REFERENCES products (id)\n);\n\nCREATE TABLE picking_log (\n    picklist_id INTEGER, -- example: [841, 842]\n    activity TEXT, -- example: ['D', 'A', 'P']\n    location_id INTEGER, -- example: [16, 29, 65]\n    pickline_no INTEGER, -- example: [1, 2, 3]\n    PRIMARY KEY (picklist_id),\n    CONSTRAINT fk_picking_log_picklist_id FOREIGN KEY (picklist_id) REFERENCES picking_line (picklist_id),\n    CONSTRAINT fk_picking_log_picklist_id FOREIGN KEY (picklist_id) REFERENCES picking_list (id),\n    CONSTRAINT fk_picking_log_location_id FOREIGN KEY (location_id) REFERENCES locations (id),\n    CONSTRAINT fk_picking_log_pickline_no FOREIGN KEY (pickline_no) REFERENCES picking_line (line_no)\n);\n\nCREATE TABLE id_name_type (\n    id INTEGER,\n    name TEXT,\n    PRIMARY KEY (id)\n);\n\nCREATE TABLE id_name_coll_type (\n    collection_id INTEGER,\n    PRIMARY KEY (collection_id)\n);\n\nCREATE TABLE id_name_coll_entries (\n    collection_id INTEGER,\n    id INTEGER,\n    name TEXT,\n    PRIMARY KEY (collection_id),\n    CONSTRAINT fk_id_name_coll_entries_collection_id FOREIGN KEY (collection_id) REFERENCES id_name_coll_type (collection_id)\n);\n\nCREATE TABLE favorite_coll_type (\n    id INTEGER,\n    PRIMARY KEY (id)\n);",
        "question": "For order 423, identify the product IDs, aisles, and positions from which to pick the exact quantities needed for each order line, ensuring that the total picked quantity for each product matches the cumulative quantities ordered without exceeding the available inventory in warehouse 1. Calculate the quantities to be picked from each location by prioritizing inventory with earlier purchased dates and smaller quantities, and ensure that picking respects the sequence and cumulative quantities of the order lines for products with multiple entries.",
        "instance_id": "local272",
        "db_id": "oracle_sql"
    },
    {
        "db_desc": "CREATE TABLE Promotions (\n    name TEXT, -- example: ['NXT']\n    PRIMARY KEY (id)\n);\n\nCREATE TABLE sqlite_sequence (\n    \n\nCREATE TABLE Tables (\n    PRIMARY KEY (id)\n);\n\nCREATE TABLE Cards (\n    match_html TEXT, -- example: ['<table cellpadding=\"0\" cellspacing=\"1\" w']\n    PRIMARY KEY (id)\n);\n\nCREATE TABLE Locations (\n    name TEXT, -- example: ['A Coru\u00f1a, Galicia', 'Abbotsford, British Columbia', 'Aberdeen, Scotland']\n    PRIMARY KEY (id)\n);\n\nCREATE TABLE Events (\n    name TEXT, -- example: ['1st Annual Ilio DiPaolo Memorial', '205 Live #1', '205 Live #10']\n    PRIMARY KEY (id)\n);\n\nCREATE TABLE Matches (\n    winner_id TEXT, -- example: ['1', '3', '5']\n    loser_id TEXT, -- example: ['2', '4', '6']\n    match_type_id TEXT, -- example: ['1', '8', '9']\n    duration TEXT, -- example: ['04:02', '04:35', '01:20']\n    title_id TEXT, -- example: ['1', '9', '10']\n    title_change INTEGER, -- example: [0, 1]\n    PRIMARY KEY (id)\n);\n\nCREATE TABLE Belts (\n    name TEXT, -- example: ['PROGRESS Title', 'NXT Championship']\n    PRIMARY KEY (id)\n);\n\nCREATE TABLE Wrestlers (\n    name TEXT, -- example: ['\"A Bryan Kendrick\"', '\"Bob Dylan\"', '\"Kane\"']\n    PRIMARY KEY (id)\n);\n\nCREATE TABLE Match_Types (\n    name TEXT, -- example: ['knockout match']\n    PRIMARY KEY (id)\n);",
        "question": "For the NXT title that had the shortest match (excluding titles with \"title change\"), what were the names of the two wrestlers involved?",
        "instance_id": "local019",
        "db_id": "WWE"
    },
    {
        "db_desc": "CREATE TABLE customers (\n    id INTEGER, -- example: [50042, 50741, 51007]\n    name TEXT, -- example: ['The White Hart', 'Hygge og Humle', 'Boom Beer Bar']\n    PRIMARY KEY (id)\n);\n\nCREATE TABLE conway_gen_zero (\n    x INTEGER,\n    y INTEGER,\n    alive INTEGER,\n    PRIMARY KEY (x)\n);\n\nCREATE TABLE web_devices (\n    `day` TEXT, -- example: ['2019-05-01', '2019-05-02']\n    pc INTEGER, -- example: [1042, 967]\n    PRIMARY KEY (`day`)\n);\n\nCREATE TABLE web_demographics (\n    `day` TEXT, -- example: ['2019-05-01', '2019-05-02']\n    m_tw_qty INTEGER, -- example: [86, 142]\n    f_tw_qty INTEGER, -- example: [76, 92]\n    PRIMARY KEY (`day`)\n);\n\nCREATE TABLE channels_dim (\n    id INTEGER, -- example: [42, 44]\n    name TEXT, -- example: ['Twitter', 'Facebook']\n    PRIMARY KEY (id)\n);\n\nCREATE TABLE gender_dim (\n    name TEXT, -- example: ['Female', 'Male']\n    PRIMARY KEY (letter)\n);\n\nCREATE TABLE packaging (\n    id INTEGER, -- example: [501, 502, 511]\n    name TEXT, -- example: ['Bottle 330cl', 'Bottle 500cl', 'Gift Carton']\n    PRIMARY KEY (id)\n);\n\nCREATE TABLE packaging_relations (\n    packaging_id INTEGER, -- example: [511, 521, 522]\n    contains_id INTEGER, -- example: [501, 502, 511]\n    qty INTEGER, -- example: [3, 2, 72]\n    PRIMARY KEY (packaging_id),\n    CONSTRAINT fk_packaging_relations_packaging_id FOREIGN KEY (packaging_id) REFERENCES packaging (id),\n    CONSTRAINT fk_packaging_relations_contains_id FOREIGN KEY (contains_id) REFERENCES packaging (id)\n);\n\nCREATE TABLE product_groups (\n    id INTEGER, -- example: [142, 152, 202]\n    name TEXT, -- example: ['Stout', 'Belgian', 'Wheat']\n    PRIMARY KEY (id)\n);\n\nCREATE TABLE products (\n    id INTEGER, -- example: [4040, 4160, 4280]\n    name TEXT, -- example: ['Coalminers Sweat', 'Reindeer Fuel', 'Hoppy Crude Oil']\n    group_id INTEGER, -- example: [142, 152, 202]\n    PRIMARY KEY (id),\n    CONSTRAINT fk_products_group_id FOREIGN KEY (group_id) REFERENCES product_groups (id)\n);\n\nCREATE TABLE monthly_sales (\n    product_id INTEGER, -- example: [4040, 4160, 4280]\n    qty INTEGER, -- example: [42, 37, 39]\n    PRIMARY KEY (product_id),\n    CONSTRAINT fk_monthly_sales_product_id FOREIGN KEY (product_id) REFERENCES products (id)\n);\n\nCREATE TABLE breweries (\n    id INTEGER, -- example: [518, 523, 536]\n    name TEXT, -- example: ['Balthazar Brauerei', 'Happy Hoppy Hippo', 'Brewing Barbarian']\n    PRIMARY KEY (id)\n);\n\nCREATE TABLE purchases (\n    id INTEGER, -- example: [601, 611, 621]\n    purchased TEXT, -- example: ['2016-01-01', '2016-01-03', '2016-01-07']\n    brewery_id INTEGER, -- example: [518, 523, 536]\n    product_id INTEGER, -- example: [4040, 4160, 4280]\n    qty INTEGER, -- example: [52, 17, 34]\n    cost REAL, -- example: [388.0, 122.0, 163.0]\n    PRIMARY KEY (id),\n    CONSTRAINT fk_purchases_brewery_id FOREIGN KEY (brewery_id) REFERENCES breweries (id),\n    CONSTRAINT fk_purchases_product_id FOREIGN KEY (product_id) REFERENCES products (id)\n);\n\nCREATE TABLE product_alcohol (\n    product_id INTEGER, -- example: [4040, 4160, 4280]\n    PRIMARY KEY (product_id),\n    CONSTRAINT fk_product_alcohol_product_id FOREIGN KEY (product_id) REFERENCES products (id)\n);\n\nCREATE TABLE customer_favorites (\n    customer_id INTEGER, -- example: [50042, 50741, 51007]\n    PRIMARY KEY (customer_id),\n    CONSTRAINT fk_customer_favorites_customer_id FOREIGN KEY (customer_id) REFERENCES customers (id)\n);\n\nCREATE TABLE customer_reviews (\n    customer_id INTEGER, -- example: [50042, 50741, 51007]\n    PRIMARY KEY (customer_id),\n    CONSTRAINT fk_customer_reviews_customer_id FOREIGN KEY (customer_id) REFERENCES customers (id)\n);\n\nCREATE TABLE locations (\n    id INTEGER, -- example: [1, 2, 3]\n    warehouse INTEGER, -- example: [1, 2]\n    PRIMARY KEY (id)\n);\n\nCREATE TABLE inventory (\n    id INTEGER, -- example: [1148, 1151, 1154]\n    location_id INTEGER, -- example: [2, 3, 4]\n    product_id INTEGER, -- example: [4040, 4160, 4280]\n    purchase_id INTEGER, -- example: [719, 720, 721]\n    qty REAL, -- example: [11.0, 48.0, 36.0]\n    PRIMARY KEY (id),\n    CONSTRAINT fk_inventory_location_id FOREIGN KEY (location_id) REFERENCES locations (id),\n    CONSTRAINT fk_inventory_product_id FOREIGN KEY (product_id) REFERENCES products (id),\n    CONSTRAINT fk_inventory_purchase_id FOREIGN KEY (purchase_id) REFERENCES purchases (id)\n);\n\nCREATE TABLE orders (\n    id INTEGER, -- example: [421, 427, 429]\n    customer_id INTEGER, -- example: [50042, 50741, 51069]\n    ordered TEXT, -- example: ['2019-01-15', '2019-01-17', '2019-01-18']\n    delivery TEXT,\n    PRIMARY KEY (id),\n    CONSTRAINT fk_orders_customer_id FOREIGN KEY (customer_id) REFERENCES customers (id)\n);\n\nCREATE TABLE orderlines (\n    id INTEGER, -- example: [9120, 9122, 9233]\n    order_id INTEGER, -- example: [421, 422, 423]\n    product_id INTEGER, -- example: [4280, 6520, 6600]\n    qty REAL, -- example: [110.0, 140.0, 80.0]\n    amount REAL, -- example: [2400.0, 2250.0, 1750.0]\n    PRIMARY KEY (id),\n    CONSTRAINT fk_orderlines_order_id FOREIGN KEY (order_id) REFERENCES orders (id),\n    CONSTRAINT fk_orderlines_product_id FOREIGN KEY (product_id) REFERENCES products (id)\n);\n\nCREATE TABLE monthly_budget (\n    product_id INTEGER, -- example: [6520, 6600]\n    qty REAL, -- example: [30.0, 40.0, 50.0]\n    PRIMARY KEY (product_id),\n    CONSTRAINT fk_monthly_budget_product_id FOREIGN KEY (product_id) REFERENCES products (id)\n);\n\nCREATE TABLE product_minimums (\n    product_id INTEGER, -- example: [6520, 6600]\n    qty_minimum REAL, -- example: [100.0, 30.0]\n    qty_purchase REAL, -- example: [400.0, 100.0]\n    PRIMARY KEY (product_id),\n    CONSTRAINT fk_product_minimums_product_id FOREIGN KEY (product_id) REFERENCES products (id)\n);\n\nCREATE TABLE stock (\n    symbol TEXT, -- example: ['BEER']\n    company TEXT, -- example: ['Good Beer Trading Co']\n    PRIMARY KEY (symbol)\n);\n\nCREATE TABLE ticker (\n    symbol TEXT, -- example: ['BEER']\n    `day` TEXT, -- example: ['2019-04-01', '2019-04-02', '2019-04-03']\n    price REAL, -- example: [14.9, 14.2, 15.7]\n    PRIMARY KEY (symbol),\n    CONSTRAINT fk_ticker_symbol FOREIGN KEY (symbol) REFERENCES stock (symbol)\n);\n\nCREATE TABLE web_apps (\n    id INTEGER, -- example: [542]\n    name TEXT, -- example: ['Webshop']\n    PRIMARY KEY (id)\n);\n\nCREATE TABLE web_pages (\n    app_id INTEGER, -- example: [542]\n    page_no INTEGER, -- example: [1, 2, 3]\n    PRIMARY KEY (app_id),\n    CONSTRAINT fk_web_pages_app_id FOREIGN KEY (app_id) REFERENCES web_apps (id)\n);\n\nCREATE TABLE web_counter_hist (\n    app_id INTEGER, -- example: [542]\n    page_no INTEGER, -- example: [1, 2, 3]\n    `day` TEXT, -- example: ['2019-04-01', '2019-04-02', '2019-04-03']\n    PRIMARY KEY (app_id),\n    CONSTRAINT fk_web_counter_hist_app_id FOREIGN KEY (app_id) REFERENCES web_pages (app_id),\n    CONSTRAINT fk_web_counter_hist_page_no FOREIGN KEY (page_no) REFERENCES web_pages (page_no)\n);\n\nCREATE TABLE server_heartbeat (\n    \n\nCREATE TABLE web_page_visits (\n    app_id INTEGER, -- example: [542]\n    page_no INTEGER, -- example: [1, 2, 3]\n    CONSTRAINT fk_web_page_visits_app_id FOREIGN KEY (app_id) REFERENCES web_pages (app_id),\n    CONSTRAINT fk_web_page_visits_page_no FOREIGN KEY (page_no) REFERENCES web_pages (page_no)\n);\n\nCREATE TABLE employees (\n    id INTEGER, -- example: [142, 144, 147]\n    name TEXT, -- example: ['Harold King', 'Mogens Juel', 'Axel de Proef']\n    supervisor_id INTEGER, -- example: [142, 143, 144]\n    PRIMARY KEY (id),\n    CONSTRAINT fk_employees_supervisor_id FOREIGN KEY (supervisor_id) REFERENCES employees (id)\n);\n\nCREATE TABLE emp_hire_periods (\n    emp_id INTEGER, -- example: [142, 143, 144]\n    PRIMARY KEY (emp_id),\n    CONSTRAINT fk_emp_hire_periods_emp_id FOREIGN KEY (emp_id) REFERENCES employees (id)\n);\n\nCREATE TABLE picking_list (\n    id INTEGER, -- example: [841, 842]\n    created TEXT, -- example: ['2019-01-16 14:03:41', '2019-01-19 15:57:42']\n    picker_emp_id INTEGER, -- example: [149, 152]\n    PRIMARY KEY (id),\n    CONSTRAINT fk_picking_list_picker_emp_id FOREIGN KEY (picker_emp_id) REFERENCES employees (id)\n);\n\nCREATE TABLE picking_line (\n    picklist_id INTEGER, -- example: [841, 842]\n    line_no INTEGER, -- example: [1, 2, 3]\n    location_id INTEGER, -- example: [16, 29, 65]\n    order_id INTEGER, -- example: [421, 422, 423]\n    product_id INTEGER, -- example: [4280, 6520]\n    qty REAL, -- example: [42.0, 14.0, 20.0]\n    PRIMARY KEY (picklist_id),\n    CONSTRAINT fk_picking_line_picklist_id FOREIGN KEY (picklist_id) REFERENCES picking_list (id),\n    CONSTRAINT fk_picking_line_location_id FOREIGN KEY (location_id) REFERENCES locations (id),\n    CONSTRAINT fk_picking_line_order_id FOREIGN KEY (order_id) REFERENCES orders (id),\n    CONSTRAINT fk_picking_line_product_id FOREIGN KEY (product_id) REFERENCES products (id)\n);\n\nCREATE TABLE picking_log (\n    picklist_id INTEGER, -- example: [841, 842]\n    activity TEXT, -- example: ['D', 'A', 'P']\n    location_id INTEGER, -- example: [16, 29, 65]\n    pickline_no INTEGER, -- example: [1, 2, 3]\n    PRIMARY KEY (picklist_id),\n    CONSTRAINT fk_picking_log_picklist_id FOREIGN KEY (picklist_id) REFERENCES picking_line (picklist_id),\n    CONSTRAINT fk_picking_log_picklist_id FOREIGN KEY (picklist_id) REFERENCES picking_list (id),\n    CONSTRAINT fk_picking_log_location_id FOREIGN KEY (location_id) REFERENCES locations (id),\n    CONSTRAINT fk_picking_log_pickline_no FOREIGN KEY (pickline_no) REFERENCES picking_line (line_no)\n);\n\nCREATE TABLE id_name_type (\n    id INTEGER,\n    name TEXT,\n    PRIMARY KEY (id)\n);\n\nCREATE TABLE id_name_coll_type (\n    collection_id INTEGER,\n    PRIMARY KEY (collection_id)\n);\n\nCREATE TABLE id_name_coll_entries (\n    collection_id INTEGER,\n    id INTEGER,\n    name TEXT,\n    PRIMARY KEY (collection_id),\n    CONSTRAINT fk_id_name_coll_entries_collection_id FOREIGN KEY (collection_id) REFERENCES id_name_coll_type (collection_id)\n);\n\nCREATE TABLE favorite_coll_type (\n    id INTEGER,\n    PRIMARY KEY (id)\n);",
        "question": "Calculate the average pick percentage for each product name, using a first-in-first-out approach that selects from inventory locations based on the earliest purchase date and smallest available quantity, ensuring that the picked quantity reflects only the overlapping range between each order\u2019s required quantity and the inventory\u2019s available quantity, and then grouping and ordering the results by product name?",
        "instance_id": "local273",
        "db_id": "oracle_sql"
    },
    {
        "db_desc": "CREATE TABLE customers (\n    id INTEGER, -- example: [50042, 50741, 51007]\n    name TEXT, -- example: ['The White Hart', 'Hygge og Humle', 'Boom Beer Bar']\n    PRIMARY KEY (id)\n);\n\nCREATE TABLE conway_gen_zero (\n    x INTEGER,\n    y INTEGER,\n    alive INTEGER,\n    PRIMARY KEY (x)\n);\n\nCREATE TABLE web_devices (\n    `day` TEXT, -- example: ['2019-05-01', '2019-05-02']\n    phone INTEGER, -- example: [1610, 2159]\n    PRIMARY KEY (`day`)\n);\n\nCREATE TABLE web_demographics (\n    `day` TEXT, -- example: ['2019-05-01', '2019-05-02']\n    PRIMARY KEY (`day`)\n);\n\nCREATE TABLE channels_dim (\n    id INTEGER, -- example: [42, 44]\n    name TEXT, -- example: ['Twitter', 'Facebook']\n    PRIMARY KEY (id)\n);\n\nCREATE TABLE gender_dim (\n    name TEXT, -- example: ['Female', 'Male']\n    PRIMARY KEY (letter)\n);\n\nCREATE TABLE packaging (\n    id INTEGER, -- example: [501, 502, 511]\n    name TEXT, -- example: ['Bottle 330cl', 'Bottle 500cl', 'Gift Carton']\n    PRIMARY KEY (id)\n);\n\nCREATE TABLE packaging_relations (\n    packaging_id INTEGER, -- example: [511, 521, 522]\n    contains_id INTEGER, -- example: [501, 502, 511]\n    qty INTEGER, -- example: [3, 2, 72]\n    PRIMARY KEY (packaging_id),\n    CONSTRAINT fk_packaging_relations_packaging_id FOREIGN KEY (packaging_id) REFERENCES packaging (id),\n    CONSTRAINT fk_packaging_relations_contains_id FOREIGN KEY (contains_id) REFERENCES packaging (id)\n);\n\nCREATE TABLE product_groups (\n    id INTEGER, -- example: [142, 152, 202]\n    name TEXT, -- example: ['Stout', 'Belgian', 'Wheat']\n    PRIMARY KEY (id)\n);\n\nCREATE TABLE products (\n    id INTEGER, -- example: [4040, 4160, 4280]\n    name TEXT, -- example: ['Coalminers Sweat', 'Reindeer Fuel', 'Hoppy Crude Oil']\n    group_id INTEGER, -- example: [142, 152, 202]\n    PRIMARY KEY (id),\n    CONSTRAINT fk_products_group_id FOREIGN KEY (group_id) REFERENCES product_groups (id)\n);\n\nCREATE TABLE monthly_sales (\n    product_id INTEGER, -- example: [4040, 4160, 4280]\n    qty INTEGER, -- example: [42, 37, 39]\n    PRIMARY KEY (product_id),\n    CONSTRAINT fk_monthly_sales_product_id FOREIGN KEY (product_id) REFERENCES products (id)\n);\n\nCREATE TABLE breweries (\n    id INTEGER, -- example: [518, 523, 536]\n    name TEXT, -- example: ['Balthazar Brauerei', 'Happy Hoppy Hippo', 'Brewing Barbarian']\n    PRIMARY KEY (id)\n);\n\nCREATE TABLE purchases (\n    id INTEGER, -- example: [601, 611, 621]\n    purchased TEXT, -- example: ['2016-01-01', '2016-01-03', '2016-01-07']\n    brewery_id INTEGER, -- example: [518, 523, 536]\n    product_id INTEGER, -- example: [4040, 4160, 4280]\n    qty INTEGER, -- example: [52, 17, 34]\n    cost REAL, -- example: [388.0, 122.0, 163.0]\n    PRIMARY KEY (id),\n    CONSTRAINT fk_purchases_brewery_id FOREIGN KEY (brewery_id) REFERENCES breweries (id),\n    CONSTRAINT fk_purchases_product_id FOREIGN KEY (product_id) REFERENCES products (id)\n);\n\nCREATE TABLE product_alcohol (\n    product_id INTEGER, -- example: [4040, 4160, 4280]\n    PRIMARY KEY (product_id),\n    CONSTRAINT fk_product_alcohol_product_id FOREIGN KEY (product_id) REFERENCES products (id)\n);\n\nCREATE TABLE customer_favorites (\n    customer_id INTEGER, -- example: [50042, 50741, 51007]\n    PRIMARY KEY (customer_id),\n    CONSTRAINT fk_customer_favorites_customer_id FOREIGN KEY (customer_id) REFERENCES customers (id)\n);\n\nCREATE TABLE customer_reviews (\n    customer_id INTEGER, -- example: [50042, 50741, 51007]\n    PRIMARY KEY (customer_id),\n    CONSTRAINT fk_customer_reviews_customer_id FOREIGN KEY (customer_id) REFERENCES customers (id)\n);\n\nCREATE TABLE locations (\n    id INTEGER, -- example: [1, 2, 3]\n    aisle TEXT, -- example: ['A', 'B', 'C']\n    `position` INTEGER, -- example: [1, 2, 3]\n    PRIMARY KEY (id)\n);\n\nCREATE TABLE inventory (\n    id INTEGER, -- example: [1148, 1151, 1154]\n    location_id INTEGER, -- example: [2, 3, 4]\n    product_id INTEGER, -- example: [4040, 4160, 4280]\n    purchase_id INTEGER, -- example: [719, 720, 721]\n    qty REAL, -- example: [11.0, 48.0, 36.0]\n    PRIMARY KEY (id),\n    CONSTRAINT fk_inventory_location_id FOREIGN KEY (location_id) REFERENCES locations (id),\n    CONSTRAINT fk_inventory_product_id FOREIGN KEY (product_id) REFERENCES products (id),\n    CONSTRAINT fk_inventory_purchase_id FOREIGN KEY (purchase_id) REFERENCES purchases (id)\n);\n\nCREATE TABLE orders (\n    id INTEGER, -- example: [421, 427, 429]\n    customer_id INTEGER, -- example: [50042, 50741, 51069]\n    ordered TEXT, -- example: ['2019-01-15', '2019-01-17', '2019-01-18']\n    delivery TEXT,\n    PRIMARY KEY (id),\n    CONSTRAINT fk_orders_customer_id FOREIGN KEY (customer_id) REFERENCES customers (id)\n);\n\nCREATE TABLE orderlines (\n    id INTEGER, -- example: [9120, 9122, 9233]\n    order_id INTEGER, -- example: [421, 422, 423]\n    product_id INTEGER, -- example: [4280, 6520, 6600]\n    qty REAL, -- example: [110.0, 140.0, 80.0]\n    amount REAL, -- example: [2400.0, 2250.0, 1750.0]\n    PRIMARY KEY (id),\n    CONSTRAINT fk_orderlines_order_id FOREIGN KEY (order_id) REFERENCES orders (id),\n    CONSTRAINT fk_orderlines_product_id FOREIGN KEY (product_id) REFERENCES products (id)\n);\n\nCREATE TABLE monthly_budget (\n    product_id INTEGER, -- example: [6520, 6600]\n    qty REAL, -- example: [30.0, 40.0, 50.0]\n    PRIMARY KEY (product_id),\n    CONSTRAINT fk_monthly_budget_product_id FOREIGN KEY (product_id) REFERENCES products (id)\n);\n\nCREATE TABLE product_minimums (\n    product_id INTEGER, -- example: [6520, 6600]\n    PRIMARY KEY (product_id),\n    CONSTRAINT fk_product_minimums_product_id FOREIGN KEY (product_id) REFERENCES products (id)\n);\n\nCREATE TABLE stock (\n    symbol TEXT, -- example: ['BEER']\n    company TEXT, -- example: ['Good Beer Trading Co']\n    PRIMARY KEY (symbol)\n);\n\nCREATE TABLE ticker (\n    symbol TEXT, -- example: ['BEER']\n    `day` TEXT, -- example: ['2019-04-01', '2019-04-02', '2019-04-03']\n    price REAL, -- example: [14.9, 14.2, 15.7]\n    PRIMARY KEY (symbol),\n    CONSTRAINT fk_ticker_symbol FOREIGN KEY (symbol) REFERENCES stock (symbol)\n);\n\nCREATE TABLE web_apps (\n    id INTEGER, -- example: [542]\n    name TEXT, -- example: ['Webshop']\n    PRIMARY KEY (id)\n);\n\nCREATE TABLE web_pages (\n    app_id INTEGER, -- example: [542]\n    page_no INTEGER, -- example: [1, 2, 3]\n    PRIMARY KEY (app_id),\n    CONSTRAINT fk_web_pages_app_id FOREIGN KEY (app_id) REFERENCES web_apps (id)\n);\n\nCREATE TABLE web_counter_hist (\n    app_id INTEGER, -- example: [542]\n    page_no INTEGER, -- example: [1, 2, 3]\n    `day` TEXT, -- example: ['2019-04-01', '2019-04-02', '2019-04-03']\n    PRIMARY KEY (app_id),\n    CONSTRAINT fk_web_counter_hist_app_id FOREIGN KEY (app_id) REFERENCES web_pages (app_id),\n    CONSTRAINT fk_web_counter_hist_page_no FOREIGN KEY (page_no) REFERENCES web_pages (page_no)\n);\n\nCREATE TABLE server_heartbeat (\n    beat_time TEXT, -- example: ['2019-04-10 13:00', '2019-04-10 13:05', '2019-04-10 13:10']\n);\n\nCREATE TABLE web_page_visits (\n    app_id INTEGER, -- example: [542]\n    page_no INTEGER, -- example: [1, 2, 3]\n    CONSTRAINT fk_web_page_visits_app_id FOREIGN KEY (app_id) REFERENCES web_pages (app_id),\n    CONSTRAINT fk_web_page_visits_page_no FOREIGN KEY (page_no) REFERENCES web_pages (page_no)\n);\n\nCREATE TABLE employees (\n    id INTEGER, -- example: [142, 144, 147]\n    name TEXT, -- example: ['Harold King', 'Mogens Juel', 'Axel de Proef']\n    supervisor_id INTEGER, -- example: [142, 143, 144]\n    PRIMARY KEY (id),\n    CONSTRAINT fk_employees_supervisor_id FOREIGN KEY (supervisor_id) REFERENCES employees (id)\n);\n\nCREATE TABLE emp_hire_periods (\n    emp_id INTEGER, -- example: [142, 143, 144]\n    PRIMARY KEY (emp_id),\n    CONSTRAINT fk_emp_hire_periods_emp_id FOREIGN KEY (emp_id) REFERENCES employees (id)\n);\n\nCREATE TABLE picking_list (\n    id INTEGER, -- example: [841, 842]\n    created TEXT, -- example: ['2019-01-16 14:03:41', '2019-01-19 15:57:42']\n    picker_emp_id INTEGER, -- example: [149, 152]\n    PRIMARY KEY (id),\n    CONSTRAINT fk_picking_list_picker_emp_id FOREIGN KEY (picker_emp_id) REFERENCES employees (id)\n);\n\nCREATE TABLE picking_line (\n    picklist_id INTEGER, -- example: [841, 842]\n    line_no INTEGER, -- example: [1, 2, 3]\n    location_id INTEGER, -- example: [16, 29, 65]\n    order_id INTEGER, -- example: [421, 422, 423]\n    product_id INTEGER, -- example: [4280, 6520]\n    qty REAL, -- example: [42.0, 14.0, 20.0]\n    PRIMARY KEY (picklist_id),\n    CONSTRAINT fk_picking_line_picklist_id FOREIGN KEY (picklist_id) REFERENCES picking_list (id),\n    CONSTRAINT fk_picking_line_location_id FOREIGN KEY (location_id) REFERENCES locations (id),\n    CONSTRAINT fk_picking_line_order_id FOREIGN KEY (order_id) REFERENCES orders (id),\n    CONSTRAINT fk_picking_line_product_id FOREIGN KEY (product_id) REFERENCES products (id)\n);\n\nCREATE TABLE picking_log (\n    picklist_id INTEGER, -- example: [841, 842]\n    activity TEXT, -- example: ['D', 'A', 'P']\n    location_id INTEGER, -- example: [16, 29, 65]\n    pickline_no INTEGER, -- example: [1, 2, 3]\n    PRIMARY KEY (picklist_id),\n    CONSTRAINT fk_picking_log_picklist_id FOREIGN KEY (picklist_id) REFERENCES picking_line (picklist_id),\n    CONSTRAINT fk_picking_log_picklist_id FOREIGN KEY (picklist_id) REFERENCES picking_list (id),\n    CONSTRAINT fk_picking_log_location_id FOREIGN KEY (location_id) REFERENCES locations (id),\n    CONSTRAINT fk_picking_log_pickline_no FOREIGN KEY (pickline_no) REFERENCES picking_line (line_no)\n);\n\nCREATE TABLE id_name_type (\n    id INTEGER,\n    name TEXT,\n    PRIMARY KEY (id)\n);\n\nCREATE TABLE id_name_coll_type (\n    collection_id INTEGER,\n    PRIMARY KEY (collection_id)\n);\n\nCREATE TABLE id_name_coll_entries (\n    collection_id INTEGER,\n    id INTEGER,\n    name TEXT,\n    PRIMARY KEY (collection_id),\n    CONSTRAINT fk_id_name_coll_entries_collection_id FOREIGN KEY (collection_id) REFERENCES id_name_coll_type (collection_id)\n);\n\nCREATE TABLE favorite_coll_type (\n    id INTEGER,\n    PRIMARY KEY (id)\n);",
        "question": "Which products were picked for order 421, and what is the average number of units picked for each product, using FIFO (First-In, First-Out) method?",
        "instance_id": "local274",
        "db_id": "oracle_sql"
    },
    {
        "db_desc": "CREATE TABLE customers (\n    id INTEGER, -- example: [50042, 50741, 51007]\n    name TEXT, -- example: ['The White Hart', 'Hygge og Humle', 'Boom Beer Bar']\n    PRIMARY KEY (id)\n);\n\nCREATE TABLE conway_gen_zero (\n    x INTEGER,\n    y INTEGER,\n    alive INTEGER,\n    PRIMARY KEY (x)\n);\n\nCREATE TABLE web_devices (\n    `day` TEXT, -- example: ['2019-05-01', '2019-05-02']\n    phone INTEGER, -- example: [1610, 2159]\n    PRIMARY KEY (`day`)\n);\n\nCREATE TABLE web_demographics (\n    `day` TEXT, -- example: ['2019-05-01', '2019-05-02']\n    m_tw_cnt INTEGER, -- example: [1232, 1438]\n    PRIMARY KEY (`day`)\n);\n\nCREATE TABLE channels_dim (\n    id INTEGER, -- example: [42, 44]\n    name TEXT, -- example: ['Twitter', 'Facebook']\n    PRIMARY KEY (id)\n);\n\nCREATE TABLE gender_dim (\n    name TEXT, -- example: ['Female', 'Male']\n    PRIMARY KEY (letter)\n);\n\nCREATE TABLE packaging (\n    id INTEGER, -- example: [501, 502, 511]\n    name TEXT, -- example: ['Bottle 330cl', 'Bottle 500cl', 'Gift Carton']\n    PRIMARY KEY (id)\n);\n\nCREATE TABLE packaging_relations (\n    packaging_id INTEGER, -- example: [511, 521, 522]\n    contains_id INTEGER, -- example: [501, 502, 511]\n    qty INTEGER, -- example: [3, 2, 72]\n    PRIMARY KEY (packaging_id),\n    CONSTRAINT fk_packaging_relations_packaging_id FOREIGN KEY (packaging_id) REFERENCES packaging (id),\n    CONSTRAINT fk_packaging_relations_contains_id FOREIGN KEY (contains_id) REFERENCES packaging (id)\n);\n\nCREATE TABLE product_groups (\n    id INTEGER, -- example: [142, 152, 202]\n    name TEXT, -- example: ['Stout', 'Belgian', 'Wheat']\n    PRIMARY KEY (id)\n);\n\nCREATE TABLE products (\n    id INTEGER, -- example: [4040, 4160, 4280]\n    name TEXT, -- example: ['Coalminers Sweat', 'Reindeer Fuel', 'Hoppy Crude Oil']\n    group_id INTEGER, -- example: [142, 152, 202]\n    PRIMARY KEY (id),\n    CONSTRAINT fk_products_group_id FOREIGN KEY (group_id) REFERENCES product_groups (id)\n);\n\nCREATE TABLE monthly_sales (\n    product_id INTEGER, -- example: [4040, 4160, 4280]\n    mth TEXT, -- example: ['2017-01-01', '2016-01-01']\n    qty INTEGER, -- example: [42, 37, 39]\n    PRIMARY KEY (product_id),\n    CONSTRAINT fk_monthly_sales_product_id FOREIGN KEY (product_id) REFERENCES products (id)\n);\n\nCREATE TABLE breweries (\n    id INTEGER, -- example: [518, 523, 536]\n    name TEXT, -- example: ['Balthazar Brauerei', 'Happy Hoppy Hippo', 'Brewing Barbarian']\n    PRIMARY KEY (id)\n);\n\nCREATE TABLE purchases (\n    id INTEGER, -- example: [601, 611, 621]\n    purchased TEXT, -- example: ['2017-10-20', '2016-01-01']\n    brewery_id INTEGER, -- example: [518, 523, 536]\n    product_id INTEGER, -- example: [4040, 4160, 4280]\n    qty INTEGER, -- example: [52, 17, 34]\n    cost REAL, -- example: [388.0, 122.0, 163.0]\n    PRIMARY KEY (id),\n    CONSTRAINT fk_purchases_brewery_id FOREIGN KEY (brewery_id) REFERENCES breweries (id),\n    CONSTRAINT fk_purchases_product_id FOREIGN KEY (product_id) REFERENCES products (id)\n);\n\nCREATE TABLE product_alcohol (\n    product_id INTEGER, -- example: [4040, 4160, 4280]\n    sales_volume REAL, -- example: [330.0, 500.0]\n    PRIMARY KEY (product_id),\n    CONSTRAINT fk_product_alcohol_product_id FOREIGN KEY (product_id) REFERENCES products (id)\n);\n\nCREATE TABLE customer_favorites (\n    customer_id INTEGER, -- example: [50042, 50741, 51007]\n    PRIMARY KEY (customer_id),\n    CONSTRAINT fk_customer_favorites_customer_id FOREIGN KEY (customer_id) REFERENCES customers (id)\n);\n\nCREATE TABLE customer_reviews (\n    customer_id INTEGER, -- example: [50042, 50741, 51007]\n    PRIMARY KEY (customer_id),\n    CONSTRAINT fk_customer_reviews_customer_id FOREIGN KEY (customer_id) REFERENCES customers (id)\n);\n\nCREATE TABLE locations (\n    id INTEGER, -- example: [1, 2, 3]\n    PRIMARY KEY (id)\n);\n\nCREATE TABLE inventory (\n    id INTEGER, -- example: [1148, 1151, 1154]\n    location_id INTEGER, -- example: [2, 3, 4]\n    product_id INTEGER, -- example: [4040, 4160, 4280]\n    purchase_id INTEGER, -- example: [719, 720, 721]\n    qty REAL, -- example: [11.0, 48.0, 36.0]\n    PRIMARY KEY (id),\n    CONSTRAINT fk_inventory_location_id FOREIGN KEY (location_id) REFERENCES locations (id),\n    CONSTRAINT fk_inventory_product_id FOREIGN KEY (product_id) REFERENCES products (id),\n    CONSTRAINT fk_inventory_purchase_id FOREIGN KEY (purchase_id) REFERENCES purchases (id)\n);\n\nCREATE TABLE orders (\n    id INTEGER, -- example: [421, 427, 429]\n    customer_id INTEGER, -- example: [50042, 50741, 51069]\n    delivery TEXT,\n    PRIMARY KEY (id),\n    CONSTRAINT fk_orders_customer_id FOREIGN KEY (customer_id) REFERENCES customers (id)\n);\n\nCREATE TABLE orderlines (\n    id INTEGER, -- example: [9120, 9122, 9233]\n    order_id INTEGER, -- example: [421, 422, 423]\n    product_id INTEGER, -- example: [4280, 6520, 6600]\n    qty REAL, -- example: [110.0, 140.0, 80.0]\n    amount REAL, -- example: [2400.0, 2250.0, 1750.0]\n    PRIMARY KEY (id),\n    CONSTRAINT fk_orderlines_order_id FOREIGN KEY (order_id) REFERENCES orders (id),\n    CONSTRAINT fk_orderlines_product_id FOREIGN KEY (product_id) REFERENCES products (id)\n);\n\nCREATE TABLE monthly_budget (\n    product_id INTEGER, -- example: [6520, 6600]\n    mth TEXT, -- example: ['2018-01-01', '2018-02-01', '2018-03-01']\n    qty REAL, -- example: [30.0, 40.0, 50.0]\n    PRIMARY KEY (product_id),\n    CONSTRAINT fk_monthly_budget_product_id FOREIGN KEY (product_id) REFERENCES products (id)\n);\n\nCREATE TABLE product_minimums (\n    product_id INTEGER, -- example: [6520, 6600]\n    PRIMARY KEY (product_id),\n    CONSTRAINT fk_product_minimums_product_id FOREIGN KEY (product_id) REFERENCES products (id)\n);\n\nCREATE TABLE stock (\n    symbol TEXT, -- example: ['BEER']\n    company TEXT, -- example: ['Good Beer Trading Co']\n    PRIMARY KEY (symbol)\n);\n\nCREATE TABLE ticker (\n    symbol TEXT, -- example: ['BEER']\n    `day` TEXT, -- example: ['2019-04-01', '2019-04-02', '2019-04-03']\n    PRIMARY KEY (symbol),\n    CONSTRAINT fk_ticker_symbol FOREIGN KEY (symbol) REFERENCES stock (symbol)\n);\n\nCREATE TABLE web_apps (\n    id INTEGER, -- example: [542]\n    name TEXT, -- example: ['Webshop']\n    PRIMARY KEY (id)\n);\n\nCREATE TABLE web_pages (\n    app_id INTEGER, -- example: [542]\n    page_no INTEGER, -- example: [1, 2, 3]\n    PRIMARY KEY (app_id),\n    CONSTRAINT fk_web_pages_app_id FOREIGN KEY (app_id) REFERENCES web_apps (id)\n);\n\nCREATE TABLE web_counter_hist (\n    app_id INTEGER, -- example: [542]\n    page_no INTEGER, -- example: [1, 2, 3]\n    `day` TEXT, -- example: ['2019-04-01', '2019-04-02', '2019-04-03']\n    PRIMARY KEY (app_id),\n    CONSTRAINT fk_web_counter_hist_app_id FOREIGN KEY (app_id) REFERENCES web_pages (app_id),\n    CONSTRAINT fk_web_counter_hist_page_no FOREIGN KEY (page_no) REFERENCES web_pages (page_no)\n);\n\nCREATE TABLE server_heartbeat (\n    beat_time TEXT, -- example: ['2019-04-10 13:00', '2019-04-10 13:05', '2019-04-10 13:10']\n);\n\nCREATE TABLE web_page_visits (\n    app_id INTEGER, -- example: [542]\n    page_no INTEGER, -- example: [1, 2, 3]\n    CONSTRAINT fk_web_page_visits_app_id FOREIGN KEY (app_id) REFERENCES web_pages (app_id),\n    CONSTRAINT fk_web_page_visits_page_no FOREIGN KEY (page_no) REFERENCES web_pages (page_no)\n);\n\nCREATE TABLE employees (\n    id INTEGER, -- example: [142, 144, 147]\n    name TEXT, -- example: ['Harold King', 'Mogens Juel', 'Axel de Proef']\n    supervisor_id INTEGER, -- example: [142, 143, 144]\n    PRIMARY KEY (id),\n    CONSTRAINT fk_employees_supervisor_id FOREIGN KEY (supervisor_id) REFERENCES employees (id)\n);\n\nCREATE TABLE emp_hire_periods (\n    emp_id INTEGER, -- example: [142, 143, 144]\n    start_ TEXT, -- example: ['2010-07-01', '2012-04-01', '2014-01-01']\n    PRIMARY KEY (emp_id),\n    CONSTRAINT fk_emp_hire_periods_emp_id FOREIGN KEY (emp_id) REFERENCES employees (id)\n);\n\nCREATE TABLE picking_list (\n    id INTEGER, -- example: [841, 842]\n    created TEXT, -- example: ['2019-01-16 14:03:41', '2019-01-19 15:57:42']\n    picker_emp_id INTEGER, -- example: [149, 152]\n    PRIMARY KEY (id),\n    CONSTRAINT fk_picking_list_picker_emp_id FOREIGN KEY (picker_emp_id) REFERENCES employees (id)\n);\n\nCREATE TABLE picking_line (\n    picklist_id INTEGER, -- example: [841, 842]\n    line_no INTEGER, -- example: [1, 2, 3]\n    location_id INTEGER, -- example: [16, 29, 65]\n    order_id INTEGER, -- example: [421, 422, 423]\n    product_id INTEGER, -- example: [4280, 6520]\n    qty REAL, -- example: [42.0, 14.0, 20.0]\n    PRIMARY KEY (picklist_id),\n    CONSTRAINT fk_picking_line_picklist_id FOREIGN KEY (picklist_id) REFERENCES picking_list (id),\n    CONSTRAINT fk_picking_line_location_id FOREIGN KEY (location_id) REFERENCES locations (id),\n    CONSTRAINT fk_picking_line_order_id FOREIGN KEY (order_id) REFERENCES orders (id),\n    CONSTRAINT fk_picking_line_product_id FOREIGN KEY (product_id) REFERENCES products (id)\n);\n\nCREATE TABLE picking_log (\n    picklist_id INTEGER, -- example: [841, 842]\n    activity TEXT, -- example: ['D', 'A', 'P']\n    location_id INTEGER, -- example: [16, 29, 65]\n    pickline_no INTEGER, -- example: [1, 2, 3]\n    PRIMARY KEY (picklist_id),\n    CONSTRAINT fk_picking_log_picklist_id FOREIGN KEY (picklist_id) REFERENCES picking_line (picklist_id),\n    CONSTRAINT fk_picking_log_picklist_id FOREIGN KEY (picklist_id) REFERENCES picking_list (id),\n    CONSTRAINT fk_picking_log_location_id FOREIGN KEY (location_id) REFERENCES locations (id),\n    CONSTRAINT fk_picking_log_pickline_no FOREIGN KEY (pickline_no) REFERENCES picking_line (line_no)\n);\n\nCREATE TABLE id_name_type (\n    id INTEGER,\n    name TEXT,\n    PRIMARY KEY (id)\n);\n\nCREATE TABLE id_name_coll_type (\n    collection_id INTEGER,\n    PRIMARY KEY (collection_id)\n);\n\nCREATE TABLE id_name_coll_entries (\n    collection_id INTEGER,\n    id INTEGER,\n    name TEXT,\n    PRIMARY KEY (collection_id),\n    CONSTRAINT fk_id_name_coll_entries_collection_id FOREIGN KEY (collection_id) REFERENCES id_name_coll_type (collection_id)\n);\n\nCREATE TABLE favorite_coll_type (\n    id INTEGER,\n    PRIMARY KEY (id)\n);",
        "question": "Based on monthly sales data starting in January 2016 and using a centered moving average to adjust for seasonality, which products had a seasonality-adjusted sales ratio that stayed consistently above 2 for every month in the year 2017?",
        "instance_id": "local275",
        "db_id": "oracle_sql"
    },
    {
        "db_desc": "CREATE TABLE customers (\n    id INTEGER, -- example: [50042, 50741, 51007]\n    PRIMARY KEY (id)\n);\n\nCREATE TABLE conway_gen_zero (\n    x INTEGER,\n    y INTEGER,\n    alive INTEGER,\n    PRIMARY KEY (x)\n);\n\nCREATE TABLE web_devices (\n    `day` TEXT, -- example: ['2019-05-01', '2019-05-02']\n    phone INTEGER, -- example: [1610, 2159]\n    PRIMARY KEY (`day`)\n);\n\nCREATE TABLE web_demographics (\n    `day` TEXT, -- example: ['2019-05-01', '2019-05-02']\n    m_tw_cnt INTEGER, -- example: [1232, 1438]\n    PRIMARY KEY (`day`)\n);\n\nCREATE TABLE channels_dim (\n    id INTEGER, -- example: [42, 44]\n    PRIMARY KEY (id)\n);\n\nCREATE TABLE gender_dim (\n    PRIMARY KEY (letter)\n);\n\nCREATE TABLE packaging (\n    id INTEGER, -- example: [501, 502, 511]\n    PRIMARY KEY (id)\n);\n\nCREATE TABLE packaging_relations (\n    packaging_id INTEGER, -- example: [511, 521, 522]\n    contains_id INTEGER, -- example: [501, 502, 511]\n    qty INTEGER, -- example: [3, 2, 72]\n    PRIMARY KEY (packaging_id),\n    CONSTRAINT fk_packaging_relations_packaging_id FOREIGN KEY (packaging_id) REFERENCES packaging (id),\n    CONSTRAINT fk_packaging_relations_contains_id FOREIGN KEY (contains_id) REFERENCES packaging (id)\n);\n\nCREATE TABLE product_groups (\n    id INTEGER, -- example: [142, 152, 202]\n    PRIMARY KEY (id)\n);\n\nCREATE TABLE products (\n    id INTEGER, -- example: [4040, 4160, 4280]\n    group_id INTEGER, -- example: [142, 152, 202]\n    PRIMARY KEY (id),\n    CONSTRAINT fk_products_group_id FOREIGN KEY (group_id) REFERENCES product_groups (id)\n);\n\nCREATE TABLE monthly_sales (\n    product_id INTEGER, -- example: [4040, 4160, 4280]\n    mth TEXT, -- example: ['2016-01-01']\n    qty INTEGER, -- example: [42, 37, 39]\n    PRIMARY KEY (product_id),\n    CONSTRAINT fk_monthly_sales_product_id FOREIGN KEY (product_id) REFERENCES products (id)\n);\n\nCREATE TABLE breweries (\n    id INTEGER, -- example: [518, 523, 536]\n    PRIMARY KEY (id)\n);\n\nCREATE TABLE purchases (\n    id INTEGER, -- example: [601, 611, 621]\n    purchased TEXT, -- example: ['2016-01-01']\n    brewery_id INTEGER, -- example: [518, 523, 536]\n    product_id INTEGER, -- example: [4040, 4160, 4280]\n    qty INTEGER, -- example: [52, 17, 34]\n    cost REAL, -- example: [388.0, 122.0, 163.0]\n    PRIMARY KEY (id),\n    CONSTRAINT fk_purchases_brewery_id FOREIGN KEY (brewery_id) REFERENCES breweries (id),\n    CONSTRAINT fk_purchases_product_id FOREIGN KEY (product_id) REFERENCES products (id)\n);\n\nCREATE TABLE product_alcohol (\n    product_id INTEGER, -- example: [4040, 4160, 4280]\n    sales_volume REAL, -- example: [330.0, 500.0]\n    PRIMARY KEY (product_id),\n    CONSTRAINT fk_product_alcohol_product_id FOREIGN KEY (product_id) REFERENCES products (id)\n);\n\nCREATE TABLE customer_favorites (\n    customer_id INTEGER, -- example: [50042, 50741, 51007]\n    PRIMARY KEY (customer_id),\n    CONSTRAINT fk_customer_favorites_customer_id FOREIGN KEY (customer_id) REFERENCES customers (id)\n);\n\nCREATE TABLE customer_reviews (\n    customer_id INTEGER, -- example: [50042, 50741, 51007]\n    PRIMARY KEY (customer_id),\n    CONSTRAINT fk_customer_reviews_customer_id FOREIGN KEY (customer_id) REFERENCES customers (id)\n);\n\nCREATE TABLE locations (\n    id INTEGER, -- example: [1, 2, 3]\n    PRIMARY KEY (id)\n);\n\nCREATE TABLE inventory (\n    id INTEGER, -- example: [1148, 1151, 1154]\n    location_id INTEGER, -- example: [2, 3, 4]\n    product_id INTEGER, -- example: [4040, 4160, 4280]\n    purchase_id INTEGER, -- example: [719, 720, 721]\n    qty REAL, -- example: [11.0, 48.0, 36.0]\n    PRIMARY KEY (id),\n    CONSTRAINT fk_inventory_location_id FOREIGN KEY (location_id) REFERENCES locations (id),\n    CONSTRAINT fk_inventory_product_id FOREIGN KEY (product_id) REFERENCES products (id),\n    CONSTRAINT fk_inventory_purchase_id FOREIGN KEY (purchase_id) REFERENCES purchases (id)\n);\n\nCREATE TABLE orders (\n    id INTEGER, -- example: [421, 427, 429]\n    customer_id INTEGER, -- example: [50042, 50741, 51069]\n    ordered TEXT, -- example: ['2019-01-15', '2019-01-17', '2019-01-18']\n    delivery TEXT,\n    PRIMARY KEY (id),\n    CONSTRAINT fk_orders_customer_id FOREIGN KEY (customer_id) REFERENCES customers (id)\n);\n\nCREATE TABLE orderlines (\n    id INTEGER, -- example: [9120, 9122, 9233]\n    order_id INTEGER, -- example: [421, 422, 423]\n    product_id INTEGER, -- example: [4280, 6520, 6600]\n    qty REAL, -- example: [110.0, 140.0, 80.0]\n    amount REAL, -- example: [2400.0, 2250.0, 1750.0]\n    PRIMARY KEY (id),\n    CONSTRAINT fk_orderlines_order_id FOREIGN KEY (order_id) REFERENCES orders (id),\n    CONSTRAINT fk_orderlines_product_id FOREIGN KEY (product_id) REFERENCES products (id)\n);\n\nCREATE TABLE monthly_budget (\n    product_id INTEGER, -- example: [6520, 6600]\n    mth TEXT, -- example: ['2018-01-01', '2018-02-01', '2018-03-01']\n    qty REAL, -- example: [30.0, 40.0, 50.0]\n    PRIMARY KEY (product_id),\n    CONSTRAINT fk_monthly_budget_product_id FOREIGN KEY (product_id) REFERENCES products (id)\n);\n\nCREATE TABLE product_minimums (\n    product_id INTEGER, -- example: [6520, 6600]\n    PRIMARY KEY (product_id),\n    CONSTRAINT fk_product_minimums_product_id FOREIGN KEY (product_id) REFERENCES products (id)\n);\n\nCREATE TABLE stock (\n    symbol TEXT, -- example: ['BEER']\n    company TEXT, -- example: ['Good Beer Trading Co']\n    PRIMARY KEY (symbol)\n);\n\nCREATE TABLE ticker (\n    symbol TEXT, -- example: ['BEER']\n    `day` TEXT, -- example: ['2019-04-01', '2019-04-02', '2019-04-03']\n    PRIMARY KEY (symbol),\n    CONSTRAINT fk_ticker_symbol FOREIGN KEY (symbol) REFERENCES stock (symbol)\n);\n\nCREATE TABLE web_apps (\n    id INTEGER, -- example: [542]\n    PRIMARY KEY (id)\n);\n\nCREATE TABLE web_pages (\n    app_id INTEGER, -- example: [542]\n    page_no INTEGER, -- example: [1, 2, 3]\n    PRIMARY KEY (app_id),\n    CONSTRAINT fk_web_pages_app_id FOREIGN KEY (app_id) REFERENCES web_apps (id)\n);\n\nCREATE TABLE web_counter_hist (\n    app_id INTEGER, -- example: [542]\n    page_no INTEGER, -- example: [1, 2, 3]\n    `day` TEXT, -- example: ['2019-04-01', '2019-04-02', '2019-04-03']\n    PRIMARY KEY (app_id),\n    CONSTRAINT fk_web_counter_hist_app_id FOREIGN KEY (app_id) REFERENCES web_pages (app_id),\n    CONSTRAINT fk_web_counter_hist_page_no FOREIGN KEY (page_no) REFERENCES web_pages (page_no)\n);\n\nCREATE TABLE server_heartbeat (\n    beat_time TEXT, -- example: ['2019-04-10 13:00', '2019-04-10 13:05', '2019-04-10 13:10']\n);\n\nCREATE TABLE web_page_visits (\n    visit_time TEXT, -- example: ['2019-04-20 08:15:42', '2019-04-20 08:16:31', '2019-04-20 08:28:55']\n    app_id INTEGER, -- example: [542]\n    page_no INTEGER, -- example: [1, 2, 3]\n    CONSTRAINT fk_web_page_visits_app_id FOREIGN KEY (app_id) REFERENCES web_pages (app_id),\n    CONSTRAINT fk_web_page_visits_page_no FOREIGN KEY (page_no) REFERENCES web_pages (page_no)\n);\n\nCREATE TABLE employees (\n    id INTEGER, -- example: [142, 144, 147]\n    supervisor_id INTEGER, -- example: [142, 143, 144]\n    PRIMARY KEY (id),\n    CONSTRAINT fk_employees_supervisor_id FOREIGN KEY (supervisor_id) REFERENCES employees (id)\n);\n\nCREATE TABLE emp_hire_periods (\n    emp_id INTEGER, -- example: [142, 143, 144]\n    start_ TEXT, -- example: ['2010-07-01', '2012-04-01', '2014-01-01']\n    PRIMARY KEY (emp_id),\n    CONSTRAINT fk_emp_hire_periods_emp_id FOREIGN KEY (emp_id) REFERENCES employees (id)\n);\n\nCREATE TABLE picking_list (\n    id INTEGER, -- example: [841, 842]\n    picker_emp_id INTEGER, -- example: [149, 152]\n    PRIMARY KEY (id),\n    CONSTRAINT fk_picking_list_picker_emp_id FOREIGN KEY (picker_emp_id) REFERENCES employees (id)\n);\n\nCREATE TABLE picking_line (\n    picklist_id INTEGER, -- example: [841, 842]\n    line_no INTEGER, -- example: [1, 2, 3]\n    location_id INTEGER, -- example: [16, 29, 65]\n    order_id INTEGER, -- example: [421, 422, 423]\n    product_id INTEGER, -- example: [4280, 6520]\n    qty REAL, -- example: [42.0, 14.0, 20.0]\n    PRIMARY KEY (picklist_id),\n    CONSTRAINT fk_picking_line_picklist_id FOREIGN KEY (picklist_id) REFERENCES picking_list (id),\n    CONSTRAINT fk_picking_line_location_id FOREIGN KEY (location_id) REFERENCES locations (id),\n    CONSTRAINT fk_picking_line_order_id FOREIGN KEY (order_id) REFERENCES orders (id),\n    CONSTRAINT fk_picking_line_product_id FOREIGN KEY (product_id) REFERENCES products (id)\n);\n\nCREATE TABLE picking_log (\n    picklist_id INTEGER, -- example: [841, 842]\n    activity TEXT, -- example: ['D', 'A', 'P']\n    location_id INTEGER, -- example: [16, 29, 65]\n    pickline_no INTEGER, -- example: [1, 2, 3]\n    PRIMARY KEY (picklist_id),\n    CONSTRAINT fk_picking_log_picklist_id FOREIGN KEY (picklist_id) REFERENCES picking_line (picklist_id),\n    CONSTRAINT fk_picking_log_picklist_id FOREIGN KEY (picklist_id) REFERENCES picking_list (id),\n    CONSTRAINT fk_picking_log_location_id FOREIGN KEY (location_id) REFERENCES locations (id),\n    CONSTRAINT fk_picking_log_pickline_no FOREIGN KEY (pickline_no) REFERENCES picking_line (line_no)\n);\n\nCREATE TABLE id_name_type (\n    id INTEGER,\n    name TEXT,\n    PRIMARY KEY (id)\n);\n\nCREATE TABLE id_name_coll_type (\n    collection_id INTEGER,\n    PRIMARY KEY (collection_id)\n);\n\nCREATE TABLE id_name_coll_entries (\n    collection_id INTEGER,\n    id INTEGER,\n    name TEXT,\n    PRIMARY KEY (collection_id),\n    CONSTRAINT fk_id_name_coll_entries_collection_id FOREIGN KEY (collection_id) REFERENCES id_name_coll_type (collection_id)\n);\n\nCREATE TABLE favorite_coll_type (\n    id INTEGER,\n    PRIMARY KEY (id)\n);",
        "question": "What is the average forecasted annual sales for products 4160 and 7790 during 2018, using monthly sales data starting from January 2016 for the first 36 months, applying seasonality adjustments from time steps 7 through 30, and employing a weighted regression method to estimate sales?",
        "instance_id": "local277",
        "db_id": "oracle_sql"
    },
    {
        "db_desc": "CREATE TABLE customers (\n    id INTEGER, -- example: [50042, 50741, 51007]\n    name TEXT, -- example: ['The White Hart', 'Hygge og Humle', 'Boom Beer Bar']\n    PRIMARY KEY (id)\n);\n\nCREATE TABLE conway_gen_zero (\n    x INTEGER,\n    y INTEGER,\n    alive INTEGER,\n    PRIMARY KEY (x)\n);\n\nCREATE TABLE web_devices (\n    `day` TEXT, -- example: ['2019-05-01', '2019-05-02']\n    tablet INTEGER, -- example: [812, 1102]\n    PRIMARY KEY (`day`)\n);\n\nCREATE TABLE web_demographics (\n    `day` TEXT, -- example: ['2019-05-01', '2019-05-02']\n    PRIMARY KEY (`day`)\n);\n\nCREATE TABLE channels_dim (\n    id INTEGER, -- example: [42, 44]\n    name TEXT, -- example: ['Twitter', 'Facebook']\n    PRIMARY KEY (id)\n);\n\nCREATE TABLE gender_dim (\n    name TEXT, -- example: ['Female', 'Male']\n    PRIMARY KEY (letter)\n);\n\nCREATE TABLE packaging (\n    id INTEGER, -- example: [501, 502, 511]\n    name TEXT, -- example: ['Bottle 330cl', 'Bottle 500cl', 'Gift Carton']\n    PRIMARY KEY (id)\n);\n\nCREATE TABLE packaging_relations (\n    packaging_id INTEGER, -- example: [511, 521, 522]\n    contains_id INTEGER, -- example: [501, 502, 511]\n    qty INTEGER, -- example: [3, 2, 72]\n    PRIMARY KEY (packaging_id),\n    CONSTRAINT fk_packaging_relations_packaging_id FOREIGN KEY (packaging_id) REFERENCES packaging (id),\n    CONSTRAINT fk_packaging_relations_contains_id FOREIGN KEY (contains_id) REFERENCES packaging (id)\n);\n\nCREATE TABLE product_groups (\n    id INTEGER, -- example: [142, 152, 202]\n    name TEXT, -- example: ['Stout', 'Belgian', 'Wheat']\n    PRIMARY KEY (id)\n);\n\nCREATE TABLE products (\n    id INTEGER, -- example: [4040, 4160, 4280]\n    name TEXT, -- example: ['Coalminers Sweat', 'Reindeer Fuel', 'Hoppy Crude Oil']\n    group_id INTEGER, -- example: [142, 152, 202]\n    PRIMARY KEY (id),\n    CONSTRAINT fk_products_group_id FOREIGN KEY (group_id) REFERENCES product_groups (id)\n);\n\nCREATE TABLE monthly_sales (\n    product_id INTEGER, -- example: [4040, 4160, 4280]\n    mth TEXT, -- example: ['2016-01-01', '2016-02-01', '2016-03-01']\n    qty INTEGER, -- example: [42, 37, 39]\n    PRIMARY KEY (product_id),\n    CONSTRAINT fk_monthly_sales_product_id FOREIGN KEY (product_id) REFERENCES products (id)\n);\n\nCREATE TABLE breweries (\n    id INTEGER, -- example: [518, 523, 536]\n    name TEXT, -- example: ['Balthazar Brauerei', 'Happy Hoppy Hippo', 'Brewing Barbarian']\n    PRIMARY KEY (id)\n);\n\nCREATE TABLE purchases (\n    id INTEGER, -- example: [601, 611, 621]\n    purchased TEXT, -- example: ['2016-01-01', '2016-01-03', '2016-01-07']\n    brewery_id INTEGER, -- example: [518, 523, 536]\n    product_id INTEGER, -- example: [4040, 4160, 4280]\n    qty INTEGER, -- example: [52, 17, 34]\n    cost REAL, -- example: [388.0, 122.0, 163.0]\n    PRIMARY KEY (id),\n    CONSTRAINT fk_purchases_brewery_id FOREIGN KEY (brewery_id) REFERENCES breweries (id),\n    CONSTRAINT fk_purchases_product_id FOREIGN KEY (product_id) REFERENCES products (id)\n);\n\nCREATE TABLE product_alcohol (\n    product_id INTEGER, -- example: [4040, 4160, 4280]\n    PRIMARY KEY (product_id),\n    CONSTRAINT fk_product_alcohol_product_id FOREIGN KEY (product_id) REFERENCES products (id)\n);\n\nCREATE TABLE customer_favorites (\n    customer_id INTEGER, -- example: [50042, 50741, 51007]\n    PRIMARY KEY (customer_id),\n    CONSTRAINT fk_customer_favorites_customer_id FOREIGN KEY (customer_id) REFERENCES customers (id)\n);\n\nCREATE TABLE customer_reviews (\n    customer_id INTEGER, -- example: [50042, 50741, 51007]\n    PRIMARY KEY (customer_id),\n    CONSTRAINT fk_customer_reviews_customer_id FOREIGN KEY (customer_id) REFERENCES customers (id)\n);\n\nCREATE TABLE locations (\n    id INTEGER, -- example: [1, 2, 3]\n    warehouse INTEGER, -- example: [1, 2]\n    `position` INTEGER, -- example: [1, 2, 3]\n    PRIMARY KEY (id)\n);\n\nCREATE TABLE inventory (\n    id INTEGER, -- example: [1148, 1151, 1154]\n    location_id INTEGER, -- example: [2, 3, 4]\n    product_id INTEGER, -- example: [4040, 4160, 4280]\n    purchase_id INTEGER, -- example: [719, 720, 721]\n    qty REAL, -- example: [11.0, 48.0, 36.0]\n    PRIMARY KEY (id),\n    CONSTRAINT fk_inventory_location_id FOREIGN KEY (location_id) REFERENCES locations (id),\n    CONSTRAINT fk_inventory_product_id FOREIGN KEY (product_id) REFERENCES products (id),\n    CONSTRAINT fk_inventory_purchase_id FOREIGN KEY (purchase_id) REFERENCES purchases (id)\n);\n\nCREATE TABLE orders (\n    id INTEGER, -- example: [421, 427, 429]\n    customer_id INTEGER, -- example: [50042, 50741, 51069]\n    ordered TEXT, -- example: ['2019-01-15', '2019-01-17', '2019-01-18']\n    delivery TEXT,\n    PRIMARY KEY (id),\n    CONSTRAINT fk_orders_customer_id FOREIGN KEY (customer_id) REFERENCES customers (id)\n);\n\nCREATE TABLE orderlines (\n    id INTEGER, -- example: [9120, 9122, 9233]\n    order_id INTEGER, -- example: [421, 422, 423]\n    product_id INTEGER, -- example: [4280, 6520, 6600]\n    qty REAL, -- example: [110.0, 140.0, 80.0]\n    amount REAL, -- example: [2400.0, 2250.0, 1750.0]\n    PRIMARY KEY (id),\n    CONSTRAINT fk_orderlines_order_id FOREIGN KEY (order_id) REFERENCES orders (id),\n    CONSTRAINT fk_orderlines_product_id FOREIGN KEY (product_id) REFERENCES products (id)\n);\n\nCREATE TABLE monthly_budget (\n    product_id INTEGER, -- example: [6520, 6600]\n    mth TEXT, -- example: ['2018-01-01', '2018-02-01', '2018-03-01']\n    qty REAL, -- example: [30.0, 40.0, 50.0]\n    PRIMARY KEY (product_id),\n    CONSTRAINT fk_monthly_budget_product_id FOREIGN KEY (product_id) REFERENCES products (id)\n);\n\nCREATE TABLE product_minimums (\n    product_id INTEGER, -- example: [6520, 6600]\n    qty_minimum REAL, -- example: [100.0, 30.0]\n    qty_purchase REAL, -- example: [400.0, 100.0]\n    PRIMARY KEY (product_id),\n    CONSTRAINT fk_product_minimums_product_id FOREIGN KEY (product_id) REFERENCES products (id)\n);\n\nCREATE TABLE stock (\n    symbol TEXT, -- example: ['BEER']\n    company TEXT, -- example: ['Good Beer Trading Co']\n    PRIMARY KEY (symbol)\n);\n\nCREATE TABLE ticker (\n    symbol TEXT, -- example: ['BEER']\n    `day` TEXT, -- example: ['2019-04-01', '2019-04-02', '2019-04-03']\n    price REAL, -- example: [14.9, 14.2, 15.7]\n    PRIMARY KEY (symbol),\n    CONSTRAINT fk_ticker_symbol FOREIGN KEY (symbol) REFERENCES stock (symbol)\n);\n\nCREATE TABLE web_apps (\n    id INTEGER, -- example: [542]\n    name TEXT, -- example: ['Webshop']\n    PRIMARY KEY (id)\n);\n\nCREATE TABLE web_pages (\n    app_id INTEGER, -- example: [542]\n    page_no INTEGER, -- example: [1, 2, 3]\n    PRIMARY KEY (app_id),\n    CONSTRAINT fk_web_pages_app_id FOREIGN KEY (app_id) REFERENCES web_apps (id)\n);\n\nCREATE TABLE web_counter_hist (\n    app_id INTEGER, -- example: [542]\n    page_no INTEGER, -- example: [1, 2, 3]\n    `day` TEXT, -- example: ['2019-04-01', '2019-04-02', '2019-04-03']\n    PRIMARY KEY (app_id),\n    CONSTRAINT fk_web_counter_hist_app_id FOREIGN KEY (app_id) REFERENCES web_pages (app_id),\n    CONSTRAINT fk_web_counter_hist_page_no FOREIGN KEY (page_no) REFERENCES web_pages (page_no)\n);\n\nCREATE TABLE server_heartbeat (\n    \n\nCREATE TABLE web_page_visits (\n    app_id INTEGER, -- example: [542]\n    page_no INTEGER, -- example: [1, 2, 3]\n    CONSTRAINT fk_web_page_visits_app_id FOREIGN KEY (app_id) REFERENCES web_pages (app_id),\n    CONSTRAINT fk_web_page_visits_page_no FOREIGN KEY (page_no) REFERENCES web_pages (page_no)\n);\n\nCREATE TABLE employees (\n    id INTEGER, -- example: [142, 144, 147]\n    name TEXT, -- example: ['Harold King', 'Mogens Juel', 'Axel de Proef']\n    supervisor_id INTEGER, -- example: [142, 143, 144]\n    PRIMARY KEY (id),\n    CONSTRAINT fk_employees_supervisor_id FOREIGN KEY (supervisor_id) REFERENCES employees (id)\n);\n\nCREATE TABLE emp_hire_periods (\n    emp_id INTEGER, -- example: [142, 143, 144]\n    start_ TEXT, -- example: ['2010-07-01', '2012-04-01', '2014-01-01']\n    end_ TEXT, -- example: ['2012-04-01', '2014-01-01', '2016-06-01']\n    PRIMARY KEY (emp_id),\n    CONSTRAINT fk_emp_hire_periods_emp_id FOREIGN KEY (emp_id) REFERENCES employees (id)\n);\n\nCREATE TABLE picking_list (\n    id INTEGER, -- example: [841, 842]\n    picker_emp_id INTEGER, -- example: [149, 152]\n    PRIMARY KEY (id),\n    CONSTRAINT fk_picking_list_picker_emp_id FOREIGN KEY (picker_emp_id) REFERENCES employees (id)\n);\n\nCREATE TABLE picking_line (\n    picklist_id INTEGER, -- example: [841, 842]\n    line_no INTEGER, -- example: [1, 2, 3]\n    location_id INTEGER, -- example: [16, 29, 65]\n    order_id INTEGER, -- example: [421, 422, 423]\n    product_id INTEGER, -- example: [4280, 6520]\n    qty REAL, -- example: [42.0, 14.0, 20.0]\n    PRIMARY KEY (picklist_id),\n    CONSTRAINT fk_picking_line_picklist_id FOREIGN KEY (picklist_id) REFERENCES picking_list (id),\n    CONSTRAINT fk_picking_line_location_id FOREIGN KEY (location_id) REFERENCES locations (id),\n    CONSTRAINT fk_picking_line_order_id FOREIGN KEY (order_id) REFERENCES orders (id),\n    CONSTRAINT fk_picking_line_product_id FOREIGN KEY (product_id) REFERENCES products (id)\n);\n\nCREATE TABLE picking_log (\n    picklist_id INTEGER, -- example: [841, 842]\n    activity TEXT, -- example: ['D', 'A', 'P']\n    location_id INTEGER, -- example: [16, 29, 65]\n    pickline_no INTEGER, -- example: [1, 2, 3]\n    PRIMARY KEY (picklist_id),\n    CONSTRAINT fk_picking_log_picklist_id FOREIGN KEY (picklist_id) REFERENCES picking_line (picklist_id),\n    CONSTRAINT fk_picking_log_picklist_id FOREIGN KEY (picklist_id) REFERENCES picking_list (id),\n    CONSTRAINT fk_picking_log_location_id FOREIGN KEY (location_id) REFERENCES locations (id),\n    CONSTRAINT fk_picking_log_pickline_no FOREIGN KEY (pickline_no) REFERENCES picking_line (line_no)\n);\n\nCREATE TABLE id_name_type (\n    id INTEGER,\n    name TEXT,\n    PRIMARY KEY (id)\n);\n\nCREATE TABLE id_name_coll_type (\n    collection_id INTEGER,\n    PRIMARY KEY (collection_id)\n);\n\nCREATE TABLE id_name_coll_entries (\n    collection_id INTEGER,\n    id INTEGER,\n    name TEXT,\n    PRIMARY KEY (collection_id),\n    CONSTRAINT fk_id_name_coll_entries_collection_id FOREIGN KEY (collection_id) REFERENCES id_name_coll_type (collection_id)\n);\n\nCREATE TABLE favorite_coll_type (\n    id INTEGER,\n    PRIMARY KEY (id)\n);",
        "question": "Using a recursive monthly inventory adjustment model starting from December 2018 inventory levels, where we restock a product if its ending inventory drops below the minimum required level, determine for each product the month in 2019 where the absolute difference between its ending inventory and the minimum required level is the smallest, and return the product_id, that month, and the absolute difference.",
        "instance_id": "local279",
        "db_id": "oracle_sql"
    },
    {
        "db_desc": "CREATE TABLE sqlite_sequence (\n    \n\nCREATE TABLE Player_Attributes (\n    player_api_id INTEGER, -- example: [505942, 155782, 162549]\n    `date` TEXT, -- example: ['2016-02-18 00:00:00', '2015-11-19 00:00:00', '2015-09-21 00:00:00']\n    crossing INTEGER, -- example: [49, 48, 80]\n    dribbling INTEGER, -- example: [51, 50, 73]\n    balance INTEGER, -- example: [65, 90, 87]\n    PRIMARY KEY (id),\n    CONSTRAINT fk_player_attributes_player_fifa_api_id FOREIGN KEY (player_fifa_api_id) REFERENCES Player (player_fifa_api_id),\n    CONSTRAINT fk_player_attributes_player_api_id FOREIGN KEY (player_api_id) REFERENCES Player (player_api_id)\n);\n\nCREATE TABLE Player (\n    player_api_id INTEGER, -- example: [2625, 2752, 2768]\n    player_name TEXT, -- example: ['Aaron Appindangoye', 'Aaron Cresswell', 'Aaron Doran']\n    weight INTEGER, -- example: [187, 146, 163]\n    PRIMARY KEY (id)\n);\n\nCREATE TABLE `Match` (\n    country_id INTEGER, -- example: [1, 1729, 4769]\n    league_id INTEGER, -- example: [1, 1729, 4769]\n    season TEXT, -- example: ['2008/2009', '2009/2010', '2010/2011']\n    `date` TEXT, -- example: ['2008-08-17 00:00:00', '2008-08-16 00:00:00', '2008-09-24 00:00:00']\n    match_api_id INTEGER, -- example: [483129, 483130, 483131]\n    home_team_api_id INTEGER, -- example: [9987, 10000, 9984]\n    away_team_api_id INTEGER, -- example: [9993, 9994, 8635]\n    home_team_goal INTEGER, -- example: [1, 0, 5]\n    away_team_goal INTEGER, -- example: [1, 0, 3]\n    home_player_X1 INTEGER, -- example: [1, 2, 0]\n    home_player_X3 INTEGER, -- example: [4, 6, 8]\n    away_player_X3 INTEGER, -- example: [4, 6, 5]\n    home_player_Y1 INTEGER, -- example: [1, 3, 0]\n    home_player_Y3 INTEGER, -- example: [3, 5]\n    away_player_Y3 INTEGER, -- example: [3, 7]\n    away_player_Y8 INTEGER, -- example: [7, 8, 6]\n    home_player_1 INTEGER, -- example: [39890, 38327, 95597]\n    home_player_2 INTEGER, -- example: [67950, 39580, 38292]\n    home_player_3 INTEGER, -- example: [38788, 67958, 30692]\n    home_player_4 INTEGER, -- example: [38312, 67959, 38435]\n    home_player_5 INTEGER, -- example: [26235, 37112, 94462]\n    home_player_6 INTEGER, -- example: [36393, 46004, 119117]\n    home_player_7 INTEGER, -- example: [148286, 164732, 35412]\n    home_player_8 INTEGER, -- example: [67898, 39631, 95609]\n    home_player_9 INTEGER, -- example: [26916, 164352, 38246]\n    home_player_10 INTEGER, -- example: [38801, 38423, 25957]\n    home_player_11 INTEGER, -- example: [94289, 26502, 38419]\n    away_player_1 INTEGER, -- example: [34480, 37937, 38252]\n    away_player_2 INTEGER, -- example: [38388, 38293, 39156]\n    away_player_3 INTEGER, -- example: [26458, 148313, 39151]\n    away_player_4 INTEGER, -- example: [13423, 104411, 166554]\n    away_player_5 INTEGER, -- example: [38389, 148314, 15652]\n    away_player_6 INTEGER, -- example: [38798, 37202, 39145]\n    away_player_7 INTEGER, -- example: [30949, 43158, 46890]\n    away_player_8 INTEGER, -- example: [38253, 9307, 38947]\n    away_player_9 INTEGER, -- example: [106013, 42153, 46881]\n    away_player_10 INTEGER, -- example: [38383, 32690, 39158]\n    away_player_11 INTEGER, -- example: [46552, 38782, 119118]\n    goal TEXT, -- example: ['<goal><value><comment>n</comment><stats>']\n    `cross` TEXT, -- example: ['<cross><value><stats><crosses>1</crosses']\n    corner TEXT, -- example: ['<corner><value><stats><corners>1</corner']\n    possession TEXT, -- example: ['<possession><value><comment>56</comment>', '<possession><value><comment>65</comment>', '<possession><value><comment>45</comment>']\n    PRIMARY KEY (id),\n    CONSTRAINT fk_match_league_id FOREIGN KEY (league_id) REFERENCES League (id),\n    CONSTRAINT fk_match_home_team_api_id FOREIGN KEY (home_team_api_id) REFERENCES Team (team_api_id),\n    CONSTRAINT fk_match_away_team_api_id FOREIGN KEY (away_team_api_id) REFERENCES Team (team_api_id),\n    CONSTRAINT fk_match_home_player_1 FOREIGN KEY (home_player_1) REFERENCES Player (player_api_id),\n    CONSTRAINT fk_match_home_player_2 FOREIGN KEY (home_player_2) REFERENCES Player (player_api_id),\n    CONSTRAINT fk_match_home_player_3 FOREIGN KEY (home_player_3) REFERENCES Player (player_api_id),\n    CONSTRAINT fk_match_home_player_4 FOREIGN KEY (home_player_4) REFERENCES Player (player_api_id),\n    CONSTRAINT fk_match_home_player_5 FOREIGN KEY (home_player_5) REFERENCES Player (player_api_id),\n    CONSTRAINT fk_match_home_player_6 FOREIGN KEY (home_player_6) REFERENCES Player (player_api_id),\n    CONSTRAINT fk_match_home_player_7 FOREIGN KEY (home_player_7) REFERENCES Player (player_api_id),\n    CONSTRAINT fk_match_home_player_8 FOREIGN KEY (home_player_8) REFERENCES Player (player_api_id),\n    CONSTRAINT fk_match_home_player_9 FOREIGN KEY (home_player_9) REFERENCES Player (player_api_id),\n    CONSTRAINT fk_match_home_player_10 FOREIGN KEY (home_player_10) REFERENCES Player (player_api_id),\n    CONSTRAINT fk_match_home_player_11 FOREIGN KEY (home_player_11) REFERENCES Player (player_api_id),\n    CONSTRAINT fk_match_away_player_1 FOREIGN KEY (away_player_1) REFERENCES Player (player_api_id),\n    CONSTRAINT fk_match_away_player_2 FOREIGN KEY (away_player_2) REFERENCES Player (player_api_id),\n    CONSTRAINT fk_match_away_player_3 FOREIGN KEY (away_player_3) REFERENCES Player (player_api_id),\n    CONSTRAINT fk_match_away_player_4 FOREIGN KEY (away_player_4) REFERENCES Player (player_api_id),\n    CONSTRAINT fk_match_away_player_5 FOREIGN KEY (away_player_5) REFERENCES Player (player_api_id),\n    CONSTRAINT fk_match_away_player_6 FOREIGN KEY (away_player_6) REFERENCES Player (player_api_id),\n    CONSTRAINT fk_match_away_player_7 FOREIGN KEY (away_player_7) REFERENCES Player (player_api_id),\n    CONSTRAINT fk_match_away_player_8 FOREIGN KEY (away_player_8) REFERENCES Player (player_api_id),\n    CONSTRAINT fk_match_away_player_9 FOREIGN KEY (away_player_9) REFERENCES Player (player_api_id),\n    CONSTRAINT fk_match_away_player_10 FOREIGN KEY (away_player_10) REFERENCES Player (player_api_id),\n    CONSTRAINT fk_match_away_player_11 FOREIGN KEY (away_player_11) REFERENCES Player (player_api_id)\n);\n\nCREATE TABLE League (\n    country_id INTEGER, -- example: [1, 1729, 4769]\n    name TEXT, -- example: ['Belgium Jupiler League', 'England Premier League', 'France Ligue 1']\n    PRIMARY KEY (id)\n);\n\nCREATE TABLE Country (\n    name TEXT, -- example: ['Belgium', 'England', 'France']\n    PRIMARY KEY (id)\n);\n\nCREATE TABLE Team (\n    team_api_id INTEGER, -- example: [1601, 1773, 1957]\n    team_fifa_api_id INTEGER, -- example: [673, 675, 15005]\n    team_long_name TEXT, -- example: ['KRC Genk', 'Beerschot AC', 'SV Zulte-Waregem']\n    team_short_name TEXT, -- example: ['GET']\n    PRIMARY KEY (id)\n);\n\nCREATE TABLE Team_Attributes (\n    team_fifa_api_id INTEGER, -- example: [434, 77, 614]\n    team_api_id INTEGER, -- example: [9930, 8485, 8576]\n    `date` TEXT, -- example: ['2010-02-22 00:00:00', '2014-09-19 00:00:00', '2015-09-10 00:00:00']\n    PRIMARY KEY (id),\n    CONSTRAINT fk_team_attributes_team_fifa_api_id FOREIGN KEY (team_fifa_api_id) REFERENCES Team (team_fifa_api_id),\n    CONSTRAINT fk_team_attributes_team_api_id FOREIGN KEY (team_api_id) REFERENCES Team (team_api_id)\n);",
        "question": "Analyze the soccer match dataset to determine the champion team for each season across all countries and leagues, awarding 3 points for every win, 1 point for every tie, and 0 points for every loss. For each season, return the champion\u2019s team name, the league, the country, and the total points accumulated.",
        "instance_id": "local283",
        "db_id": "EU_soccer"
    },
    {
        "db_desc": "CREATE TABLE weekly_sales (\n    sales INTEGER, -- example: [3656163, 996575, 16509610]\n);\n\nCREATE TABLE shopping_cart_users (\n    \n\nCREATE TABLE bitcoin_members (\n    \n\nCREATE TABLE interest_metrics (\n    \n\nCREATE TABLE customer_regions (\n    \n\nCREATE TABLE customer_transactions (\n    \n\nCREATE TABLE bitcoin_transactions (\n    ticker TEXT, -- example: ['BTC', 'ETH']\n    quantity REAL, -- example: [50.0, 9.562185136, 8.842987018]\n    percentage_fee REAL, -- example: [0.3, 0.0, 0.02]\n\nCREATE TABLE customer_nodes (\n    \n\nCREATE TABLE cleaned_weekly_sales (\n    sales INTEGER, -- example: [3656163, 996575, 16509610]\n\nCREATE TABLE veg_txn_df (\n    item_code INTEGER, -- example: [102900005117056, 102900005115960, 102900005115823]\n    `discount(%)` INTEGER, -- example: [1]\n\nCREATE TABLE shopping_cart_events (\n    \n\nCREATE TABLE shopping_cart_page_hierarchy (\n    \n\nCREATE TABLE bitcoin_prices (\n    ticker TEXT, -- example: ['ETH', 'BTC']\n    price REAL, -- example: [3177.84, 3243.9, 3273.58]\n    high REAL, -- example: [3282.21, 3284.58, 3279.93]\n    low REAL, -- example: [3162.79, 3212.24, 3063.37]\n    change TEXT, -- example: ['-2.04%', '-0.91%', '5.82%']\n);\n\nCREATE TABLE interest_map (\n    id INTEGER, -- example: [1, 2, 3]\n    interest_summary TEXT, -- example: ['Consumers using fitness tracking apps an', 'Consumers researching game reviews and c', 'Readers of automotive news and car revie']\n\nCREATE TABLE veg_loss_rate_df (\n    item_code INTEGER, -- example: [102900005115168, 102900005115199, 102900005115250]\n    item_name TEXT, -- example: ['Niushou Shengcai', 'Sichuan Red Cedar', 'Xixia Black Mushroom (1)']\n    `loss_rate_%` REAL, -- example: [4.39, 10.46, 10.8]\n);\n\nCREATE TABLE shopping_cart_campaign_identifier (\n    \n\nCREATE TABLE veg_cat (\n    item_code INTEGER, -- example: [102900005115168, 102900005115199, 102900005115625]\n    item_name TEXT, -- example: ['Niushou Shengcai', 'Sichuan Red Cedar', 'Local Xiaomao Cabbage']\n\nCREATE TABLE veg_whsle_df (\n    whsle_date TEXT, -- example: ['2020-07-01 00:00:00', '2020-07-02 00:00:00', '2020-07-03 00:00:00']\n    item_code INTEGER, -- example: [102900005115762, 102900005115779, 102900005115786]\n    `whsle_px_rmb-kg` REAL, -- example: [3.88, 6.72, 3.19]\n);\n\nCREATE TABLE shopping_cart_event_identifier (\n    ",
        "question": "For veg whsle data, can you generate a summary of our items' loss rates? Include the average loss rate, and also break down the count of items that are below, above, and within one standard deviation from this average.",
        "instance_id": "local284",
        "db_id": "bank_sales_trading"
    },
    {
        "db_desc": "CREATE TABLE weekly_sales (\n    region TEXT, -- example: ['ASIA', 'USA', 'EUROPE']\n    transactions INTEGER, -- example: [120631, 31574, 529151]\n    sales INTEGER, -- example: [3656163, 996575, 16509610]\n);\n\nCREATE TABLE shopping_cart_users (\n    \n\nCREATE TABLE bitcoin_members (\n    first_name TEXT, -- example: ['Danny', 'Vipul', 'Charlie']\n    region TEXT, -- example: ['Australia', 'United States', 'Africa']\n);\n\nCREATE TABLE interest_metrics (\n    _year REAL, -- example: [2018.0, 2019.0]\n    month_year TEXT, -- example: ['07-2018', '08-2018', '09-2018']\n    ranking INTEGER, -- example: [1, 2, 3]\n\nCREATE TABLE customer_regions (\n    \n\nCREATE TABLE customer_transactions (\n    txn_amount INTEGER, -- example: [82, 712, 196]\n);\n\nCREATE TABLE bitcoin_transactions (\n    ticker TEXT, -- example: ['BTC', 'ETH']\n    quantity REAL, -- example: [50.0, 9.562185136, 8.842987018]\n    percentage_fee REAL, -- example: [0.3, 0.0, 0.02]\n\nCREATE TABLE customer_nodes (\n    \n\nCREATE TABLE cleaned_weekly_sales (\n    region TEXT, -- example: ['ASIA', 'USA', 'EUROPE']\n    transactions INTEGER, -- example: [120631, 31574, 529151]\n    sales INTEGER, -- example: [3656163, 996575, 16509610]\n    calendar_year INTEGER, -- example: [2020, 2019, 2018]\n\nCREATE TABLE veg_txn_df (\n    item_code INTEGER, -- example: [102900005117056, 102900005115960, 102900005115823]\n    `qty_sold(kg)` REAL, -- example: [0.396, 0.849, 0.409]\n    `unit_selling_px_rmb/kg` REAL, -- example: [7.6, 3.2, 10.0]\n    `sale/return` TEXT, -- example: ['sale', 'return']\n    `discount(%)` INTEGER, -- example: [1]\n\nCREATE TABLE shopping_cart_events (\n    \n\nCREATE TABLE shopping_cart_page_hierarchy (\n    page_name TEXT, -- example: ['Home Page', 'All Products', 'Salmon']\n    product_category TEXT, -- example: ['Fish', 'Luxury', 'Shellfish']\n\nCREATE TABLE bitcoin_prices (\n    ticker TEXT, -- example: ['ETH', 'BTC']\n    price REAL, -- example: [3177.84, 3243.9, 3273.58]\n    `open` REAL, -- example: [3243.96, 3273.78, 3093.78]\n    low REAL, -- example: [3162.79, 3212.24, 3063.37]\n    volume TEXT, -- example: ['582.04K', '466.21K', '839.54K']\n    change TEXT, -- example: ['-2.04%', '-0.91%', '5.82%']\n);\n\nCREATE TABLE interest_map (\n    id INTEGER, -- example: [1, 2, 3]\n\nCREATE TABLE veg_loss_rate_df (\n    item_code INTEGER, -- example: [102900005115168, 102900005115199, 102900005115250]\n    item_name TEXT, -- example: ['Broccoli']\n    `loss_rate_%` REAL, -- example: [4.39, 10.46, 10.8]\n);\n\nCREATE TABLE shopping_cart_campaign_identifier (\n    \n\nCREATE TABLE veg_cat (\n    item_code INTEGER, -- example: [102900005115168, 102900005115199, 102900005115625]\n    item_name TEXT, -- example: ['Broccoli']\n    category_code INTEGER, -- example: [1011010101, 1011010201, 1011010402]\n    category_name TEXT, -- example: ['Flower/Leaf\\xa0Vegetables', 'Cabbage', 'Aquatic Tuberous Vegetables']\n);\n\nCREATE TABLE veg_whsle_df (\n    whsle_date TEXT, -- example: ['2020-07-01 00:00:00', '2020-07-02 00:00:00', '2020-07-03 00:00:00']\n    item_code INTEGER, -- example: [102900005115762, 102900005115779, 102900005115786]\n    `whsle_px_rmb-kg` REAL, -- example: [3.88, 6.72, 3.19]\n);\n\nCREATE TABLE shopping_cart_event_identifier (\n    ",
        "question": "For veg whsle data, can you analyze our financial performance over the years 2020 to 2023? I need insights into the average wholesale price, maximum wholesale price, minimum wholesale price, wholesale price difference, total wholesale price, total selling price, average loss rate, total loss, and profit for each category within each year. Round all calculated values to two decimal places.",
        "instance_id": "local285",
        "db_id": "bank_sales_trading"
    },
    {
        "db_desc": "CREATE TABLE customers (\n    customer_city TEXT, -- example: ['sales']\n\nCREATE TABLE sellers (\n    seller_id TEXT, -- example: ['3442f8959a84dea7ee197c632cb2df15', 'd1b65fc7debc3361ea86b5f14c68d2e2', 'ce3ad9de960102d0677a81f5d0bb7b2d']\n    seller_zip_code_prefix INTEGER, -- example: [13023, 13844, 20031]\n    seller_city TEXT, -- example: ['campinas', 'mogi guacu', 'rio de janeiro']\n    seller_state TEXT, -- example: ['SP', 'RJ', 'PE']\n);\n\nCREATE TABLE order_reviews (\n    review_id TEXT, -- example: ['7bc2406110b926393aa56f80a40eba40', '80e641a11e56f04c1ad469d5645fdfde', '228ce5500dc1d8e020d8d1322874b6f0']\n    review_score INTEGER, -- example: [4, 5, 1]\n    review_comment_title TEXT, -- example: ['recomendo', 'Super recomendo', 'N\u00e3o chegou meu produto ']\n    review_comment_message TEXT, -- example: ['Recebi bem antes do prazo estipulado.', 'Parab\u00e9ns lojas lannister adorei comprar ', 'aparelho eficiente. no site a marca do a']\n    review_answer_timestamp TEXT, -- example: ['2018-01-18 21:46:59', '2018-03-11 03:05:13', '2018-02-18 14:36:24']\n);\n\nCREATE TABLE order_items (\n    order_item_id INTEGER, -- example: [1, 2, 3]\n    product_id TEXT, -- example: ['4244733e06e7ecb4970a6e2683c13e61', 'e5f2d52b802189ee658865ca93d83a8f', 'c777355d18b72b67abbeef9df44fd0fd']\n    seller_id TEXT, -- example: ['48436dade18ac8b2bce089ec2a041202', 'dd7ddc04e1b6c2c614352b383efe2d36', '5b51032eddd242adc84c38acab88f23d']\n    shipping_limit_date TEXT, -- example: ['2017-09-19 09:45:35', '2017-05-03 11:05:13', '2018-01-18 14:48:30']\n    price REAL, -- example: [58.9, 239.9, 199.0]\n\nCREATE TABLE products (\n    product_id TEXT, -- example: ['1e9e8ef04dbcff4541ed26657ea517e5', '3aa071139cb16b67ca9e5dea641aaa2f', '96bd76ec8810374ed1b65e291975717f']\n    product_category_name TEXT, -- example: ['perfumaria', 'artes', 'esporte_lazer']\n    product_name_lenght REAL, -- example: [40.0, 44.0, 46.0]\n    product_photos_qty REAL, -- example: [1.0, 4.0, 2.0]\n    product_weight_g REAL, -- example: [225.0, 1000.0, 154.0]\n\nCREATE TABLE geolocation (\n    geolocation_city TEXT, -- example: ['sales']\n\nCREATE TABLE product_category_name_translation (\n    product_category_name TEXT, -- example: ['beleza_saude', 'informatica_acessorios', 'automotivo']\n    product_category_name_english TEXT, -- example: ['health_beauty', 'computers_accessories', 'auto']\n);\n\nCREATE TABLE orders (\n    \n\nCREATE TABLE order_payments (\n    ",
        "question": "Prepare a comprehensive performance report on our sellers, focusing on total sales, average item price, average review scores, and packing times. Ensure that the report includes only those sellers who have sold a quantity of more than 100 products and highlight the product category names in English with the highest sales volume.",
        "instance_id": "local286",
        "db_id": "electronic_sales"
    },
    {
        "db_desc": "CREATE TABLE weekly_sales (\n    week_date TEXT, -- example: ['31/8/20', '24/8/20', '17/8/20']\n    transactions INTEGER, -- example: [120631, 31574, 529151]\n    sales INTEGER, -- example: [3656163, 996575, 16509610]\n);\n\nCREATE TABLE shopping_cart_users (\n    \n\nCREATE TABLE bitcoin_members (\n    \n\nCREATE TABLE interest_metrics (\n    _month REAL, -- example: [7.0, 8.0, 9.0]\n    _year REAL, -- example: [2018.0, 2019.0]\n    month_year TEXT, -- example: ['07-2018', '08-2018', '09-2018']\n    composition REAL, -- example: [11.89, 9.93, 10.85]\n    ranking INTEGER, -- example: [1, 2, 3]\n\nCREATE TABLE customer_regions (\n    \n\nCREATE TABLE customer_transactions (\n    \n\nCREATE TABLE bitcoin_transactions (\n    txn_date TEXT, -- example: ['15-11-2019', '14-12-2018']\n    txn_type TEXT, -- example: ['SELL']\n    percentage_fee REAL, -- example: [0.3, 0.0, 0.02]\n\nCREATE TABLE customer_nodes (\n    start_date TEXT, -- example: ['2020-06-15', '2020-06-14', '2020-05-18']\n    end_date TEXT, -- example: ['2020-06-14', '2020-05-18']\n);\n\nCREATE TABLE cleaned_weekly_sales (\n    week_date_formatted TEXT, -- example: ['2020-8-31', '2020-8-24', '2020-8-17']\n    week_date TEXT, -- example: ['2020-07-13', '2020-06-15', '2020-05-18', '2019-07-15', '2019-06-10', '2019-05-13', '2019-04-29', '2018-08-13', '2018-07-16', '2018-06-18', '2018-05-14']\n    transactions INTEGER, -- example: [120631, 31574, 529151]\n    sales INTEGER, -- example: [3656163, 996575, 16509610]\n    week_number INTEGER, -- example: [36, 35, 34]\n    calendar_year INTEGER, -- example: [2020, 2019, 2018]\n\nCREATE TABLE veg_txn_df (\n    `qty_sold(kg)` REAL, -- example: [0.396, 0.849, 0.409]\n    `sale/return` TEXT, -- example: ['sale']\n    `discount(%)` INTEGER, -- example: [1]\n    day_of_week TEXT, -- example: ['Wednesday', 'Thursday', 'Friday']\n);\n\nCREATE TABLE shopping_cart_events (\n    \n\nCREATE TABLE shopping_cart_page_hierarchy (\n    \n\nCREATE TABLE bitcoin_prices (\n    market_date TEXT, -- example: ['15-11-2019', '14-12-2018']\n    `open` REAL, -- example: [3243.96, 3273.78, 3093.78]\n    high REAL, -- example: [3282.21, 3284.58, 3279.93]\n    change TEXT, -- example: ['-2.04%', '-0.91%', '5.82%']\n);\n\nCREATE TABLE interest_map (\n    id INTEGER, -- example: [1, 2, 3]\n\nCREATE TABLE veg_loss_rate_df (\n    `loss_rate_%` REAL, -- example: [4.39, 10.46, 10.8]\n);\n\nCREATE TABLE shopping_cart_campaign_identifier (\n    \n\nCREATE TABLE veg_cat (\n    \n\nCREATE TABLE veg_whsle_df (\n    \n\nCREATE TABLE shopping_cart_event_identifier (\n    ",
        "question": "For weekly-sales data, I need an analysis of our sales performance around mid-June for the years 2018, 2019, and 2020. Specifically, calculate the percentage change in sales between the four weeks leading up to June 15 and the four weeks following June 15 for each year.",
        "instance_id": "local301",
        "db_id": "bank_sales_trading"
    },
    {
        "db_desc": "CREATE TABLE player (\n    player_name TEXT, -- example: ['SC Ganguly', 'BB McCullum', 'RT Ponting']\n    bowling_skill TEXT, -- example: ['Right-arm medium', 'Right-arm offbreak', 'Right-arm fast-medium']\n    country_name TEXT, -- example: ['India', 'New Zealand', 'Australia']\n    PRIMARY KEY (player_id)\n);\n\nCREATE TABLE team (\n    team_id INTEGER, -- example: [2, 3, 4]\n    name TEXT, -- example: ['Royal Challengers Bangalore', 'Chennai Super Kings', 'Kings XI Punjab']\n    PRIMARY KEY (team_id)\n);\n\nCREATE TABLE `match` (\n    match_id INTEGER, -- example: [335987, 335988, 335989]\n    match_date DATE, -- example: ['2008-04-18', '2008-04-19', '2008-04-20']\n    venue TEXT, -- example: ['M Chinnaswamy Stadium', 'Punjab Cricket Association Stadium Mohal', 'Feroz Shah Kotla']\n    win_type TEXT, -- example: ['runs']\n    match_winner INTEGER, -- example: [1, 3, 6]\n    man_of_the_match INTEGER, -- example: [2, 19, 90]\n    PRIMARY KEY (match_id)\n);\n\nCREATE TABLE player_match (\n    match_id INTEGER, -- example: [335987, 335988, 335989]\n    team_id INTEGER, -- example: [7, 1, 11]\n    PRIMARY KEY (match_id)\n);\n\nCREATE TABLE ball_by_ball (\n    match_id INTEGER, -- example: [335987, 335988, 335989]\n    over_id INTEGER, -- example: [1, 2, 3]\n    ball_id INTEGER, -- example: [1, 2, 3]\n    team_batting INTEGER, -- example: [2, 1, 3]\n    team_bowling INTEGER, -- example: [1, 2, 4]\n    bowler INTEGER, -- example: [106, 14, 15]\n    PRIMARY KEY (match_id)\n);\n\nCREATE TABLE batsman_scored (\n    match_id INTEGER, -- example: [335987, 335988, 335989]\n    over_id INTEGER, -- example: [1, 2, 3]\n    ball_id INTEGER, -- example: [1, 2, 3]\n    runs_scored INTEGER, -- example: [1, 0, 4]\n    PRIMARY KEY (match_id)\n);\n\nCREATE TABLE wicket_taken (\n    match_id INTEGER, -- example: [335987, 335988, 335989]\n    over_id INTEGER, -- example: [2, 3, 5]\n    ball_id INTEGER, -- example: [1, 2, 5]\n    kind_out TEXT, -- example: ['bowled']\n    PRIMARY KEY (match_id)\n);\n\nCREATE TABLE extra_runs (\n    match_id INTEGER, -- example: [335987, 335988, 335989]\n    over_id INTEGER, -- example: [1, 2, 3]\n    ball_id INTEGER, -- example: [1, 2, 3]\n    extra_runs INTEGER, -- example: [1, 4, 2]\n    PRIMARY KEY (match_id)\n);",
        "question": "Please help me identify the top 3 bowlers who, in the overs where the maximum runs were conceded in each match, gave up the highest number of runs in a single over across all matches. For each of these bowlers, provide the match in which they conceded these maximum runs. Only consider overs that had the most runs conceded within their respective matches, and among these, determine which bowlers conceded the most runs in a single over overall.",
        "instance_id": "local026",
        "db_id": "IPL"
    },
    {
        "db_desc": "CREATE TABLE weekly_sales (\n    week_date TEXT, -- example: ['31/8/20', '24/8/20', '17/8/20']\n    region TEXT, -- example: ['ASIA', 'USA', 'EUROPE']\n    platform TEXT, -- example: ['Retail', 'Shopify']\n    segment TEXT, -- example: ['C3', 'F1', 'C1']\n    customer_type TEXT, -- example: ['New', 'Guest', 'Existing']\n    transactions INTEGER, -- example: [120631, 31574, 529151]\n    sales INTEGER, -- example: [3656163, 996575, 16509610]\n);\n\nCREATE TABLE shopping_cart_users (\n    start_date TEXT, -- example: ['2020-05-03', '2020-03-23', '2020-03-06']\n);\n\nCREATE TABLE bitcoin_members (\n    region TEXT, -- example: ['Australia', 'United States', 'Africa']\n);\n\nCREATE TABLE interest_metrics (\n    _month REAL, -- example: [7.0, 8.0, 9.0]\n    index_value REAL, -- example: [6.19, 5.31, 5.29]\n\nCREATE TABLE customer_regions (\n    region_id INTEGER, -- example: [1, 2, 3]\n    region_name TEXT, -- example: ['Australia', 'America', 'Africa']\n);\n\nCREATE TABLE customer_transactions (\n    customer_id INTEGER, -- example: [429, 155, 398]\n    txn_date TEXT, -- example: ['2020-04-03', '2020-03-23', '2020-03-06']\n\nCREATE TABLE bitcoin_transactions (\n    txn_type TEXT, -- example: ['SELL']\n    quantity REAL, -- example: [50.0, 9.562185136, 8.842987018]\n    percentage_fee REAL, -- example: [0.3, 0.0, 0.02]\n\nCREATE TABLE customer_nodes (\n    customer_id INTEGER, -- example: [1, 2, 3]\n    region_id INTEGER, -- example: [3, 5, 1]\n    start_date TEXT, -- example: ['2020-06-15', '2020-06-14', '2020-05-03', '2020-03-23', '2020-03-06']\n    end_date TEXT, -- example: ['2020-06-14', '2020-05-03', '2020-03-23', '2020-03-06']\n);\n\nCREATE TABLE cleaned_weekly_sales (\n    week_date_formatted TEXT, -- example: ['2020-8-31', '2020-8-24', '2020-8-17']\n    week_date TEXT, -- example: ['2020-07-06', '2020-06-15', '2020-03-23']\n    region TEXT, -- example: ['ASIA', 'USA', 'EUROPE']\n    platform TEXT, -- example: ['Retail', 'Shopify']\n    segment TEXT, -- example: ['C3', 'F1', 'unknown']\n    customer_type TEXT, -- example: ['New', 'Guest', 'Existing']\n    transactions INTEGER, -- example: [120631, 31574, 529151]\n    sales INTEGER, -- example: [3656163, 996575, 16509610]\n    week_number INTEGER, -- example: [36, 35, 34]\n    age_band TEXT, -- example: ['Retirees', 'Young Adults', 'unknown']\n    demographic TEXT, -- example: ['Couples', 'Families', 'unknown']\n\nCREATE TABLE veg_txn_df (\n    txn_date TEXT, -- example: ['2020-11-15 00:00:00']\n    `sale/return` TEXT, -- example: ['sale']\n    `discount(%)` INTEGER, -- example: [1]\n\nCREATE TABLE shopping_cart_events (\n    \n\nCREATE TABLE shopping_cart_page_hierarchy (\n    \n\nCREATE TABLE bitcoin_prices (\n    high REAL, -- example: [3282.21, 3284.58, 3279.93]\n    change TEXT, -- example: ['-2.04%', '-0.91%', '5.82%']\n);\n\nCREATE TABLE interest_map (\n    id INTEGER, -- example: [1, 2, 3]\n\nCREATE TABLE veg_loss_rate_df (\n    `loss_rate_%` REAL, -- example: [4.39, 10.46, 10.8]\n);\n\nCREATE TABLE shopping_cart_campaign_identifier (\n    \n\nCREATE TABLE veg_cat (\n    \n\nCREATE TABLE veg_whsle_df (\n    whsle_date TEXT, -- example: ['2020-11-15 00:00:00']\n\nCREATE TABLE shopping_cart_event_identifier (\n    ",
        "question": "Analyze the average percentage change in sales between the 12 weeks before and after June 15, 2020, for each attribute type: region, platform, age band, demographic, and customer type. For each attribute type, calculate the average percentage change in sales across all its attribute values. Identify the attribute type with the highest negative impact on sales and provide its average percentage change in sales.",
        "instance_id": "local302",
        "db_id": "bank_sales_trading"
    },
    {
        "db_desc": "CREATE TABLE mst_users (\n    \n\nCREATE TABLE action_log (\n    `session` varchar(255), -- example: ['989004ea', '47db0370', '87b5725f']\n    amount integer, -- example: [2000, 1000]\n    stamp varchar(255), -- example: ['2016-11-03 18:10:00', '2016-11-03 18:00:00', '2016-11-03 18:01:00']\n);\n\nCREATE TABLE activity_log (\n    stamp varchar(255), -- example: ['2017-01-09 12:18:43', '2017-01-09 12:19:27', '2017-01-09 12:20:03']\n    `session` varchar(255), -- example: ['989004ea', '47db0370', '1cf7678e']\n    option varchar(255), -- example: ['page']\n    path varchar(255), -- example: ['/confirm', '/input', '/search_list/', '/search_input/', '/detail/']\n\nCREATE TABLE read_log (\n    stamp varchar(255), -- example: ['2016-12-29 21:45:47', '2016-12-29 21:45:56', '2016-12-29 21:46:05']\n    `session` varchar(255), -- example: ['afbd3d09', 'df6eb25d', '77d477cc']\n\nCREATE TABLE form_log (\n    stamp varchar(255), -- example: ['2016-12-30 00:56:08', '2016-12-30 00:57:04', '2016-12-30 00:57:56']\n    `session` varchar(255), -- example: ['647219c7', '9b5f320f', '8e9afadc']\n    path varchar(255), -- example: ['/regist/input', '/regist/confirm']\n\nCREATE TABLE form_error_log (\n    stamp varchar(255), -- example: ['2016-12-30 00:56:08', '2016-12-30 00:57:21', '2016-12-30 00:56:09']\n    `session` varchar(255), -- example: ['004dc3ef', '00700be4', '01061716']\n    form varchar(255), -- example: ['regist', 'cart']\n\nCREATE TABLE action_log_with_ip (\n    `session` varchar(255), -- example: ['0CVKaz', '1QceiB', '1hI43A']\n    stamp varchar(255), -- example: ['2016-11-03 18:00:00', '2016-11-03 19:00:00', '2016-11-03 20:00:00']\n);\n\nCREATE TABLE access_log (\n    `session` varchar(255), -- example: ['98900e', '1cf768', '87b575']\n    stamp varchar(255), -- example: ['2016-01-01 18:00:00', '2016-01-02 20:00:00', '2016-01-03 22:00:00']\n);\n\nCREATE TABLE action_log_with_noise (\n    stamp varchar(255),\n    `session` varchar(255),\n    action varchar(255),\n    products varchar(255),\n    url text,\n    ip varchar(255),\n    user_agent text\n);\n\nCREATE TABLE invalid_action_log (\n    stamp varchar(255), -- example: ['2016-11-03 18:10:00', '2016-11-03 18:00:00', '2016-11-03 18:01:00']\n    `session` varchar(255), -- example: ['0CVKaz', '1QceiB']\n    amount integer, -- example: [2000, 1000]\n);\n\nCREATE TABLE mst_categories (\n    stamp varchar(255), -- example: ['2016-01-01 10:00:00', '2016-02-01 10:00:00']\n);\n\nCREATE TABLE dup_action_log (\n    stamp varchar(255), -- example: ['2016-11-03 18:00:00', '2016-11-03 19:00:00', '2016-11-03 20:00:00']\n    `session` varchar(255), -- example: ['989004ea', '47db0370', '1cf7678e']\n\nCREATE TABLE mst_products_20161201 (\n    \n\nCREATE TABLE mst_products_20170101 (\n    \n\nCREATE TABLE app1_mst_users (\n    \n\nCREATE TABLE app2_mst_users (\n    \n\nCREATE TABLE mst_users_with_card_number (\n    \n\nCREATE TABLE purchase_log (\n    amount integer, -- example: [200, 500, 800]\n    stamp varchar(255), -- example: ['2017-01-30 10:00:00', '2017-02-10 10:00:00', '2017-02-12 10:00:00']\n);\n\nCREATE TABLE product_sales (\n    ",
        "question": "How many unique sessions visited the /regist/input page and then the /regist/confirm page, in that order?",
        "instance_id": "local329",
        "db_id": "log"
    },
    {
        "db_desc": "CREATE TABLE mst_users (\n    user_id varchar(255), -- example: ['U001', 'U002', 'U003']\n    birth_date varchar(255), -- example: ['1977-06-17', '1953-06-12', '1965-01-06']\n\nCREATE TABLE action_log (\n    `session` varchar(255), -- example: ['989004ea', '47db0370', '87b5725f']\n    user_id varchar(255), -- example: ['U001', 'U002']\n    action varchar(255), -- example: ['purchase', 'view', 'favorite']\n    amount integer, -- example: [2000, 1000]\n    stamp varchar(255), -- example: ['2016-11-03 18:10:00', '2016-11-03 18:00:00', '2016-11-03 18:01:00']\n);\n\nCREATE TABLE activity_log (\n    stamp varchar(255), -- example: ['2017-01-09 12:18:43', '2017-01-09 12:19:27', '2017-01-09 12:20:03']\n    `session` varchar(255), -- example: ['989004ea', '47db0370', '1cf7678e']\n    action varchar(255), -- example: ['view']\n    option varchar(255), -- example: ['page']\n    path varchar(255), -- example: ['/search_list/', '/search_input/', '/detail/']\n\nCREATE TABLE read_log (\n    stamp varchar(255), -- example: ['2016-12-29 21:45:47', '2016-12-29 21:45:56', '2016-12-29 21:46:05']\n    `session` varchar(255), -- example: ['afbd3d09', 'df6eb25d', '77d477cc']\n    action varchar(255), -- example: ['view', 'read-20%', 'read-40%']\n    url varchar(255), -- example: ['http://www.example.com/article?id=news34', 'http://www.example.com/article?id=news73', 'http://www.example.com/article?id=it605']\n);\n\nCREATE TABLE form_log (\n    stamp varchar(255), -- example: ['2016-12-30 00:56:08', '2016-12-30 00:57:04', '2016-12-30 00:57:56']\n    `session` varchar(255), -- example: ['647219c7', '9b5f320f', '8e9afadc']\n    action varchar(255), -- example: ['view']\n    path varchar(255), -- example: ['/regist/input', '/cart/input', '/regist/confirm']\n\nCREATE TABLE form_error_log (\n    stamp varchar(255), -- example: ['2016-12-30 00:56:08', '2016-12-30 00:57:21', '2016-12-30 00:56:09']\n    `session` varchar(255), -- example: ['004dc3ef', '00700be4', '01061716']\n    `value` varchar(255), -- example: ['101-', 'xxx---.co.jp', 'xxx@---cojp']\n);\n\nCREATE TABLE action_log_with_ip (\n    `session` varchar(255), -- example: ['0CVKaz', '1QceiB', '1hI43A']\n    user_id varchar(255), -- example: ['U001', 'U002', 'U003']\n    action varchar(255), -- example: ['view']\n    stamp varchar(255), -- example: ['2016-11-03 18:00:00', '2016-11-03 19:00:00', '2016-11-03 20:00:00']\n);\n\nCREATE TABLE access_log (\n    `session` varchar(255), -- example: ['98900e', '1cf768', '87b575']\n    user_id varchar(255), -- example: ['U001', 'U002', '0CVKaz']\n    action varchar(255), -- example: ['view', '1CwlSX', '3JMO2k']\n    stamp varchar(255), -- example: ['2016-01-01 18:00:00', '2016-01-02 20:00:00', '2016-01-03 22:00:00']\n);\n\nCREATE TABLE action_log_with_noise (\n    stamp varchar(255),\n    `session` varchar(255),\n    action varchar(255),\n    products varchar(255),\n    url text,\n    ip varchar(255),\n    user_agent text\n);\n\nCREATE TABLE invalid_action_log (\n    stamp varchar(255), -- example: ['2016-11-03 18:10:00', '2016-11-03 18:00:00', '2016-11-03 18:01:00']\n    `session` varchar(255), -- example: ['0CVKaz', '1QceiB']\n    user_id varchar(255), -- example: ['U001', 'U002']\n    action varchar(255), -- example: ['purchase', 'favorite', 'view']\n    amount integer, -- example: [2000, 1000]\n);\n\nCREATE TABLE mst_categories (\n    id integer, -- example: [1, 2, 3]\n    name varchar(255), -- example: ['ladys_fashion', 'mens_fashion', 'book']\n    stamp varchar(255), -- example: ['2016-01-01 10:00:00', '2016-02-01 10:00:00']\n);\n\nCREATE TABLE dup_action_log (\n    stamp varchar(255), -- example: ['2016-11-03 18:00:00', '2016-11-03 19:00:00', '2016-11-03 20:00:00']\n    `session` varchar(255), -- example: ['989004ea', '47db0370', '1cf7678e']\n    user_id varchar(255), -- example: ['U001', 'U002', 'U003']\n    action varchar(255), -- example: ['click']\n\nCREATE TABLE mst_products_20161201 (\n    name varchar(255), -- example: ['AAA', 'AAB', 'BBB']\n\nCREATE TABLE mst_products_20170101 (\n    name varchar(255), -- example: ['AAA', 'AAB', 'BBD']\n\nCREATE TABLE app1_mst_users (\n    user_id varchar(255), -- example: ['U001', 'U002']\n    name varchar(255), -- example: ['Sato', 'Suzuki']\n\nCREATE TABLE app2_mst_users (\n    user_id varchar(255), -- example: ['U001', 'U002']\n    name varchar(255), -- example: ['Ito', 'Tanaka']\n    phone varchar(255), -- example: ['080-xxxx-xxxx', '070-xxxx-xxxx']\n);\n\nCREATE TABLE mst_users_with_card_number (\n    user_id varchar(255), -- example: ['U001', 'U002', 'U003']\n    card_number varchar(255), -- example: ['1234-xxxx-xxxx-xxxx', '5678-xxxx-xxxx-xxxx']\n);\n\nCREATE TABLE purchase_log (\n    user_id varchar(255), -- example: ['U001', 'U002']\n    amount integer, -- example: [200, 500, 800]\n    stamp varchar(255), -- example: ['2017-01-30 10:00:00', '2017-02-10 10:00:00', '2017-02-12 10:00:00']\n);\n\nCREATE TABLE product_sales (\n    ",
        "question": "Using only the data from the log table, compute for each web page  the number of unique user sessions where that page is either the first landing page or the exit page of the session based on the timestamp.",
        "instance_id": "local330",
        "db_id": "log"
    },
    {
        "db_desc": "CREATE TABLE mst_users (\n    birth_date varchar(255), -- example: ['1977-06-17', '1953-06-12', '1965-01-06']\n    register_date varchar(255), -- example: ['2016-10-01', '2016-10-05', '2016-10-10']\n\nCREATE TABLE action_log (\n    `session` varchar(255), -- example: ['989004ea', '47db0370', '87b5725f']\n    action varchar(255), -- example: ['purchase', 'view', 'favorite']\n    amount integer, -- example: [2000, 1000]\n    stamp varchar(255), -- example: ['2016-11-03 18:10:00', '2016-11-03 18:00:00', '2016-11-03 18:01:00']\n);\n\nCREATE TABLE activity_log (\n    stamp varchar(255), -- example: ['2017-01-09 12:18:43', '2017-01-09 12:19:27', '2017-01-09 12:20:03']\n    `session` varchar(255), -- example: ['989004ea', '47db0370', '1cf7678e']\n    action varchar(255), -- example: ['view']\n    option varchar(255), -- example: ['page']\n    path varchar(255), -- example: ['/detail']\n\nCREATE TABLE read_log (\n    stamp varchar(255), -- example: ['2016-12-29 21:45:47', '2016-12-29 21:45:56', '2016-12-29 21:46:05']\n    `session` varchar(255), -- example: ['afbd3d09', 'df6eb25d', '77d477cc']\n    action varchar(255), -- example: ['view', 'read-20%', 'read-40%']\n\nCREATE TABLE form_log (\n    stamp varchar(255), -- example: ['2016-12-30 00:56:08', '2016-12-30 00:57:04', '2016-12-30 00:57:56']\n    `session` varchar(255), -- example: ['647219c7', '9b5f320f', '8e9afadc']\n    action varchar(255), -- example: ['view']\n    path varchar(255), -- example: ['/regist/input', '/cart/input', '/regist/confirm']\n\nCREATE TABLE form_error_log (\n    stamp varchar(255), -- example: ['2016-12-30 00:56:08', '2016-12-30 00:57:21', '2016-12-30 00:56:09']\n    `session` varchar(255), -- example: ['004dc3ef', '00700be4', '01061716']\n\nCREATE TABLE action_log_with_ip (\n    `session` varchar(255), -- example: ['0CVKaz', '1QceiB', '1hI43A']\n    action varchar(255), -- example: ['view']\n    stamp varchar(255), -- example: ['2016-11-03 18:00:00', '2016-11-03 19:00:00', '2016-11-03 20:00:00']\n);\n\nCREATE TABLE access_log (\n    `session` varchar(255), -- example: ['98900e', '1cf768', '87b575']\n    action varchar(255), -- example: ['view', '1CwlSX', '3JMO2k']\n    stamp varchar(255), -- example: ['/top', '/detail']\n);\n\nCREATE TABLE action_log_with_noise (\n    stamp varchar(255),\n    `session` varchar(255),\n    action varchar(255),\n    products varchar(255),\n    url text,\n    ip varchar(255),\n    user_agent text\n);\n\nCREATE TABLE invalid_action_log (\n    stamp varchar(255), -- example: ['2016-11-03 18:10:00', '2016-11-03 18:00:00', '2016-11-03 18:01:00']\n    `session` varchar(255), -- example: ['0CVKaz', '1QceiB']\n    action varchar(255), -- example: ['purchase', 'favorite', 'view']\n    amount integer, -- example: [2000, 1000]\n);\n\nCREATE TABLE mst_categories (\n    id integer, -- example: [1, 2, 3]\n    name varchar(255), -- example: ['ladys_fashion', 'mens_fashion', 'book']\n    stamp varchar(255), -- example: ['2016-01-01 10:00:00', '2016-02-01 10:00:00']\n);\n\nCREATE TABLE dup_action_log (\n    stamp varchar(255), -- example: ['2016-11-03 18:00:00', '2016-11-03 19:00:00', '2016-11-03 20:00:00']\n    `session` varchar(255), -- example: ['989004ea', '47db0370', '1cf7678e']\n    action varchar(255), -- example: ['click']\n\nCREATE TABLE mst_products_20161201 (\n    product_id varchar(255), -- example: ['A001', 'A002', 'B001']\n    name varchar(255), -- example: ['AAA', 'AAB', 'BBB']\n\nCREATE TABLE mst_products_20170101 (\n    product_id varchar(255), -- example: ['A001', 'A002', 'B002']\n    name varchar(255), -- example: ['AAA', 'AAB', 'BBD']\n\nCREATE TABLE app1_mst_users (\n    name varchar(255), -- example: ['Sato', 'Suzuki']\n\nCREATE TABLE app2_mst_users (\n    name varchar(255), -- example: ['Ito', 'Tanaka']\n    phone varchar(255), -- example: ['080-xxxx-xxxx', '070-xxxx-xxxx']\n);\n\nCREATE TABLE mst_users_with_card_number (\n    \n\nCREATE TABLE purchase_log (\n    purchase_id integer, -- example: [10001, 10002, 10003]\n    amount integer, -- example: [200, 500, 800]\n    stamp varchar(255), -- example: ['2017-01-30 10:00:00', '2017-02-10 10:00:00', '2017-02-12 10:00:00']\n);\n\nCREATE TABLE product_sales (\n    product_id varchar(255), -- example: ['D001', 'D002', 'D003']",
        "question": "Which three distinct third-page visits are most frequently observed immediately after two consecutive visits to the '/detail' page, and how many times does each third-page visit occur?",
        "instance_id": "local331",
        "db_id": "log"
    },
    {
        "db_desc": "CREATE TABLE mst_users (\n    user_id varchar(255), -- example: ['U020']\n    sex varchar(255), -- example: ['M', 'F']\n    birth_date varchar(255), -- example: ['1977-06-17', '1953-06-12', '1965-01-06']\n\nCREATE TABLE action_log (\n    user_id varchar(255), -- example: ['U001', 'U002']\n    action varchar(255), -- example: ['purchase', 'view', 'favorite']\n    category varchar(255), -- example: ['drama', 'action']\n    amount integer, -- example: [2000, 1000]\n\nCREATE TABLE activity_log (\n    action varchar(255), -- example: ['view']\n\nCREATE TABLE read_log (\n    action varchar(255), -- example: ['view', 'read-20%', 'read-40%']\n\nCREATE TABLE form_log (\n    action varchar(255), -- example: ['view']\n\nCREATE TABLE form_error_log (\n    \n\nCREATE TABLE action_log_with_ip (\n    user_id varchar(255), -- example: ['U001', 'U002', 'U003']\n    action varchar(255), -- example: ['view']\n\nCREATE TABLE access_log (\n    user_id varchar(255), -- example: ['U001', 'U002', '0CVKaz']\n    action varchar(255), -- example: ['view', '1CwlSX', '3JMO2k']\n\nCREATE TABLE action_log_with_noise (\n    stamp varchar(255),\n    `session` varchar(255),\n    action varchar(255),\n    products varchar(255),\n    url text,\n    ip varchar(255),\n    user_agent text\n);\n\nCREATE TABLE invalid_action_log (\n    user_id varchar(255), -- example: ['U001', 'U002']\n    action varchar(255), -- example: ['purchase', 'favorite', 'view']\n    category varchar(255), -- example: ['drama', 'action']\n    amount integer, -- example: [2000, 1000]\n);\n\nCREATE TABLE mst_categories (\n    \n\nCREATE TABLE dup_action_log (\n    user_id varchar(255), -- example: ['U001', 'U002', 'U003']\n    action varchar(255), -- example: ['click']\n\nCREATE TABLE mst_products_20161201 (\n    \n\nCREATE TABLE mst_products_20170101 (\n    \n\nCREATE TABLE app1_mst_users (\n    user_id varchar(255), -- example: ['U001', 'U002']\n\nCREATE TABLE app2_mst_users (\n    user_id varchar(255), -- example: ['U001', 'U002']\n\nCREATE TABLE mst_users_with_card_number (\n    user_id varchar(255), -- example: ['U001', 'U002', 'U003']\n\nCREATE TABLE purchase_log (\n    user_id varchar(255), -- example: ['U001', 'U002']\n    amount integer, -- example: [200, 500, 800]\n\nCREATE TABLE product_sales (\n    category_name varchar(255), -- example: ['dvd', 'cd', 'book']",
        "question": "How many users are there in each age category (20s, 30s, 40s, 50s, and others)?",
        "instance_id": "local358",
        "db_id": "log"
    },
    {
        "db_desc": "CREATE TABLE mst_users (\n    \n\nCREATE TABLE action_log (\n    `session` varchar(255), -- example: ['989004ea', '47db0370', '87b5725f']\n    action varchar(255), -- example: ['purchase', 'view', 'favorite']\n    category varchar(255), -- example: ['drama', 'action']\n    amount integer, -- example: [2000, 1000]\n    stamp varchar(255), -- example: ['2016-11-03 18:10:00', '2016-11-03 18:00:00', '2016-11-03 18:01:00']\n);\n\nCREATE TABLE activity_log (\n    stamp varchar(255), -- example: ['2017-01-09 12:18:43', '2017-01-09 12:19:27', '2017-01-09 12:20:03']\n    `session` varchar(255), -- example: ['989004ea', '47db0370', '1cf7678e']\n    action varchar(255), -- example: ['view']\n    option varchar(255), -- example: ['search', 'detail', 'page']\n    path varchar(255), -- example: ['/detail', '/complete']\n    search_type varchar(255), -- example: ['Area-L-with-Job', 'Pref', 'Area-S']\n);\n\nCREATE TABLE read_log (\n    stamp varchar(255), -- example: ['2016-12-29 21:45:47', '2016-12-29 21:45:56', '2016-12-29 21:46:05']\n    `session` varchar(255), -- example: ['afbd3d09', 'df6eb25d', '77d477cc']\n    action varchar(255), -- example: ['view', 'read-20%', 'read-40%']\n    url varchar(255), -- example: ['http://www.example.com/article?id=news34', 'http://www.example.com/article?id=news73', 'http://www.example.com/article?id=it605']\n);\n\nCREATE TABLE form_log (\n    stamp varchar(255), -- example: ['2016-12-30 00:56:08', '2016-12-30 00:57:04', '2016-12-30 00:57:56']\n    `session` varchar(255), -- example: ['647219c7', '9b5f320f', '8e9afadc']\n    action varchar(255), -- example: ['view']\n    path varchar(255), -- example: ['/regist/input', '/cart/input', '/regist/confirm']\n\nCREATE TABLE form_error_log (\n    stamp varchar(255), -- example: ['2016-12-30 00:56:08', '2016-12-30 00:57:21', '2016-12-30 00:56:09']\n    `session` varchar(255), -- example: ['004dc3ef', '00700be4', '01061716']\n    form varchar(255), -- example: ['regist', 'cart']\n\nCREATE TABLE action_log_with_ip (\n    `session` varchar(255), -- example: ['0CVKaz', '1QceiB', '1hI43A']\n    action varchar(255), -- example: ['view']\n    stamp varchar(255), -- example: ['2016-11-03 18:00:00', '2016-11-03 19:00:00', '2016-11-03 20:00:00']\n);\n\nCREATE TABLE access_log (\n    `session` varchar(255), -- example: ['98900e', '1cf768', '87b575']\n    action varchar(255), -- example: ['view', '1CwlSX', '3JMO2k']\n    stamp varchar(255), -- example: ['/detail']\n);\n\nCREATE TABLE action_log_with_noise (\n    stamp varchar(255),\n    `session` varchar(255),\n    action varchar(255),\n    products varchar(255),\n    url text,\n    ip varchar(255),\n    user_agent text\n);\n\nCREATE TABLE invalid_action_log (\n    stamp varchar(255), -- example: ['2016-11-03 18:10:00', '2016-11-03 18:00:00', '2016-11-03 18:01:00']\n    `session` varchar(255), -- example: ['0CVKaz', '1QceiB']\n    action varchar(255), -- example: ['purchase', 'favorite', 'view']\n    category varchar(255), -- example: ['drama', 'action']\n    amount integer, -- example: [2000, 1000]\n);\n\nCREATE TABLE mst_categories (\n    id integer, -- example: [1, 2, 3]\n    stamp varchar(255), -- example: ['2016-01-01 10:00:00', '2016-02-01 10:00:00']\n);\n\nCREATE TABLE dup_action_log (\n    stamp varchar(255), -- example: ['2016-11-03 18:00:00', '2016-11-03 19:00:00', '2016-11-03 20:00:00']\n    `session` varchar(255), -- example: ['989004ea', '47db0370', '1cf7678e']\n    action varchar(255), -- example: ['click']\n\nCREATE TABLE mst_products_20161201 (\n    \n\nCREATE TABLE mst_products_20170101 (\n    \n\nCREATE TABLE app1_mst_users (\n    \n\nCREATE TABLE app2_mst_users (\n    phone varchar(255), -- example: ['080-xxxx-xxxx', '070-xxxx-xxxx']\n);\n\nCREATE TABLE mst_users_with_card_number (\n    card_number varchar(255), -- example: ['1234-xxxx-xxxx-xxxx', '5678-xxxx-xxxx-xxxx']\n);\n\nCREATE TABLE purchase_log (\n    amount integer, -- example: [200, 500, 800]\n    stamp varchar(255), -- example: ['2017-01-30 10:00:00', '2017-02-10 10:00:00', '2017-02-12 10:00:00']\n);\n\nCREATE TABLE product_sales (\n    ",
        "question": "Identify the sessions with the minimal number of events occurring before the first '/detail' click or '/complete' conversion within the session, considering only events with non-empty search types. If multiple sessions share this minimum count, include all of them. For each session, display the associated paths and search types.",
        "instance_id": "local360",
        "db_id": "log"
    },
    {
        "db_desc": "CREATE TABLE circuits (\n    name VARCHAR(255), -- example: ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit']\n    location VARCHAR(255), -- example: ['Melbourne', 'Kuala Lumpur', 'Sakhir']\n    country VARCHAR(255), -- example: ['Australia', 'Malaysia', 'Bahrain']\n    lat FLOAT, -- example: [-37.8497, 2.76083, 26.0325]\n    url VARCHAR(255), -- example: ['http://en.wikipedia.org/wiki/Melbourne_G', 'http://en.wikipedia.org/wiki/Sepang_Inte', 'http://en.wikipedia.org/wiki/Bahrain_Int']\n    PRIMARY KEY (circuit_id)\n);\n\nCREATE TABLE constructor_results (\n    race_id INT(11), -- example: [18, 19, 20]\n    status VARCHAR(255), -- example: ['D']\n    PRIMARY KEY (constructor_results_id)\n);\n\nCREATE TABLE constructor_standings (\n    race_id INT(11), -- example: [18, 19, 20]\n    `position` INT(11), -- example: [1, 3, 2]\n    wins INT(11), -- example: [1, 0, 2]\n    PRIMARY KEY (constructor_standings_id)\n);\n\nCREATE TABLE constructors (\n    name VARCHAR(255), -- example: ['McLaren', 'BMW Sauber', 'Williams']\n    nationality VARCHAR(255), -- example: ['British', 'German', 'French']\n    url VARCHAR(255), -- example: ['http://en.wikipedia.org/wiki/McLaren', 'http://en.wikipedia.org/wiki/BMW_Sauber', 'http://en.wikipedia.org/wiki/Williams_Gr']\n    PRIMARY KEY (constructor_id)\n);\n\nCREATE TABLE driver_standings (\n    race_id INT(11), -- example: [18, 19, 20]\n    driver_id INT(11), -- example: [1, 2, 3]\n    `position` INT(11), -- example: [1, 2, 3]\n    wins INT(11), -- example: [1, 0, 2]\n    PRIMARY KEY (driver_standings_id)\n);\n\nCREATE TABLE drivers (\n    driver_id INT(11), -- example: [1, 2, 3]\n    driver_ref VARCHAR(255), -- example: ['driver']\n    number INT(11), -- example: [44, 6, 14]\n    code VARCHAR(3), -- example: ['HAM', 'HEI', 'ROS']\n    surname VARCHAR(255), -- example: ['Driver']\n    nationality VARCHAR(255), -- example: ['British', 'German', 'Spanish']\n    url VARCHAR(255), -- example: ['http://en.wikipedia.org/wiki/Lewis_Hamil', 'http://en.wikipedia.org/wiki/Nick_Heidfe', 'http://en.wikipedia.org/wiki/Nico_Rosber']\n    PRIMARY KEY (driver_id)\n);\n\nCREATE TABLE lap_times (\n    race_id INT(11), -- example: [1, 2, 3]\n    driver_id INT(11), -- example: [1, 2, 3]\n    lap INT(11), -- example: [1, 2, 3]\n    `position` INT(11), -- example: [1, 3, 4]\n    `time` VARCHAR(255), -- example: ['1:38.109', '1:33.006', '1:32.713']\n    PRIMARY KEY (race_id)\n);\n\nCREATE TABLE pit_stops (\n    race_id INT(11), -- example: [841, 842, 843]\n    driver_id INT(11), -- example: [1, 2, 3]\n    stop INT(11), -- example: [1, 2, 3]\n    lap INT(11), -- example: [1, 11, 12]\n    `time` TIME, -- example: ['17:05:23', '17:05:52', '17:20:48']\n    duration VARCHAR(255), -- example: ['26.898', '25.021', '23.426']\n    PRIMARY KEY (race_id)\n);\n\nCREATE TABLE qualifying (\n    race_id INT(11), -- example: [18, 19, 20]\n    driver_id INT(11), -- example: [1, 9, 5]\n    number INT(11), -- example: [22, 4, 23]\n    `position` INT(11), -- example: [1, 2, 3]\n    q1 VARCHAR(255), -- example: ['1:26.572', '1:26.103', '1:25.664']\n    PRIMARY KEY (qualify_id)\n);\n\nCREATE TABLE races (\n    race_id INT(11), -- example: [1, 2, 3]\n    `year` INT(11), -- example: [2009, 2008, 2007]\n    name VARCHAR(255), -- example: ['British Grand Prix']\n    `date` DATE, -- example: ['2009-03-29', '2009-04-05', '2009-04-19']\n    `time` TIME, -- example: ['06:00:00', '09:00:00', '07:00:00']\n    url VARCHAR(255), -- example: ['http://en.wikipedia.org/wiki/2009_Austra', 'http://en.wikipedia.org/wiki/2009_Malays', 'http://en.wikipedia.org/wiki/2009_Chines']\n    quali_date VARCHAR(255), -- example: ['2021-04-17', '2022-03-19', '2021-03-27']\n    sprint_date VARCHAR(255), -- example: ['2021-07-17', '2021-09-11', '2021-11-13']\n    PRIMARY KEY (race_id)\n);\n\nCREATE TABLE results (\n    race_id INT(11), -- example: [18, 19, 20]\n    driver_id INT(11), -- example: [1, 2, 3]\n    number INT(11), -- example: [22, 3, 7]\n    `position` INT(11), -- example: [1, 2, 3]\n    laps INT(11), -- example: [58, 57, 55]\n    `time` VARCHAR(255), -- example: ['1:34:50.616', '+5.478', '+8.163']\n    fastest_lap INT(11), -- example: [39, 41, 58]\n    fastest_lap_time VARCHAR(255), -- example: ['1:27.452', '1:27.739', '1:28.090']\n    PRIMARY KEY (result_id)\n);\n\nCREATE TABLE seasons (\n    `year` INT(11), -- example: [1950, 1951, 1952]\n    url VARCHAR(255), -- example: ['http://en.wikipedia.org/wiki/2009_Formul', 'http://en.wikipedia.org/wiki/2008_Formul', 'http://en.wikipedia.org/wiki/2007_Formul']\n    PRIMARY KEY (`year`)\n);\n\nCREATE TABLE status (\n    status VARCHAR(255), -- example: ['Retired', '+1 Lap']\n    PRIMARY KEY (status_id)\n);\n\nCREATE TABLE sprint_results (\n    race_id INT(11), -- example: [1061, 1065, 1071]\n    driver_id INT(11), -- example: [830, 1, 822]\n    number INT(11), -- example: [33, 44, 77]\n    `position` INT(11), -- example: [1, 2, 3]\n    laps INT(11), -- example: [17, 16, 18]\n    `time` VARCHAR(255), -- example: ['25:38.426', '+1.430', '+7.502']\n    fastest_lap INT(11), -- example: [14, 17, 16]\n    fastest_lap_time VARCHAR(255), -- example: ['1:30.013', '1:29.937', '1:29.958']\n    fastest_lap_speed VARCHAR(255),\n    PRIMARY KEY (result_id)\n);\n\nCREATE TABLE short_grand_prix_names (\n    full_name VARCHAR(255), -- example: ['British Grand Prix']\n    PRIMARY KEY (full_name)\n);\n\nCREATE TABLE short_constructor_names (\n    PRIMARY KEY (constructor_ref)\n);\n\nCREATE TABLE liveries (\n    PRIMARY KEY (constructor_ref)\n);\n\nCREATE TABLE tdr_overrides (\n    `year` INT(11), -- example: [2004, 2007, 2008]\n    driver_ref VARCHAR(255), -- example: ['matta', 'panis', 'trulli']\n    team_driver_rank INT(11), -- example: [1, 2, 3]\n    PRIMARY KEY (`year`)\n);\n\nCREATE TABLE circuits_ext (\n    name TEXT, -- example: ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit']\n    location TEXT, -- example: ['Melbourne', 'Kuala Lumpur', 'Sakhir']\n    country TEXT, -- example: ['Australia', 'Malaysia', 'Bahrain']\n    lat REAL, -- example: [-37.8497, 2.76083, 26.0325]\n    url TEXT, -- example: ['http://en.wikipedia.org/wiki/Melbourne_G', 'http://en.wikipedia.org/wiki/Sepang_Inte', 'http://en.wikipedia.org/wiki/Bahrain_Int']\n    last_race_year TEXT, -- example: [2024, 2017, 2021]\n    number_of_races TEXT, -- example: [27, 19, 21]\n);\n\nCREATE TABLE constructors_ext (\n    name TEXT, -- example: ['McLaren', 'BMW Sauber', 'Williams']\n    nationality TEXT, -- example: ['British', 'German', 'French']\n    url TEXT, -- example: ['http://en.wikipedia.org/wiki/McLaren', 'http://en.wikipedia.org/wiki/BMW_Sauber', 'http://en.wikipedia.org/wiki/Williams_Gr']\n\nCREATE TABLE drivers_ext (\n    driver_id INT, -- example: [1, 2, 3]\n    driver_ref TEXT, -- example: ['driver']\n    number INT, -- example: [44, 6, 14]\n    code TEXT, -- example: ['CAR']\n    surname TEXT, -- example: ['Driver']\n    nationality TEXT, -- example: ['British', 'German', 'Spanish']\n    url TEXT, -- example: ['http://en.wikipedia.org/wiki/Lewis_Hamil', 'http://en.wikipedia.org/wiki/Nick_Heidfe', 'http://en.wikipedia.org/wiki/Nico_Rosber']\n);\n\nCREATE TABLE driver_standings_ext (\n    race_id INT, -- example: [18, 19, 20]\n    driver_id INT, -- example: [1, 2, 3]\n    `position` INT, -- example: [1, 2, 3]\n    wins INT, -- example: [1, 0, 2]\n);\n\nCREATE TABLE lap_times_ext (\n    race_id INT, -- example: [1, 2, 3]\n    driver_id INT, -- example: [1, 2, 3]\n    lap INT, -- example: [1, 2, 3]\n    `position` INT, -- example: [13, 12, 11]\n    `time` TEXT, -- example: ['1:49.088', '1:33.740', '1:31.600']\n    seconds REAL, -- example: [109.088, 93.74, 91.6]\n\nCREATE TABLE lap_time_stats (\n    race_id INT, -- example: [1, 2, 3]\n    driver_id INT, -- example: [1, 2, 3]\n\nCREATE TABLE races_ext (\n    race_id INT, -- example: [1, 2, 3]\n    `year` INT, -- example: [2009, 2008, 2007]\n    name TEXT, -- example: ['British Grand Prix']\n    `date` NUM, -- example: ['2009-03-29', '2009-04-05', '2009-04-19']\n    `time` NUM, -- example: ['06:00:00', '09:00:00', '07:00:00']\n    url TEXT, -- example: ['http://en.wikipedia.org/wiki/2009_Austra', 'http://en.wikipedia.org/wiki/2009_Malays', 'http://en.wikipedia.org/wiki/2009_Chines']\n    quali_date TEXT, -- example: ['2021-11-20', '2021-03-27', '2021-04-17']\n    sprint_date TEXT, -- example: ['2021-07-17', '2021-09-11', '2021-11-13']\n    is_pit_data_available TEXT, -- example: [0, 1]\n\nCREATE TABLE team_driver_ranks (\n    `year` INT, -- example: [1950, 1951, 1952]\n    driver_id INT, -- example: [647, 687, 802]\n    driver_ref TEXT, -- example: ['driver']\n    team_driver_rank TEXT, -- example: [1, 2, 3]\n);\n\nCREATE TABLE drives (\n    `year` INT, -- example: [1950, 1951, 1952]\n    driver_id INT, -- example: [427, 498, 501]\n\nCREATE TABLE retirements (\n    race_id INT, -- example: [18, 19, 20]\n    driver_id INT, -- example: [7, 8, 9]\n    lap TEXT, -- example: [56, 54, 48]\n    retirement_type TEXT, -- example: ['Retirement (Mechanical Problem)', 'Retirement (Driver Error)', 'Retirement (Disqualification)']\n);\n\nCREATE TABLE lap_positions (\n    race_id INT, -- example: [1, 2, 3]\n    driver_id INT, -- example: [1, 2, 3]\n    lap INT, -- example: [0, 1, 2]\n    `position` INT, -- example: [18, 13, 12]\n    lap_type TEXT, -- example: ['Race']\n);",
        "question": "Considering all races where pit stop data is available, and focusing on instances when a driver was not behind another car on the previous lap but is behind on the current lap (accounting for retirements, pit-stop entries, pit-stop exits, and race starts), how many times has each type of overtake occurred in Formula 1?",
        "instance_id": "local344",
        "db_id": "f1"
    },
    {
        "db_desc": "CREATE TABLE circuits (\n    alt INT(11), -- example: [10, 18, 7]\n    PRIMARY KEY (circuit_id)\n);\n\nCREATE TABLE constructor_results (\n    race_id INT(11), -- example: [18, 19, 20]\n    points FLOAT, -- example: [14.0, 8.0, 9.0]\n    PRIMARY KEY (constructor_results_id)\n);\n\nCREATE TABLE constructor_standings (\n    race_id INT(11), -- example: [18, 19, 20]\n    points FLOAT, -- example: [14.0, 8.0, 9.0]\n    `position` INT(11), -- example: [1, 3, 2]\n    wins INT(11), -- example: [1, 0, 2]\n    PRIMARY KEY (constructor_standings_id)\n);\n\nCREATE TABLE constructors (\n    nationality VARCHAR(255), -- example: ['British', 'German', 'French']\n    PRIMARY KEY (constructor_id)\n);\n\nCREATE TABLE driver_standings (\n    race_id INT(11), -- example: [18, 19, 20]\n    points FLOAT, -- example: [10.0, 8.0, 6.0]\n    `position` INT(11), -- example: [1, 2, 3]\n    wins INT(11), -- example: [1, 0, 2]\n    PRIMARY KEY (driver_standings_id)\n);\n\nCREATE TABLE drivers (\n    number INT(11), -- example: [44, 6, 14]\n    nationality VARCHAR(255), -- example: ['British', 'German', 'Spanish']\n    PRIMARY KEY (driver_id)\n);\n\nCREATE TABLE lap_times (\n    race_id INT(11), -- example: [1, 2, 3]\n    lap INT(11), -- example: [1, 2, 3]\n    `position` INT(11), -- example: [1, 3, 4]\n    PRIMARY KEY (race_id)\n);\n\nCREATE TABLE pit_stops (\n    race_id INT(11), -- example: [841, 842, 843]\n    stop INT(11), -- example: [1, 2, 3]\n    lap INT(11), -- example: [1, 11, 12]\n    PRIMARY KEY (race_id)\n);\n\nCREATE TABLE qualifying (\n    race_id INT(11), -- example: [18, 19, 20]\n    number INT(11), -- example: [22, 4, 23]\n    `position` INT(11), -- example: [1, 2, 3]\n    q1 VARCHAR(255), -- example: ['1:26.572', '1:26.103', '1:25.664']\n    PRIMARY KEY (qualify_id)\n);\n\nCREATE TABLE races (\n    race_id INT(11), -- example: [1, 2, 3]\n    round INT(11), -- example: [1, 2, 3]\n    PRIMARY KEY (race_id)\n);\n\nCREATE TABLE results (\n    race_id INT(11), -- example: [18, 19, 20]\n    number INT(11), -- example: [22, 3, 7]\n    `position` INT(11), -- example: [1, 2, 3]\n    points FLOAT, -- example: [10.0, 8.0, 6.0]\n    laps INT(11), -- example: [58, 57, 55]\n    fastest_lap INT(11), -- example: [39, 41, 58]\n    fastest_lap_time VARCHAR(255), -- example: ['1:27.452', '1:27.739', '1:28.090']\n    fastest_lap_speed VARCHAR(255), -- example: ['218.300', '217.586', '216.719']\n    PRIMARY KEY (result_id)\n);\n\nCREATE TABLE seasons (\n    PRIMARY KEY (`year`)\n);\n\nCREATE TABLE status (\n    status VARCHAR(255), -- example: ['Retired', '+2 Laps']\n    PRIMARY KEY (status_id)\n);\n\nCREATE TABLE sprint_results (\n    race_id INT(11), -- example: [1061, 1065, 1071]\n    number INT(11), -- example: [33, 44, 77]\n    `position` INT(11), -- example: [1, 2, 3]\n    points FLOAT, -- example: [3.0, 2.0, 1.0]\n    laps INT(11), -- example: [17, 16, 18]\n    fastest_lap INT(11), -- example: [14, 17, 16]\n    fastest_lap_time VARCHAR(255), -- example: ['1:30.013', '1:29.937', '1:29.958']\n    fastest_lap_speed VARCHAR(255),\n    PRIMARY KEY (result_id)\n);\n\nCREATE TABLE short_grand_prix_names (\n    PRIMARY KEY (full_name)\n);\n\nCREATE TABLE short_constructor_names (\n    PRIMARY KEY (constructor_ref)\n);\n\nCREATE TABLE liveries (\n    start_year INT(11), -- example: [2019, 2020, 2021]\n    PRIMARY KEY (constructor_ref)\n);\n\nCREATE TABLE tdr_overrides (\n    PRIMARY KEY (`year`)\n);\n\nCREATE TABLE circuits_ext (\n    alt INT, -- example: [10, 18, 7]\n    last_race_year TEXT, -- example: [2024, 2017, 2021]\n    number_of_races TEXT, -- example: [27, 19, 21]\n);\n\nCREATE TABLE constructors_ext (\n    nationality TEXT, -- example: ['British', 'German', 'French']\n\nCREATE TABLE drivers_ext (\n    number INT, -- example: [44, 6, 14]\n    nationality TEXT, -- example: ['British', 'German', 'Spanish']\n\nCREATE TABLE driver_standings_ext (\n    race_id INT, -- example: [18, 19, 20]\n    points REAL, -- example: [10.0, 8.0, 6.0]\n    `position` INT, -- example: [1, 2, 3]\n    wins INT, -- example: [1, 0, 2]\n);\n\nCREATE TABLE lap_times_ext (\n    race_id INT, -- example: [1, 2, 3]\n    lap INT, -- example: [1, 2, 3]\n    `position` INT, -- example: [13, 12, 11]\n    seconds REAL, -- example: [109.088, 93.74, 91.6]\n\nCREATE TABLE lap_time_stats (\n    race_id INT, -- example: [1, 2, 3]\n\nCREATE TABLE races_ext (\n    race_id INT, -- example: [1, 2, 3]\n    round INT, -- example: [1, 2, 3]\n    is_pit_data_available TEXT, -- example: [0, 1]\n\nCREATE TABLE team_driver_ranks (\n    \n\nCREATE TABLE drives (\n    first_round INT, -- example: [2, 4, 3]\n\nCREATE TABLE retirements (\n    race_id INT, -- example: [18, 19, 20]\n    lap TEXT, -- example: [56, 54, 48]\n    retirement_type TEXT, -- example: ['Retirement (Mechanical Problem)', 'Retirement (Disqualification)']\n);\n\nCREATE TABLE lap_positions (\n    race_id INT, -- example: [1, 2, 3]\n    lap INT, -- example: [0, 1, 2]\n    `position` INT, -- example: [18, 13, 12]\n    lap_type TEXT, -- example: ['Retirement (Mechanical Problem)', 'Retirement (Disqualification)', 'Race']\n);",
        "question": "In the first five laps of the race, how many overtakes occurred in each category\u2014retirements, pit stops, start-related overtakes, and standard on-track passes?",
        "instance_id": "local336",
        "db_id": "f1"
    },
    {
        "db_desc": "CREATE TABLE circuits (\n    name VARCHAR(255), -- example: ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit']\n    location VARCHAR(255), -- example: ['Melbourne', 'Kuala Lumpur', 'Sakhir']\n    country VARCHAR(255), -- example: ['Australia', 'Malaysia', 'Bahrain']\n    lat FLOAT, -- example: [-37.8497, 2.76083, 26.0325]\n    PRIMARY KEY (circuit_id)\n);\n\nCREATE TABLE constructor_results (\n    constructor_results_id INT(11), -- example: [1, 2, 3]\n    race_id INT(11), -- example: [18, 19, 20]\n    constructor_id INT(11), -- example: [1, 2, 3]\n    points FLOAT, -- example: [14.0, 8.0, 9.0]\n    PRIMARY KEY (constructor_results_id)\n);\n\nCREATE TABLE constructor_standings (\n    race_id INT(11), -- example: [18, 19, 20]\n    constructor_id INT(11), -- example: [1, 2, 3]\n    points FLOAT, -- example: [14.0, 8.0, 9.0]\n    `position` INT(11), -- example: [1, 3, 2]\n    wins INT(11), -- example: [1, 0, 2]\n    PRIMARY KEY (constructor_standings_id)\n);\n\nCREATE TABLE constructors (\n    constructor_id INT(11), -- example: [1, 2, 3]\n    constructor_ref VARCHAR(255), -- example: ['mclaren', 'bmw_sauber', 'williams']\n    name VARCHAR(255), -- example: ['McLaren', 'BMW Sauber', 'Williams']\n    PRIMARY KEY (constructor_id)\n);\n\nCREATE TABLE driver_standings (\n    driver_standings_id INT(11), -- example: [1, 2, 3]\n    race_id INT(11), -- example: [18, 19, 20]\n    driver_id INT(11), -- example: [1, 2, 3]\n    points FLOAT, -- example: [10.0, 8.0, 6.0]\n    `position` INT(11), -- example: [1, 2, 3]\n    wins INT(11), -- example: [1, 0, 2]\n    PRIMARY KEY (driver_standings_id)\n);\n\nCREATE TABLE drivers (\n    driver_id INT(11), -- example: [1, 2, 3]\n    driver_ref VARCHAR(255), -- example: ['driver']\n    number INT(11), -- example: [44, 6, 14]\n    code VARCHAR(3), -- example: ['HAM', 'HEI', 'ROS']\n    forename VARCHAR(255), -- example: ['Lewis', 'Nick', 'Nico']\n    surname VARCHAR(255), -- example: ['Driver']\n    PRIMARY KEY (driver_id)\n);\n\nCREATE TABLE lap_times (\n    race_id INT(11), -- example: [1, 2, 3]\n    driver_id INT(11), -- example: [1, 2, 3]\n    `position` INT(11), -- example: [1, 3, 4]\n    `time` VARCHAR(255), -- example: ['1:38.109', '1:33.006', '1:32.713']\n    PRIMARY KEY (race_id)\n);\n\nCREATE TABLE pit_stops (\n    race_id INT(11), -- example: [841, 842, 843]\n    driver_id INT(11), -- example: [1, 2, 3]\n    `time` TIME, -- example: ['17:05:23', '17:05:52', '17:20:48']\n    duration VARCHAR(255), -- example: ['26.898', '25.021', '23.426']\n    PRIMARY KEY (race_id)\n);\n\nCREATE TABLE qualifying (\n    qualify_id INT(11), -- example: [1, 2, 3]\n    race_id INT(11), -- example: [18, 19, 20]\n    driver_id INT(11), -- example: [1, 9, 5]\n    constructor_id INT(11), -- example: [1, 2, 6]\n    number INT(11), -- example: [22, 4, 23]\n    `position` INT(11), -- example: [1, 2, 3]\n    q1 VARCHAR(255), -- example: ['1:26.572', '1:26.103', '1:25.664']\n    PRIMARY KEY (qualify_id)\n);\n\nCREATE TABLE races (\n    race_id INT(11), -- example: [1, 2, 3]\n    `year` INT(11), -- example: [2009, 2008, 2007]\n    round INT(11), -- example: [1, 2, 3]\n    name VARCHAR(255), -- example: ['British Grand Prix']\n    `date` DATE, -- example: ['2009-03-29', '2009-04-05', '2009-04-19']\n    `time` TIME, -- example: ['06:00:00', '09:00:00', '07:00:00']\n    quali_date VARCHAR(255), -- example: ['2021-04-17', '2022-03-19', '2021-03-27']\n    sprint_date VARCHAR(255), -- example: ['2021-07-17', '2021-09-11', '2021-11-13']\n    PRIMARY KEY (race_id)\n);\n\nCREATE TABLE results (\n    race_id INT(11), -- example: [18, 19, 20]\n    driver_id INT(11), -- example: [1, 2, 3]\n    constructor_id INT(11), -- example: [1, 2, 3]\n    number INT(11), -- example: [22, 3, 7]\n    `position` INT(11), -- example: [1, 2, 3]\n    points FLOAT, -- example: [10.0, 8.0, 6.0]\n    `time` VARCHAR(255), -- example: ['1:34:50.616', '+5.478', '+8.163']\n    rank INT(11), -- example: [2, 3, 5]\n    PRIMARY KEY (result_id)\n);\n\nCREATE TABLE seasons (\n    `year` INT(11), -- example: [1950, 1951, 1952]\n    PRIMARY KEY (`year`)\n);\n\nCREATE TABLE status (\n    PRIMARY KEY (status_id)\n);\n\nCREATE TABLE sprint_results (\n    race_id INT(11), -- example: [1061, 1065, 1071]\n    driver_id INT(11), -- example: [830, 1, 822]\n    constructor_id INT(11), -- example: [9, 131, 6]\n    number INT(11), -- example: [33, 44, 77]\n    `position` INT(11), -- example: [1, 2, 3]\n    points FLOAT, -- example: [3.0, 2.0, 1.0]\n    `time` VARCHAR(255), -- example: ['25:38.426', '+1.430', '+7.502']\n    fastest_lap_speed VARCHAR(255),\n    PRIMARY KEY (result_id)\n);\n\nCREATE TABLE short_grand_prix_names (\n    full_name VARCHAR(255), -- example: ['British Grand Prix']\n    PRIMARY KEY (full_name)\n);\n\nCREATE TABLE short_constructor_names (\n    constructor_ref VARCHAR(255), -- example: ['alphatauri', 'alpine', 'brabham-alfa_romeo']\n    PRIMARY KEY (constructor_ref)\n);\n\nCREATE TABLE liveries (\n    constructor_ref VARCHAR(255), -- example: ['alfa', 'alphatauri', 'alpine']\n    PRIMARY KEY (constructor_ref)\n);\n\nCREATE TABLE tdr_overrides (\n    `year` INT(11), -- example: [2004, 2007, 2008]\n    constructor_ref VARCHAR(255), -- example: ['toyota', 'mclaren', 'renault']\n    driver_ref VARCHAR(255), -- example: ['matta', 'panis', 'trulli']\n    team_driver_rank INT(11), -- example: [1, 2, 3]\n    PRIMARY KEY (`year`)\n);\n\nCREATE TABLE circuits_ext (\n    name TEXT, -- example: ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit']\n    location TEXT, -- example: ['Melbourne', 'Kuala Lumpur', 'Sakhir']\n    country TEXT, -- example: ['Australia', 'Malaysia', 'Bahrain']\n    lat REAL, -- example: [-37.8497, 2.76083, 26.0325]\n    last_race_year TEXT, -- example: [2024, 2017, 2021]\n\nCREATE TABLE constructors_ext (\n    constructor_id INT, -- example: [1, 2, 3]\n    constructor_ref TEXT, -- example: ['mclaren', 'bmw_sauber', 'williams']\n    name TEXT, -- example: ['McLaren', 'BMW Sauber', 'Williams']\n\nCREATE TABLE drivers_ext (\n    driver_id INT, -- example: [1, 2, 3]\n    driver_ref TEXT, -- example: ['driver']\n    number INT, -- example: [44, 6, 14]\n    code TEXT, -- example: ['HAM', 'HEI', 'ROS']\n    forename TEXT, -- example: ['Lewis', 'Nick', 'Nico']\n    surname TEXT, -- example: ['Driver']\n\nCREATE TABLE driver_standings_ext (\n    driver_standings_id INT, -- example: [1, 2, 3]\n    race_id INT, -- example: [18, 19, 20]\n    driver_id INT, -- example: [1, 2, 3]\n    points REAL, -- example: [10.0, 8.0, 6.0]\n    `position` INT, -- example: [1, 2, 3]\n    wins INT, -- example: [1, 0, 2]\n);\n\nCREATE TABLE lap_times_ext (\n    race_id INT, -- example: [1, 2, 3]\n    driver_id INT, -- example: [1, 2, 3]\n    `position` INT, -- example: [13, 12, 11]\n    `time` TEXT, -- example: ['1:49.088', '1:33.740', '1:31.600']\n    seconds REAL, -- example: [109.088, 93.74, 91.6]\n\nCREATE TABLE lap_time_stats (\n    race_id INT, -- example: [1, 2, 3]\n    driver_id INT, -- example: [1, 2, 3]\n\nCREATE TABLE races_ext (\n    race_id INT, -- example: [1, 2, 3]\n    `year` INT, -- example: [2009, 2008, 2007]\n    round INT, -- example: [1, 2, 3]\n    name TEXT, -- example: ['British Grand Prix']\n    `date` NUM, -- example: ['2009-03-29', '2009-04-05', '2009-04-19']\n    `time` NUM, -- example: ['06:00:00', '09:00:00', '07:00:00']\n    quali_date TEXT, -- example: ['2021-11-20', '2021-03-27', '2021-04-17']\n    sprint_date TEXT, -- example: ['2021-07-17', '2021-09-11', '2021-11-13']\n    max_points TEXT, -- example: [10, 9, 25]\n);\n\nCREATE TABLE team_driver_ranks (\n    `year` INT, -- example: [1950, 1951, 1952]\n    constructor_id INT, -- example: [6, 51, 87]\n    constructor_ref TEXT, -- example: ['ferrari', 'alfa', 'cooper']\n    driver_id INT, -- example: [647, 687, 802]\n    driver_ref TEXT, -- example: ['driver']\n    team_driver_rank TEXT, -- example: [1, 2, 3]\n);\n\nCREATE TABLE drives (\n    `year` INT, -- example: [1950, 1951, 1952]\n    driver_id INT, -- example: [427, 498, 501]\n    constructor_id INT, -- example: [141, 105, 87]\n    is_first_drive_of_season TEXT, -- example: [1, 0]\n    is_final_drive_of_season TEXT, -- example: [1, 0]\n);\n\nCREATE TABLE retirements (\n    race_id INT, -- example: [18, 19, 20]\n    driver_id INT, -- example: [7, 8, 9]\n\nCREATE TABLE lap_positions (\n    race_id INT, -- example: [1, 2, 3]\n    driver_id INT, -- example: [1, 2, 3]\n    `position` INT, -- example: [18, 13, 12]",
        "question": "In Formula 1 seasons since 2001, considering only drivers who scored points in a season, which five constructors have had the most seasons where their drivers scored the fewest total points among all point-scoring drivers in that season?",
        "instance_id": "local335",
        "db_id": "f1"
    },
    {
        "db_desc": "CREATE TABLE circuits (\n    name VARCHAR(255), -- example: ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit']\n    location VARCHAR(255), -- example: ['Melbourne', 'Kuala Lumpur', 'Sakhir']\n    country VARCHAR(255), -- example: ['Australia', 'Malaysia', 'Bahrain']\n    PRIMARY KEY (circuit_id)\n);\n\nCREATE TABLE constructor_results (\n    constructor_results_id INT(11), -- example: [1, 2, 3]\n    race_id INT(11), -- example: [18, 19, 20]\n    constructor_id INT(11), -- example: [1, 2, 3]\n    points FLOAT, -- example: [14.0, 8.0, 9.0]\n    PRIMARY KEY (constructor_results_id)\n);\n\nCREATE TABLE constructor_standings (\n    constructor_standings_id INT(11), -- example: [1, 2, 3]\n    race_id INT(11), -- example: [18, 19, 20]\n    constructor_id INT(11), -- example: [1, 2, 3]\n    points FLOAT, -- example: [14.0, 8.0, 9.0]\n    wins INT(11), -- example: [1, 0, 2]\n    PRIMARY KEY (constructor_standings_id)\n);\n\nCREATE TABLE constructors (\n    constructor_id INT(11), -- example: [1, 2, 3]\n    constructor_ref VARCHAR(255), -- example: ['mclaren', 'bmw_sauber', 'williams']\n    name VARCHAR(255), -- example: ['McLaren', 'BMW Sauber', 'Williams']\n    PRIMARY KEY (constructor_id)\n);\n\nCREATE TABLE driver_standings (\n    driver_standings_id INT(11), -- example: [1, 2, 3]\n    race_id INT(11), -- example: [18, 19, 20]\n    driver_id INT(11), -- example: [1, 2, 3]\n    points FLOAT, -- example: [10.0, 8.0, 6.0]\n    wins INT(11), -- example: [1, 0, 2]\n    PRIMARY KEY (driver_standings_id)\n);\n\nCREATE TABLE drivers (\n    driver_id INT(11), -- example: [1, 2, 3]\n    driver_ref VARCHAR(255), -- example: ['driver']\n    number INT(11), -- example: [44, 6, 14]\n    forename VARCHAR(255), -- example: ['Lewis', 'Nick', 'Nico']\n    surname VARCHAR(255), -- example: ['Driver']\n    PRIMARY KEY (driver_id)\n);\n\nCREATE TABLE lap_times (\n    race_id INT(11), -- example: [1, 2, 3]\n    driver_id INT(11), -- example: [1, 2, 3]\n    `time` VARCHAR(255), -- example: ['1:38.109', '1:33.006', '1:32.713']\n    PRIMARY KEY (race_id)\n);\n\nCREATE TABLE pit_stops (\n    race_id INT(11), -- example: [841, 842, 843]\n    driver_id INT(11), -- example: [1, 2, 3]\n    `time` TIME, -- example: ['17:05:23', '17:05:52', '17:20:48']\n    duration VARCHAR(255), -- example: ['26.898', '25.021', '23.426']\n    PRIMARY KEY (race_id)\n);\n\nCREATE TABLE qualifying (\n    qualify_id INT(11), -- example: [1, 2, 3]\n    race_id INT(11), -- example: [18, 19, 20]\n    driver_id INT(11), -- example: [1, 9, 5]\n    constructor_id INT(11), -- example: [1, 2, 6]\n    number INT(11), -- example: [22, 4, 23]\n    PRIMARY KEY (qualify_id)\n);\n\nCREATE TABLE races (\n    race_id INT(11), -- example: [1, 2, 3]\n    `year` INT(11), -- example: [2009, 2008, 2007]\n    name VARCHAR(255), -- example: ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix']\n    `date` DATE, -- example: ['2009-03-29', '2009-04-05', '2009-04-19']\n    `time` TIME, -- example: ['06:00:00', '09:00:00', '07:00:00']\n    quali_date VARCHAR(255), -- example: ['2021-04-17', '2022-03-19', '2021-03-27']\n    sprint_date VARCHAR(255), -- example: ['2021-07-17', '2021-09-11', '2021-11-13']\n    PRIMARY KEY (race_id)\n);\n\nCREATE TABLE results (\n    race_id INT(11), -- example: [18, 19, 20]\n    driver_id INT(11), -- example: [1, 2, 3]\n    constructor_id INT(11), -- example: [1, 2, 3]\n    number INT(11), -- example: [22, 3, 7]\n    points FLOAT, -- example: [10.0, 8.0, 6.0]\n    `time` VARCHAR(255), -- example: ['1:34:50.616', '+5.478', '+8.163']\n    rank INT(11), -- example: [2, 3, 5]\n    PRIMARY KEY (result_id)\n);\n\nCREATE TABLE seasons (\n    `year` INT(11), -- example: [1950, 1951, 1952]\n    PRIMARY KEY (`year`)\n);\n\nCREATE TABLE status (\n    PRIMARY KEY (status_id)\n);\n\nCREATE TABLE sprint_results (\n    race_id INT(11), -- example: [1061, 1065, 1071]\n    driver_id INT(11), -- example: [830, 1, 822]\n    constructor_id INT(11), -- example: [9, 131, 6]\n    number INT(11), -- example: [33, 44, 77]\n    points FLOAT, -- example: [3.0, 2.0, 1.0]\n    `time` VARCHAR(255), -- example: ['25:38.426', '+1.430', '+7.502']\n    fastest_lap_speed VARCHAR(255),\n    PRIMARY KEY (result_id)\n);\n\nCREATE TABLE short_grand_prix_names (\n    full_name VARCHAR(255), -- example: ['70th Anniversary Grand Prix', 'Abu Dhabi Grand Prix', 'Australian Grand Prix']\n    short_name VARCHAR(255), -- example: ['Australia', 'Malaysia', 'China']\n    PRIMARY KEY (full_name)\n);\n\nCREATE TABLE short_constructor_names (\n    constructor_ref VARCHAR(255), -- example: ['alphatauri', 'alpine', 'brabham-alfa_romeo']\n    short_name VARCHAR(255), -- example: ['Alpha Tauri', 'Alpine', 'Brabham']\n    PRIMARY KEY (constructor_ref)\n);\n\nCREATE TABLE liveries (\n    constructor_ref VARCHAR(255), -- example: ['alfa', 'alphatauri', 'alpine']\n    start_year INT(11), -- example: [2019, 2020, 2021]\n    end_year INT(11), -- example: [2002, 2005, 1991]\n    PRIMARY KEY (constructor_ref)\n);\n\nCREATE TABLE tdr_overrides (\n    `year` INT(11), -- example: [2004, 2007, 2008]\n    constructor_ref VARCHAR(255), -- example: ['toyota', 'mclaren', 'renault']\n    driver_ref VARCHAR(255), -- example: ['matta', 'panis', 'trulli']\n    team_driver_rank INT(11), -- example: [1, 2, 3]\n    PRIMARY KEY (`year`)\n);\n\nCREATE TABLE circuits_ext (\n    name TEXT, -- example: ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit']\n    location TEXT, -- example: ['Melbourne', 'Kuala Lumpur', 'Sakhir']\n    country TEXT, -- example: ['Australia', 'Malaysia', 'Bahrain']\n    last_race_year TEXT, -- example: [2024, 2017, 2021]\n\nCREATE TABLE constructors_ext (\n    constructor_id INT, -- example: [1, 2, 3]\n    constructor_ref TEXT, -- example: ['mclaren', 'bmw_sauber', 'williams']\n    name TEXT, -- example: ['McLaren', 'BMW Sauber', 'Williams']\n    short_name TEXT, -- example: ['McLaren', 'BMW Sauber', 'Williams']\n);\n\nCREATE TABLE drivers_ext (\n    driver_id INT, -- example: [1, 2, 3]\n    driver_ref TEXT, -- example: ['driver']\n    number INT, -- example: [44, 6, 14]\n    forename TEXT, -- example: ['Lewis', 'Nick', 'Nico']\n    surname TEXT, -- example: ['Driver']\n    full_name TEXT, -- example: ['Lewis Hamilton', 'Nick Heidfeld', 'Nico Rosberg']\n\nCREATE TABLE driver_standings_ext (\n    driver_standings_id INT, -- example: [1, 2, 3]\n    race_id INT, -- example: [18, 19, 20]\n    driver_id INT, -- example: [1, 2, 3]\n    points REAL, -- example: [10.0, 8.0, 6.0]\n    wins INT, -- example: [1, 0, 2]\n);\n\nCREATE TABLE lap_times_ext (\n    race_id INT, -- example: [1, 2, 3]\n    driver_id INT, -- example: [1, 2, 3]\n    `time` TEXT, -- example: ['1:49.088', '1:33.740', '1:31.600']\n    seconds REAL, -- example: [109.088, 93.74, 91.6]\n\nCREATE TABLE lap_time_stats (\n    race_id INT, -- example: [1, 2, 3]\n    driver_id INT, -- example: [1, 2, 3]\n\nCREATE TABLE races_ext (\n    race_id INT, -- example: [1, 2, 3]\n    `year` INT, -- example: [2009, 2008, 2007]\n    name TEXT, -- example: ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix']\n    `date` NUM, -- example: ['2009-03-29', '2009-04-05', '2009-04-19']\n    `time` NUM, -- example: ['06:00:00', '09:00:00', '07:00:00']\n    quali_date TEXT, -- example: ['2021-11-20', '2021-03-27', '2021-04-17']\n    sprint_date TEXT, -- example: ['2021-07-17', '2021-09-11', '2021-11-13']\n    short_name TEXT, -- example: ['Australia', 'Malaysia', 'China']\n    max_points TEXT, -- example: [10, 9, 25]\n);\n\nCREATE TABLE team_driver_ranks (\n    `year` INT, -- example: [1950, 1951, 1952]\n    constructor_id INT, -- example: [6, 51, 87]\n    constructor_ref TEXT, -- example: ['ferrari', 'alfa', 'cooper']\n    driver_id INT, -- example: [647, 687, 802]\n    driver_ref TEXT, -- example: ['driver']\n    team_driver_rank TEXT, -- example: [1, 2, 3]\n);\n\nCREATE TABLE drives (\n    `year` INT, -- example: [1950, 1951, 1952]\n    driver_id INT, -- example: [427, 498, 501]\n    constructor_id INT, -- example: [141, 105, 87]\n\nCREATE TABLE retirements (\n    race_id INT, -- example: [18, 19, 20]\n    driver_id INT, -- example: [7, 8, 9]\n\nCREATE TABLE lap_positions (\n    race_id INT, -- example: [1, 2, 3]\n    driver_id INT, -- example: [1, 2, 3]",
        "question": "For each year, which driver and which constructor scored the most points? I want the full name of each driver.",
        "instance_id": "local309",
        "db_id": "f1"
    },
    {
        "db_desc": "CREATE TABLE player (\n    player_name TEXT, -- example: ['SC Ganguly', 'BB McCullum', 'RT Ponting']\n    batting_hand TEXT, -- example: ['Left-hand bat', 'Right-hand bat']\n    bowling_skill TEXT, -- example: ['Right-arm medium', 'Right-arm offbreak', 'Right-arm fast-medium']\n    country_name TEXT, -- example: ['India', 'New Zealand', 'Australia']\n    PRIMARY KEY (player_id)\n);\n\nCREATE TABLE team (\n    team_id INTEGER, -- example: [2, 3, 4]\n    name TEXT, -- example: ['Royal Challengers Bangalore', 'Chennai Super Kings', 'Kings XI Punjab']\n    PRIMARY KEY (team_id)\n);\n\nCREATE TABLE `match` (\n    match_date DATE, -- example: ['2008-04-18', '2008-04-19', '2008-04-20']\n    venue TEXT, -- example: ['M Chinnaswamy Stadium', 'Punjab Cricket Association Stadium Mohal', 'Feroz Shah Kotla']\n    win_type TEXT, -- example: ['wickets']\n    PRIMARY KEY (match_id)\n);\n\nCREATE TABLE player_match (\n    team_id INTEGER, -- example: [7, 1, 11]\n    PRIMARY KEY (match_id)\n);\n\nCREATE TABLE ball_by_ball (\n    ball_id INTEGER, -- example: [1, 2, 3]\n    team_batting INTEGER, -- example: [2, 1, 3]\n    team_bowling INTEGER, -- example: [1, 2, 4]\n    striker_batting_position INTEGER, -- example: [1, 2, 3]\n    striker INTEGER, -- example: [6, 2, 7]\n    bowler INTEGER, -- example: [106, 14, 15]\n    PRIMARY KEY (match_id)\n);\n\nCREATE TABLE batsman_scored (\n    ball_id INTEGER, -- example: [1, 2, 3]\n    runs_scored INTEGER, -- example: [1, 0, 4]\n    PRIMARY KEY (match_id)\n);\n\nCREATE TABLE wicket_taken (\n    ball_id INTEGER, -- example: [1, 2, 5]\n    player_out INTEGER, -- example: [154, 46, 8]\n    kind_out TEXT, -- example: ['hit wicket', 'bowled']\n    PRIMARY KEY (match_id)\n);\n\nCREATE TABLE extra_runs (\n    ball_id INTEGER, -- example: [1, 2, 3]\n    extra_runs INTEGER, -- example: [1, 4, 2]\n    PRIMARY KEY (match_id)\n);",
        "question": "Which bowler has the lowest bowling average per wicket taken?",
        "instance_id": "local020",
        "db_id": "IPL"
    },
    {
        "db_desc": "CREATE TABLE circuits (\n    name VARCHAR(255), -- example: ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit']\n    location VARCHAR(255), -- example: ['Melbourne', 'Kuala Lumpur', 'Sakhir']\n    country VARCHAR(255), -- example: ['Australia', 'Malaysia', 'Bahrain']\n    url VARCHAR(255), -- example: ['http://en.wikipedia.org/wiki/Melbourne_G', 'http://en.wikipedia.org/wiki/Sepang_Inte', 'http://en.wikipedia.org/wiki/Bahrain_Int']\n    PRIMARY KEY (circuit_id)\n);\n\nCREATE TABLE constructor_results (\n    race_id INT(11), -- example: [18, 19, 20]\n    constructor_id INT(11), -- example: [1, 2, 3]\n    points FLOAT, -- example: [14.0, 8.0, 9.0]\n    PRIMARY KEY (constructor_results_id)\n);\n\nCREATE TABLE constructor_standings (\n    race_id INT(11), -- example: [18, 19, 20]\n    constructor_id INT(11), -- example: [1, 2, 3]\n    points FLOAT, -- example: [14.0, 8.0, 9.0]\n    wins INT(11), -- example: [1, 0, 2]\n    PRIMARY KEY (constructor_standings_id)\n);\n\nCREATE TABLE constructors (\n    constructor_id INT(11), -- example: [1, 2, 3]\n    constructor_ref VARCHAR(255), -- example: ['mclaren', 'bmw_sauber', 'williams']\n    name VARCHAR(255), -- example: ['McLaren', 'BMW Sauber', 'Williams']\n    url VARCHAR(255), -- example: ['http://en.wikipedia.org/wiki/McLaren', 'http://en.wikipedia.org/wiki/BMW_Sauber', 'http://en.wikipedia.org/wiki/Williams_Gr']\n    PRIMARY KEY (constructor_id)\n);\n\nCREATE TABLE driver_standings (\n    driver_standings_id INT(11), -- example: [1, 2, 3]\n    race_id INT(11), -- example: [18, 19, 20]\n    driver_id INT(11), -- example: [1, 2, 3]\n    points FLOAT, -- example: [10.0, 8.0, 6.0]\n    wins INT(11), -- example: [1, 0, 2]\n    PRIMARY KEY (driver_standings_id)\n);\n\nCREATE TABLE drivers (\n    driver_id INT(11), -- example: [1, 2, 3]\n    driver_ref VARCHAR(255), -- example: ['driver']\n    number INT(11), -- example: [44, 6, 14]\n    code VARCHAR(3), -- example: ['HAM', 'HEI', 'ROS']\n    forename VARCHAR(255), -- example: ['Lewis', 'Nick', 'Nico']\n    surname VARCHAR(255), -- example: ['Driver']\n    url VARCHAR(255), -- example: ['http://en.wikipedia.org/wiki/Lewis_Hamil', 'http://en.wikipedia.org/wiki/Nick_Heidfe', 'http://en.wikipedia.org/wiki/Nico_Rosber']\n    PRIMARY KEY (driver_id)\n);\n\nCREATE TABLE lap_times (\n    race_id INT(11), -- example: [1, 2, 3]\n    driver_id INT(11), -- example: [1, 2, 3]\n    `time` VARCHAR(255), -- example: ['1:38.109', '1:33.006', '1:32.713']\n    PRIMARY KEY (race_id)\n);\n\nCREATE TABLE pit_stops (\n    race_id INT(11), -- example: [841, 842, 843]\n    driver_id INT(11), -- example: [1, 2, 3]\n    `time` TIME, -- example: ['17:05:23', '17:05:52', '17:20:48']\n    duration VARCHAR(255), -- example: ['26.898', '25.021', '23.426']\n    PRIMARY KEY (race_id)\n);\n\nCREATE TABLE qualifying (\n    qualify_id INT(11), -- example: [1, 2, 3]\n    race_id INT(11), -- example: [18, 19, 20]\n    driver_id INT(11), -- example: [1, 9, 5]\n    constructor_id INT(11), -- example: [1, 2, 6]\n    number INT(11), -- example: [22, 4, 23]\n    PRIMARY KEY (qualify_id)\n);\n\nCREATE TABLE races (\n    race_id INT(11), -- example: [1, 2, 3]\n    `year` INT(11), -- example: [2009, 2008, 2007]\n    round INT(11), -- example: [1, 2, 3]\n    name VARCHAR(255), -- example: ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix']\n    `date` DATE, -- example: ['2009-03-29', '2009-04-05', '2009-04-19']\n    `time` TIME, -- example: ['06:00:00', '09:00:00', '07:00:00']\n    url VARCHAR(255), -- example: ['http://en.wikipedia.org/wiki/2009_Austra', 'http://en.wikipedia.org/wiki/2009_Malays', 'http://en.wikipedia.org/wiki/2009_Chines']\n    quali_date VARCHAR(255), -- example: ['2021-04-17', '2022-03-19', '2021-03-27']\n    sprint_date VARCHAR(255), -- example: ['2021-07-17', '2021-09-11', '2021-11-13']\n    PRIMARY KEY (race_id)\n);\n\nCREATE TABLE results (\n    result_id INT(11), -- example: [1, 2, 3]\n    race_id INT(11), -- example: [18, 19, 20]\n    driver_id INT(11), -- example: [1, 2, 3]\n    constructor_id INT(11), -- example: [1, 2, 3]\n    number INT(11), -- example: [22, 3, 7]\n    grid INT(11), -- example: [1, 5, 7]\n    position_order INT(11), -- example: [1, 2, 3]\n    points FLOAT, -- example: [10.0, 8.0, 6.0]\n    `time` VARCHAR(255), -- example: ['1:34:50.616', '+5.478', '+8.163']\n    rank INT(11), -- example: [2, 3, 5]\n    PRIMARY KEY (result_id)\n);\n\nCREATE TABLE seasons (\n    `year` INT(11), -- example: [1950, 1951, 1952]\n    url VARCHAR(255), -- example: ['http://en.wikipedia.org/wiki/2009_Formul', 'http://en.wikipedia.org/wiki/2008_Formul', 'http://en.wikipedia.org/wiki/2007_Formul']\n    PRIMARY KEY (`year`)\n);\n\nCREATE TABLE status (\n    PRIMARY KEY (status_id)\n);\n\nCREATE TABLE sprint_results (\n    result_id INT(11), -- example: [1, 2, 3]\n    race_id INT(11), -- example: [1061, 1065, 1071]\n    driver_id INT(11), -- example: [830, 1, 822]\n    constructor_id INT(11), -- example: [9, 131, 6]\n    number INT(11), -- example: [33, 44, 77]\n    grid INT(11), -- example: [2, 1, 3]\n    position_order INT(11), -- example: [1, 2, 3]\n    points FLOAT, -- example: [3.0, 2.0, 1.0]\n    `time` VARCHAR(255), -- example: ['25:38.426', '+1.430', '+7.502']\n    fastest_lap_speed VARCHAR(255),\n    PRIMARY KEY (result_id)\n);\n\nCREATE TABLE short_grand_prix_names (\n    PRIMARY KEY (full_name)\n);\n\nCREATE TABLE short_constructor_names (\n    constructor_ref VARCHAR(255), -- example: ['alphatauri', 'alpine', 'brabham-alfa_romeo']\n    PRIMARY KEY (constructor_ref)\n);\n\nCREATE TABLE liveries (\n    constructor_ref VARCHAR(255), -- example: ['alfa', 'alphatauri', 'alpine']\n    start_year INT(11), -- example: [2019, 2020, 2021]\n    end_year INT(11), -- example: [2002, 2005, 1991]\n    PRIMARY KEY (constructor_ref)\n);\n\nCREATE TABLE tdr_overrides (\n    `year` INT(11), -- example: [2004, 2007, 2008]\n    constructor_ref VARCHAR(255), -- example: ['toyota', 'mclaren', 'renault']\n    driver_ref VARCHAR(255), -- example: ['matta', 'panis', 'trulli']\n    team_driver_rank INT(11), -- example: [1, 2, 3]\n    PRIMARY KEY (`year`)\n);\n\nCREATE TABLE circuits_ext (\n    name TEXT, -- example: ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit']\n    location TEXT, -- example: ['Melbourne', 'Kuala Lumpur', 'Sakhir']\n    country TEXT, -- example: ['Australia', 'Malaysia', 'Bahrain']\n    url TEXT, -- example: ['http://en.wikipedia.org/wiki/Melbourne_G', 'http://en.wikipedia.org/wiki/Sepang_Inte', 'http://en.wikipedia.org/wiki/Bahrain_Int']\n\nCREATE TABLE constructors_ext (\n    constructor_id INT, -- example: [1, 2, 3]\n    constructor_ref TEXT, -- example: ['mclaren', 'bmw_sauber', 'williams']\n    name TEXT, -- example: ['McLaren', 'BMW Sauber', 'Williams']\n    url TEXT, -- example: ['http://en.wikipedia.org/wiki/McLaren', 'http://en.wikipedia.org/wiki/BMW_Sauber', 'http://en.wikipedia.org/wiki/Williams_Gr']\n\nCREATE TABLE drivers_ext (\n    driver_id INT, -- example: [1, 2, 3]\n    driver_ref TEXT, -- example: ['driver']\n    number INT, -- example: [44, 6, 14]\n    code TEXT, -- example: ['HAM', 'HEI', 'ROS']\n    forename TEXT, -- example: ['Lewis', 'Nick', 'Nico']\n    surname TEXT, -- example: ['Driver']\n    url TEXT, -- example: ['http://en.wikipedia.org/wiki/Lewis_Hamil', 'http://en.wikipedia.org/wiki/Nick_Heidfe', 'http://en.wikipedia.org/wiki/Nico_Rosber']\n);\n\nCREATE TABLE driver_standings_ext (\n    driver_standings_id INT, -- example: [1, 2, 3]\n    race_id INT, -- example: [18, 19, 20]\n    driver_id INT, -- example: [1, 2, 3]\n    points REAL, -- example: [10.0, 8.0, 6.0]\n    wins INT, -- example: [1, 0, 2]\n);\n\nCREATE TABLE lap_times_ext (\n    race_id INT, -- example: [1, 2, 3]\n    driver_id INT, -- example: [1, 2, 3]\n    `time` TEXT, -- example: ['1:49.088', '1:33.740', '1:31.600']\n    seconds REAL, -- example: [109.088, 93.74, 91.6]\n\nCREATE TABLE lap_time_stats (\n    race_id INT, -- example: [1, 2, 3]\n    driver_id INT, -- example: [1, 2, 3]\n\nCREATE TABLE races_ext (\n    race_id INT, -- example: [1, 2, 3]\n    `year` INT, -- example: [2009, 2008, 2007]\n    round INT, -- example: [1, 2, 3]\n    name TEXT, -- example: ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix']\n    `date` NUM, -- example: ['2009-03-29', '2009-04-05', '2009-04-19']\n    `time` NUM, -- example: ['06:00:00', '09:00:00', '07:00:00']\n    url TEXT, -- example: ['http://en.wikipedia.org/wiki/2009_Austra', 'http://en.wikipedia.org/wiki/2009_Malays', 'http://en.wikipedia.org/wiki/2009_Chines']\n    quali_date TEXT, -- example: ['2021-11-20', '2021-03-27', '2021-04-17']\n    sprint_date TEXT, -- example: ['2021-07-17', '2021-09-11', '2021-11-13']\n    max_points TEXT, -- example: [10, 9, 25]\n);\n\nCREATE TABLE team_driver_ranks (\n    `year` INT, -- example: [1950, 1951, 1952]\n    constructor_id INT, -- example: [6, 51, 87]\n    constructor_ref TEXT, -- example: ['ferrari', 'alfa', 'cooper']\n    driver_id INT, -- example: [647, 687, 802]\n    driver_ref TEXT, -- example: ['driver']\n    team_driver_rank TEXT, -- example: [1, 2, 3]\n);\n\nCREATE TABLE drives (\n    `year` INT, -- example: [1950, 1951, 1952]\n    driver_id INT, -- example: [427, 498, 501]\n    constructor_id INT, -- example: [141, 105, 87]\n\nCREATE TABLE retirements (\n    race_id INT, -- example: [18, 19, 20]\n    driver_id INT, -- example: [7, 8, 9]\n    position_order INT, -- example: [7, 8, 9]\n\nCREATE TABLE lap_positions (\n    race_id INT, -- example: [1, 2, 3]\n    driver_id INT, -- example: [1, 2, 3]",
        "question": "Using only the data from the \u2018results\u2019 table, find the three years in which the sum of the highest total points earned by any driver and the highest total points earned by any constructor in that year (both calculated by summing up points from the \u2018results\u2019 table) is smallest, and list those three years in order of ascending total.",
        "instance_id": "local310",
        "db_id": "f1"
    },
    {
        "db_desc": "CREATE TABLE circuits (\n    name VARCHAR(255), -- example: ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit']\n    location VARCHAR(255), -- example: ['Melbourne', 'Kuala Lumpur', 'Sakhir']\n    country VARCHAR(255), -- example: ['Australia', 'Malaysia', 'Bahrain']\n    PRIMARY KEY (circuit_id)\n);\n\nCREATE TABLE constructor_results (\n    constructor_results_id INT(11), -- example: [1, 2, 3]\n    constructor_id INT(11), -- example: [1, 2, 3]\n    points FLOAT, -- example: [14.0, 8.0, 9.0]\n    PRIMARY KEY (constructor_results_id)\n);\n\nCREATE TABLE constructor_standings (\n    constructor_id INT(11), -- example: [1, 2, 3]\n    points FLOAT, -- example: [14.0, 8.0, 9.0]\n    wins INT(11), -- example: [1, 0, 2]\n    PRIMARY KEY (constructor_standings_id)\n);\n\nCREATE TABLE constructors (\n    constructor_id INT(11), -- example: [1, 2, 3]\n    constructor_ref VARCHAR(255), -- example: ['mclaren', 'bmw_sauber', 'williams']\n    name VARCHAR(255), -- example: ['McLaren', 'BMW Sauber', 'Williams']\n    PRIMARY KEY (constructor_id)\n);\n\nCREATE TABLE driver_standings (\n    driver_standings_id INT(11), -- example: [1, 2, 3]\n    driver_id INT(11), -- example: [1, 2, 3]\n    points FLOAT, -- example: [10.0, 8.0, 6.0]\n    wins INT(11), -- example: [1, 0, 2]\n    PRIMARY KEY (driver_standings_id)\n);\n\nCREATE TABLE drivers (\n    driver_id INT(11), -- example: [1, 2, 3]\n    driver_ref VARCHAR(255), -- example: ['driver']\n    number INT(11), -- example: [44, 6, 14]\n    forename VARCHAR(255), -- example: ['Lewis', 'Nick', 'Nico']\n    surname VARCHAR(255), -- example: ['Driver']\n    PRIMARY KEY (driver_id)\n);\n\nCREATE TABLE lap_times (\n    driver_id INT(11), -- example: [1, 2, 3]\n    `time` VARCHAR(255), -- example: ['1:38.109', '1:33.006', '1:32.713']\n    PRIMARY KEY (race_id)\n);\n\nCREATE TABLE pit_stops (\n    driver_id INT(11), -- example: [1, 2, 3]\n    `time` TIME, -- example: ['17:05:23', '17:05:52', '17:20:48']\n    duration VARCHAR(255), -- example: ['26.898', '25.021', '23.426']\n    PRIMARY KEY (race_id)\n);\n\nCREATE TABLE qualifying (\n    qualify_id INT(11), -- example: [1, 2, 3]\n    driver_id INT(11), -- example: [1, 9, 5]\n    constructor_id INT(11), -- example: [1, 2, 6]\n    number INT(11), -- example: [22, 4, 23]\n    q3 VARCHAR(255), -- example: ['1:26.714', '1:26.869', '1:27.079']\n    PRIMARY KEY (qualify_id)\n);\n\nCREATE TABLE races (\n    `year` INT(11), -- example: [2009, 2008, 2007]\n    name VARCHAR(255), -- example: ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix']\n    `date` DATE, -- example: ['2009-03-29', '2009-04-05', '2009-04-19']\n    `time` TIME, -- example: ['06:00:00', '09:00:00', '07:00:00']\n    quali_date VARCHAR(255), -- example: ['2021-04-17', '2022-03-19', '2021-03-27']\n    sprint_date VARCHAR(255), -- example: ['2021-07-17', '2021-09-11', '2021-11-13']\n    PRIMARY KEY (race_id)\n);\n\nCREATE TABLE results (\n    driver_id INT(11), -- example: [1, 2, 3]\n    constructor_id INT(11), -- example: [1, 2, 3]\n    number INT(11), -- example: [22, 3, 7]\n    points FLOAT, -- example: [10.0, 8.0, 6.0]\n    `time` VARCHAR(255), -- example: ['1:34:50.616', '+5.478', '+8.163']\n    fastest_lap INT(11), -- example: [39, 41, 58]\n    rank INT(11), -- example: [2, 3, 5]\n    PRIMARY KEY (result_id)\n);\n\nCREATE TABLE seasons (\n    `year` INT(11), -- example: [1950, 1951, 1952]\n    PRIMARY KEY (`year`)\n);\n\nCREATE TABLE status (\n    PRIMARY KEY (status_id)\n);\n\nCREATE TABLE sprint_results (\n    driver_id INT(11), -- example: [830, 1, 822]\n    constructor_id INT(11), -- example: [9, 131, 6]\n    number INT(11), -- example: [33, 44, 77]\n    points FLOAT, -- example: [3.0, 2.0, 1.0]\n    `time` VARCHAR(255), -- example: ['25:38.426', '+1.430', '+7.502']\n    fastest_lap INT(11), -- example: [14, 17, 16]\n    fastest_lap_speed VARCHAR(255),\n    PRIMARY KEY (result_id)\n);\n\nCREATE TABLE short_grand_prix_names (\n    PRIMARY KEY (full_name)\n);\n\nCREATE TABLE short_constructor_names (\n    constructor_ref VARCHAR(255), -- example: ['alphatauri', 'alpine', 'brabham-alfa_romeo']\n    PRIMARY KEY (constructor_ref)\n);\n\nCREATE TABLE liveries (\n    constructor_ref VARCHAR(255), -- example: ['alfa', 'alphatauri', 'alpine']\n    start_year INT(11), -- example: [2019, 2020, 2021]\n    end_year INT(11), -- example: [2002, 2005, 1991]\n    PRIMARY KEY (constructor_ref)\n);\n\nCREATE TABLE tdr_overrides (\n    `year` INT(11), -- example: [2004, 2007, 2008]\n    constructor_ref VARCHAR(255), -- example: ['toyota', 'mclaren', 'renault']\n    driver_ref VARCHAR(255), -- example: ['matta', 'panis', 'trulli']\n    team_driver_rank INT(11), -- example: [1, 2, 3]\n    PRIMARY KEY (`year`)\n);\n\nCREATE TABLE circuits_ext (\n    name TEXT, -- example: ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit']\n    location TEXT, -- example: ['Melbourne', 'Kuala Lumpur', 'Sakhir']\n    country TEXT, -- example: ['Australia', 'Malaysia', 'Bahrain']\n\nCREATE TABLE constructors_ext (\n    constructor_id INT, -- example: [1, 2, 3]\n    constructor_ref TEXT, -- example: ['mclaren', 'bmw_sauber', 'williams']\n    name TEXT, -- example: ['McLaren', 'BMW Sauber', 'Williams']\n\nCREATE TABLE drivers_ext (\n    driver_id INT, -- example: [1, 2, 3]\n    driver_ref TEXT, -- example: ['driver']\n    number INT, -- example: [44, 6, 14]\n    code TEXT, -- example: ['AND']\n    forename TEXT, -- example: ['Lewis', 'Nick', 'Nico']\n    surname TEXT, -- example: ['Driver']\n\nCREATE TABLE driver_standings_ext (\n    driver_standings_id INT, -- example: [1, 2, 3]\n    driver_id INT, -- example: [1, 2, 3]\n    points REAL, -- example: [10.0, 8.0, 6.0]\n    wins INT, -- example: [1, 0, 2]\n);\n\nCREATE TABLE lap_times_ext (\n    driver_id INT, -- example: [1, 2, 3]\n    `time` TEXT, -- example: ['1:49.088', '1:33.740', '1:31.600']\n    seconds REAL, -- example: [109.088, 93.74, 91.6]\n\nCREATE TABLE lap_time_stats (\n    driver_id INT, -- example: [1, 2, 3]\n\nCREATE TABLE races_ext (\n    `year` INT, -- example: [2009, 2008, 2007]\n    name TEXT, -- example: ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix']\n    `date` NUM, -- example: ['2009-03-29', '2009-04-05', '2009-04-19']\n    `time` NUM, -- example: ['06:00:00', '09:00:00', '07:00:00']\n    quali_date TEXT, -- example: ['2021-11-20', '2021-03-27', '2021-04-17']\n    sprint_date TEXT, -- example: ['2021-07-17', '2021-09-11', '2021-11-13']\n    max_points TEXT, -- example: [10, 9, 25]\n);\n\nCREATE TABLE team_driver_ranks (\n    `year` INT, -- example: [1950, 1951, 1952]\n    constructor_id INT, -- example: [6, 51, 87]\n    constructor_ref TEXT, -- example: ['ferrari', 'alfa', 'cooper']\n    driver_id INT, -- example: [647, 687, 802]\n    driver_ref TEXT, -- example: ['driver']\n    team_driver_rank TEXT, -- example: [1, 2, 3]\n);\n\nCREATE TABLE drives (\n    `year` INT, -- example: [1950, 1951, 1952]\n    driver_id INT, -- example: [427, 498, 501]\n    constructor_id INT, -- example: [141, 105, 87]\n\nCREATE TABLE retirements (\n    driver_id INT, -- example: [7, 8, 9]\n\nCREATE TABLE lap_positions (\n    driver_id INT, -- example: [1, 2, 3]",
        "question": "Which constructors had the top 3 combined points from their best driver and team, and in which years did they achieve them?",
        "instance_id": "local311",
        "db_id": "f1"
    },
    {
        "db_desc": "CREATE TABLE circuits (\n    name VARCHAR(255), -- example: ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit']\n    location VARCHAR(255), -- example: ['Melbourne', 'Kuala Lumpur', 'Sakhir']\n    country VARCHAR(255), -- example: ['Australia', 'Malaysia', 'Bahrain']\n    PRIMARY KEY (circuit_id)\n);\n\nCREATE TABLE constructor_results (\n    race_id INT(11), -- example: [18, 19, 20]\n    constructor_id INT(11), -- example: [1, 2, 3]\n    PRIMARY KEY (constructor_results_id)\n);\n\nCREATE TABLE constructor_standings (\n    race_id INT(11), -- example: [18, 19, 20]\n    constructor_id INT(11), -- example: [1, 2, 3]\n    wins INT(11), -- example: [1, 0, 2]\n    PRIMARY KEY (constructor_standings_id)\n);\n\nCREATE TABLE constructors (\n    constructor_id INT(11), -- example: [1, 2, 3]\n    constructor_ref VARCHAR(255), -- example: ['mclaren', 'bmw_sauber', 'williams']\n    name VARCHAR(255), -- example: ['McLaren', 'BMW Sauber', 'Williams']\n    nationality VARCHAR(255), -- example: ['British', 'German', 'French']\n    PRIMARY KEY (constructor_id)\n);\n\nCREATE TABLE driver_standings (\n    driver_standings_id INT(11), -- example: [1, 2, 3]\n    race_id INT(11), -- example: [18, 19, 20]\n    driver_id INT(11), -- example: [1, 2, 3]\n    wins INT(11), -- example: [1, 0, 2]\n    PRIMARY KEY (driver_standings_id)\n);\n\nCREATE TABLE drivers (\n    driver_id INT(11), -- example: [1, 2, 3]\n    driver_ref VARCHAR(255), -- example: ['driver']\n    number INT(11), -- example: [44, 6, 14]\n    code VARCHAR(3), -- example: ['HAM', 'HEI', 'ROS']\n    forename VARCHAR(255), -- example: ['Lewis', 'Nick', 'Nico']\n    surname VARCHAR(255), -- example: ['Driver']\n    nationality VARCHAR(255), -- example: ['British', 'German', 'Spanish']\n    PRIMARY KEY (driver_id)\n);\n\nCREATE TABLE lap_times (\n    race_id INT(11), -- example: [1, 2, 3]\n    driver_id INT(11), -- example: [1, 2, 3]\n    `time` VARCHAR(255), -- example: ['1:38.109', '1:33.006', '1:32.713']\n    PRIMARY KEY (race_id)\n);\n\nCREATE TABLE pit_stops (\n    race_id INT(11), -- example: [841, 842, 843]\n    driver_id INT(11), -- example: [1, 2, 3]\n    `time` TIME, -- example: ['17:05:23', '17:05:52', '17:20:48']\n    duration VARCHAR(255), -- example: ['26.898', '25.021', '23.426']\n    PRIMARY KEY (race_id)\n);\n\nCREATE TABLE qualifying (\n    qualify_id INT(11), -- example: [1, 2, 3]\n    race_id INT(11), -- example: [18, 19, 20]\n    driver_id INT(11), -- example: [1, 9, 5]\n    constructor_id INT(11), -- example: [1, 2, 6]\n    number INT(11), -- example: [22, 4, 23]\n    q1 VARCHAR(255), -- example: ['1:26.572', '1:26.103', '1:25.664']\n    PRIMARY KEY (qualify_id)\n);\n\nCREATE TABLE races (\n    race_id INT(11), -- example: [1, 2, 3]\n    `year` INT(11), -- example: [2009, 2008, 2007]\n    round INT(11), -- example: [1, 2, 3]\n    name VARCHAR(255), -- example: ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix']\n    `date` DATE, -- example: ['2009-03-29', '2009-04-05', '2009-04-19']\n    `time` TIME, -- example: ['06:00:00', '09:00:00', '07:00:00']\n    quali_date VARCHAR(255), -- example: ['2021-04-17', '2022-03-19', '2021-03-27']\n    sprint_date VARCHAR(255), -- example: ['2021-07-17', '2021-09-11', '2021-11-13']\n    PRIMARY KEY (race_id)\n);\n\nCREATE TABLE results (\n    race_id INT(11), -- example: [18, 19, 20]\n    driver_id INT(11), -- example: [1, 2, 3]\n    constructor_id INT(11), -- example: [1, 2, 3]\n    number INT(11), -- example: [22, 3, 7]\n    laps INT(11), -- example: [58, 57, 55]\n    `time` VARCHAR(255), -- example: ['1:34:50.616', '+5.478', '+8.163']\n    PRIMARY KEY (result_id)\n);\n\nCREATE TABLE seasons (\n    `year` INT(11), -- example: [1950, 1951, 1952]\n    PRIMARY KEY (`year`)\n);\n\nCREATE TABLE status (\n    PRIMARY KEY (status_id)\n);\n\nCREATE TABLE sprint_results (\n    race_id INT(11), -- example: [1061, 1065, 1071]\n    driver_id INT(11), -- example: [830, 1, 822]\n    constructor_id INT(11), -- example: [9, 131, 6]\n    number INT(11), -- example: [33, 44, 77]\n    laps INT(11), -- example: [17, 16, 18]\n    `time` VARCHAR(255), -- example: ['25:38.426', '+1.430', '+7.502']\n    fastest_lap_speed VARCHAR(255),\n    PRIMARY KEY (result_id)\n);\n\nCREATE TABLE short_grand_prix_names (\n    PRIMARY KEY (full_name)\n);\n\nCREATE TABLE short_constructor_names (\n    constructor_ref VARCHAR(255), -- example: ['alphatauri', 'alpine', 'brabham-alfa_romeo']\n    PRIMARY KEY (constructor_ref)\n);\n\nCREATE TABLE liveries (\n    constructor_ref VARCHAR(255), -- example: ['alfa', 'alphatauri', 'alpine']\n    PRIMARY KEY (constructor_ref)\n);\n\nCREATE TABLE tdr_overrides (\n    `year` INT(11), -- example: [2004, 2007, 2008]\n    constructor_ref VARCHAR(255), -- example: ['toyota', 'mclaren', 'renault']\n    driver_ref VARCHAR(255), -- example: ['matta', 'panis', 'trulli']\n    team_driver_rank INT(11), -- example: [1, 2, 3]\n    PRIMARY KEY (`year`)\n);\n\nCREATE TABLE circuits_ext (\n    name TEXT, -- example: ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit']\n    location TEXT, -- example: ['Melbourne', 'Kuala Lumpur', 'Sakhir']\n    country TEXT, -- example: ['Australia', 'Malaysia', 'Bahrain']\n    last_race_year TEXT, -- example: [2024, 2017, 2021]\n    number_of_races TEXT, -- example: [27, 19, 21]\n);\n\nCREATE TABLE constructors_ext (\n    constructor_id INT, -- example: [1, 2, 3]\n    constructor_ref TEXT, -- example: ['mclaren', 'bmw_sauber', 'williams']\n    name TEXT, -- example: ['McLaren', 'BMW Sauber', 'Williams']\n    nationality TEXT, -- example: ['British', 'German', 'French']\n\nCREATE TABLE drivers_ext (\n    driver_id INT, -- example: [1, 2, 3]\n    driver_ref TEXT, -- example: ['driver']\n    number INT, -- example: [44, 6, 14]\n    code TEXT, -- example: ['HAM', 'HEI', 'ROS']\n    forename TEXT, -- example: ['Lewis', 'Nick', 'Nico']\n    surname TEXT, -- example: ['Driver']\n    nationality TEXT, -- example: ['British', 'German', 'Spanish']\n\nCREATE TABLE driver_standings_ext (\n    driver_standings_id INT, -- example: [1, 2, 3]\n    race_id INT, -- example: [18, 19, 20]\n    driver_id INT, -- example: [1, 2, 3]\n    wins INT, -- example: [1, 0, 2]\n);\n\nCREATE TABLE lap_times_ext (\n    race_id INT, -- example: [1, 2, 3]\n    driver_id INT, -- example: [1, 2, 3]\n    `time` TEXT, -- example: ['1:49.088', '1:33.740', '1:31.600']\n    seconds REAL, -- example: [109.088, 93.74, 91.6]\n\nCREATE TABLE lap_time_stats (\n    race_id INT, -- example: [1, 2, 3]\n    driver_id INT, -- example: [1, 2, 3]\n\nCREATE TABLE races_ext (\n    race_id INT, -- example: [1, 2, 3]\n    `year` INT, -- example: [2009, 2008, 2007]\n    round INT, -- example: [1, 2, 3]\n    name TEXT, -- example: ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix']\n    `date` NUM, -- example: ['2009-03-29', '2009-04-05', '2009-04-19']\n    `time` NUM, -- example: ['06:00:00', '09:00:00', '07:00:00']\n    quali_date TEXT, -- example: ['2021-11-20', '2021-03-27', '2021-04-17']\n    sprint_date TEXT, -- example: ['2021-07-17', '2021-09-11', '2021-11-13']\n\nCREATE TABLE team_driver_ranks (\n    `year` INT, -- example: [1950, 1951, 1952]\n    constructor_id INT, -- example: [6, 51, 87]\n    constructor_ref TEXT, -- example: ['ferrari', 'alfa', 'cooper']\n    driver_id INT, -- example: [647, 687, 802]\n    driver_ref TEXT, -- example: ['driver']\n    team_driver_rank TEXT, -- example: [1, 2, 3]\n);\n\nCREATE TABLE drives (\n    `year` INT, -- example: [1950, 1951, 1952]\n    driver_id INT, -- example: [427, 498, 501]\n    constructor_id INT, -- example: [141, 105, 87]\n    first_round INT, -- example: [2, 4, 3]\n    last_round INT, -- example: [7, 6, 2]\n    is_final_drive_of_season TEXT, -- example: [1, 0]\n);\n\nCREATE TABLE retirements (\n    race_id INT, -- example: [18, 19, 20]\n    driver_id INT, -- example: [7, 8, 9]\n\nCREATE TABLE lap_positions (\n    race_id INT, -- example: [1, 2, 3]\n    driver_id INT, -- example: [1, 2, 3]\n    lap_type TEXT, -- example: ['Race']\n);",
        "question": "Among Formula 1 drivers who raced during the 1950s, which drivers completed a season in that decade with the same constructor in both the first and the last race they participated in, while also taking part in at least two distinct race rounds during that season?",
        "instance_id": "local354",
        "db_id": "f1"
    },
    {
        "db_desc": "CREATE TABLE circuits (\n    name VARCHAR(255), -- example: ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit']\n    country VARCHAR(255), -- example: ['Australia', 'Malaysia', 'Bahrain']\n    PRIMARY KEY (circuit_id)\n);\n\nCREATE TABLE constructor_results (\n    race_id INT(11), -- example: [18, 19, 20]\n    constructor_id INT(11), -- example: [1, 2, 3]\n    points FLOAT, -- example: [14.0, 8.0, 9.0]\n    PRIMARY KEY (constructor_results_id)\n);\n\nCREATE TABLE constructor_standings (\n    race_id INT(11), -- example: [18, 19, 20]\n    constructor_id INT(11), -- example: [1, 2, 3]\n    points FLOAT, -- example: [14.0, 8.0, 9.0]\n    wins INT(11), -- example: [1, 0, 2]\n    PRIMARY KEY (constructor_standings_id)\n);\n\nCREATE TABLE constructors (\n    constructor_id INT(11), -- example: [1, 2, 3]\n    name VARCHAR(255), -- example: ['McLaren', 'BMW Sauber', 'Williams']\n    nationality VARCHAR(255), -- example: ['British', 'German', 'French']\n    PRIMARY KEY (constructor_id)\n);\n\nCREATE TABLE driver_standings (\n    driver_standings_id INT(11), -- example: [1, 2, 3]\n    race_id INT(11), -- example: [18, 19, 20]\n    driver_id INT(11), -- example: [1, 2, 3]\n    points FLOAT, -- example: [10.0, 8.0, 6.0]\n    wins INT(11), -- example: [1, 0, 2]\n    PRIMARY KEY (driver_standings_id)\n);\n\nCREATE TABLE drivers (\n    driver_id INT(11), -- example: [1, 2, 3]\n    driver_ref VARCHAR(255), -- example: ['driver']\n    forename VARCHAR(255), -- example: ['Lewis', 'Nick', 'Nico']\n    surname VARCHAR(255), -- example: ['Driver']\n    nationality VARCHAR(255), -- example: ['British', 'German', 'Spanish']\n    PRIMARY KEY (driver_id)\n);\n\nCREATE TABLE lap_times (\n    race_id INT(11), -- example: [1, 2, 3]\n    driver_id INT(11), -- example: [1, 2, 3]\n    PRIMARY KEY (race_id)\n);\n\nCREATE TABLE pit_stops (\n    race_id INT(11), -- example: [841, 842, 843]\n    driver_id INT(11), -- example: [1, 2, 3]\n    PRIMARY KEY (race_id)\n);\n\nCREATE TABLE qualifying (\n    race_id INT(11), -- example: [18, 19, 20]\n    driver_id INT(11), -- example: [1, 9, 5]\n    constructor_id INT(11), -- example: [1, 2, 6]\n    PRIMARY KEY (qualify_id)\n);\n\nCREATE TABLE races (\n    race_id INT(11), -- example: [1, 2, 3]\n    `year` INT(11), -- example: [2009, 2008, 2007]\n    round INT(11), -- example: [1, 2, 3]\n    name VARCHAR(255), -- example: ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix']\n    PRIMARY KEY (race_id)\n);\n\nCREATE TABLE results (\n    race_id INT(11), -- example: [18, 19, 20]\n    driver_id INT(11), -- example: [1, 2, 3]\n    constructor_id INT(11), -- example: [1, 2, 3]\n    points FLOAT, -- example: [10.0, 8.0, 6.0]\n    laps INT(11), -- example: [58, 57, 55]\n    PRIMARY KEY (result_id)\n);\n\nCREATE TABLE seasons (\n    `year` INT(11), -- example: [1950, 1951, 1952]\n    PRIMARY KEY (`year`)\n);\n\nCREATE TABLE status (\n    PRIMARY KEY (status_id)\n);\n\nCREATE TABLE sprint_results (\n    race_id INT(11), -- example: [1061, 1065, 1071]\n    driver_id INT(11), -- example: [830, 1, 822]\n    constructor_id INT(11), -- example: [9, 131, 6]\n    points FLOAT, -- example: [3.0, 2.0, 1.0]\n    laps INT(11), -- example: [17, 16, 18]\n    fastest_lap_speed VARCHAR(255),\n    PRIMARY KEY (result_id)\n);\n\nCREATE TABLE short_grand_prix_names (\n    PRIMARY KEY (full_name)\n);\n\nCREATE TABLE short_constructor_names (\n    PRIMARY KEY (constructor_ref)\n);\n\nCREATE TABLE liveries (\n    start_year INT(11), -- example: [2019, 2020, 2021]\n    end_year INT(11), -- example: [2002, 2005, 1991]\n    PRIMARY KEY (constructor_ref)\n);\n\nCREATE TABLE tdr_overrides (\n    `year` INT(11), -- example: [2004, 2007, 2008]\n    driver_ref VARCHAR(255), -- example: ['matta', 'panis', 'trulli']\n    team_driver_rank INT(11), -- example: [1, 2, 3]\n    PRIMARY KEY (`year`)\n);\n\nCREATE TABLE circuits_ext (\n    name TEXT, -- example: ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit']\n    country TEXT, -- example: ['Australia', 'Malaysia', 'Bahrain']\n    last_race_year TEXT, -- example: [2024, 2017, 2021]\n    number_of_races TEXT, -- example: [27, 19, 21]\n);\n\nCREATE TABLE constructors_ext (\n    constructor_id INT, -- example: [1, 2, 3]\n    name TEXT, -- example: ['McLaren', 'BMW Sauber', 'Williams']\n    nationality TEXT, -- example: ['British', 'German', 'French']\n\nCREATE TABLE drivers_ext (\n    driver_id INT, -- example: [1, 2, 3]\n    driver_ref TEXT, -- example: ['driver']\n    forename TEXT, -- example: ['Lewis', 'Nick', 'Nico']\n    surname TEXT, -- example: ['Driver']\n    nationality TEXT, -- example: ['British', 'German', 'Spanish']\n\nCREATE TABLE driver_standings_ext (\n    driver_standings_id INT, -- example: [1, 2, 3]\n    race_id INT, -- example: [18, 19, 20]\n    driver_id INT, -- example: [1, 2, 3]\n    points REAL, -- example: [10.0, 8.0, 6.0]\n    wins INT, -- example: [1, 0, 2]\n);\n\nCREATE TABLE lap_times_ext (\n    race_id INT, -- example: [1, 2, 3]\n    driver_id INT, -- example: [1, 2, 3]\n    seconds REAL, -- example: [109.088, 93.74, 91.6]\n\nCREATE TABLE lap_time_stats (\n    race_id INT, -- example: [1, 2, 3]\n    driver_id INT, -- example: [1, 2, 3]\n    avg_seconds TEXT, -- example: [97.56375862068965, 97.63567241379309, 97.61217241379309]\n\nCREATE TABLE races_ext (\n    race_id INT, -- example: [1, 2, 3]\n    `year` INT, -- example: [2009, 2008, 2007]\n    round INT, -- example: [1, 2, 3]\n    name TEXT, -- example: ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix']\n\nCREATE TABLE team_driver_ranks (\n    `year` INT, -- example: [1950, 1951, 1952]\n    constructor_id INT, -- example: [6, 51, 87]\n    driver_id INT, -- example: [647, 687, 802]\n    driver_ref TEXT, -- example: ['driver']\n    team_driver_rank TEXT, -- example: [1, 2, 3]\n);\n\nCREATE TABLE drives (\n    `year` INT, -- example: [1950, 1951, 1952]\n    driver_id INT, -- example: [427, 498, 501]\n    constructor_id INT, -- example: [141, 105, 87]\n    first_round INT, -- example: [2, 4, 3]\n    last_round INT, -- example: [7, 6, 2]\n    is_final_drive_of_season TEXT, -- example: [1, 0]\n);\n\nCREATE TABLE retirements (\n    race_id INT, -- example: [18, 19, 20]\n    driver_id INT, -- example: [7, 8, 9]\n\nCREATE TABLE lap_positions (\n    race_id INT, -- example: [1, 2, 3]\n    driver_id INT, -- example: [1, 2, 3]\n    lap_type TEXT, -- example: ['Race']\n);",
        "question": "Calculate the average first and last rounds of races missed by drivers each year. Only include drivers who missed fewer than three races annually and who switched teams between the race immediately before their first missed race and the race immediately after their last missed race.",
        "instance_id": "local355",
        "db_id": "f1"
    },
    {
        "db_desc": "CREATE TABLE circuits (\n    name VARCHAR(255), -- example: ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit']\n    country VARCHAR(255), -- example: ['Australia', 'Malaysia', 'Bahrain']\n    PRIMARY KEY (circuit_id)\n);\n\nCREATE TABLE constructor_results (\n    race_id INT(11), -- example: [18, 19, 20]\n    points FLOAT, -- example: [14.0, 8.0, 9.0]\n    PRIMARY KEY (constructor_results_id)\n);\n\nCREATE TABLE constructor_standings (\n    race_id INT(11), -- example: [18, 19, 20]\n    points FLOAT, -- example: [14.0, 8.0, 9.0]\n    `position` INT(11), -- example: [1, 3, 2]\n    position_text VARCHAR(255), -- example: ['1', '3', '2']\n    PRIMARY KEY (constructor_standings_id)\n);\n\nCREATE TABLE constructors (\n    name VARCHAR(255), -- example: ['McLaren', 'BMW Sauber', 'Williams']\n    nationality VARCHAR(255), -- example: ['British', 'German', 'French']\n    PRIMARY KEY (constructor_id)\n);\n\nCREATE TABLE driver_standings (\n    race_id INT(11), -- example: [18, 19, 20]\n    driver_id INT(11), -- example: [1, 2, 3]\n    points FLOAT, -- example: [10.0, 8.0, 6.0]\n    `position` INT(11), -- example: [1, 2, 3]\n    position_text VARCHAR(255), -- example: ['1', '2', '3']\n    PRIMARY KEY (driver_standings_id)\n);\n\nCREATE TABLE drivers (\n    driver_id INT(11), -- example: [1, 2, 3]\n    driver_ref VARCHAR(255), -- example: ['driver']\n    forename VARCHAR(255), -- example: ['Lewis', 'Nick', 'Nico']\n    surname VARCHAR(255), -- example: ['Driver']\n    nationality VARCHAR(255), -- example: ['British', 'German', 'Spanish']\n    PRIMARY KEY (driver_id)\n);\n\nCREATE TABLE lap_times (\n    race_id INT(11), -- example: [1, 2, 3]\n    driver_id INT(11), -- example: [1, 2, 3]\n    lap INT(11), -- example: [1, 2, 3]\n    `position` INT(11), -- example: [1, 3, 4]\n    `time` VARCHAR(255), -- example: ['1:38.109', '1:33.006', '1:32.713']\n    PRIMARY KEY (race_id)\n);\n\nCREATE TABLE pit_stops (\n    race_id INT(11), -- example: [841, 842, 843]\n    driver_id INT(11), -- example: [1, 2, 3]\n    stop INT(11), -- example: [1, 2, 3]\n    lap INT(11), -- example: [1, 11, 12]\n    `time` TIME, -- example: ['17:05:23', '17:05:52', '17:20:48']\n    PRIMARY KEY (race_id)\n);\n\nCREATE TABLE qualifying (\n    race_id INT(11), -- example: [18, 19, 20]\n    driver_id INT(11), -- example: [1, 9, 5]\n    `position` INT(11), -- example: [1, 2, 3]\n    PRIMARY KEY (qualify_id)\n);\n\nCREATE TABLE races (\n    race_id INT(11), -- example: [1, 2, 3]\n    round INT(11), -- example: [1, 2, 3]\n    name VARCHAR(255), -- example: ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix']\n    `time` TIME, -- example: ['06:00:00', '09:00:00', '07:00:00']\n    sprint_time VARCHAR(255), -- example: ['14:30:00', '19:30:00', '13:30:00']\n    PRIMARY KEY (race_id)\n);\n\nCREATE TABLE results (\n    race_id INT(11), -- example: [18, 19, 20]\n    driver_id INT(11), -- example: [1, 2, 3]\n    `position` INT(11), -- example: [1, 2, 3]\n    position_text VARCHAR(255), -- example: ['1', '2', '3']\n    position_order INT(11), -- example: [1, 2, 3]\n    points FLOAT, -- example: [10.0, 8.0, 6.0]\n    laps INT(11), -- example: [58, 57, 55]\n    `time` VARCHAR(255), -- example: ['1:34:50.616', '+5.478', '+8.163']\n    fastest_lap INT(11), -- example: [39, 41, 58]\n    rank INT(11), -- example: [2, 3, 5]\n    fastest_lap_time VARCHAR(255), -- example: ['1:27.452', '1:27.739', '1:28.090']\n    fastest_lap_speed VARCHAR(255), -- example: ['218.300', '217.586', '216.719']\n    PRIMARY KEY (result_id)\n);\n\nCREATE TABLE seasons (\n    PRIMARY KEY (`year`)\n);\n\nCREATE TABLE status (\n    status VARCHAR(255), -- example: ['Retired', '+2 Laps']\n    PRIMARY KEY (status_id)\n);\n\nCREATE TABLE sprint_results (\n    race_id INT(11), -- example: [1061, 1065, 1071]\n    driver_id INT(11), -- example: [830, 1, 822]\n    `position` INT(11), -- example: [1, 2, 3]\n    position_text VARCHAR(255), -- example: ['1', '2', '3']\n    position_order INT(11), -- example: [1, 2, 3]\n    points FLOAT, -- example: [3.0, 2.0, 1.0]\n    laps INT(11), -- example: [17, 16, 18]\n    `time` VARCHAR(255), -- example: ['25:38.426', '+1.430', '+7.502']\n    fastest_lap INT(11), -- example: [14, 17, 16]\n    fastest_lap_time VARCHAR(255), -- example: ['1:30.013', '1:29.937', '1:29.958']\n    fastest_lap_speed VARCHAR(255),\n    PRIMARY KEY (result_id)\n);\n\nCREATE TABLE short_grand_prix_names (\n    full_name VARCHAR(255), -- example: ['70th Anniversary Grand Prix', 'Abu Dhabi Grand Prix', 'Australian Grand Prix']\n    short_name VARCHAR(255), -- example: ['Australia', 'Malaysia', 'China']\n    PRIMARY KEY (full_name)\n);\n\nCREATE TABLE short_constructor_names (\n    short_name VARCHAR(255), -- example: ['Alpha Tauri', 'Alpine', 'Brabham']\n    PRIMARY KEY (constructor_ref)\n);\n\nCREATE TABLE liveries (\n    start_year INT(11), -- example: [2019, 2020, 2021]\n    PRIMARY KEY (constructor_ref)\n);\n\nCREATE TABLE tdr_overrides (\n    driver_ref VARCHAR(255), -- example: ['matta', 'panis', 'trulli']\n    team_driver_rank INT(11), -- example: [1, 2, 3]\n    PRIMARY KEY (`year`)\n);\n\nCREATE TABLE circuits_ext (\n    name TEXT, -- example: ['Albert Park Grand Prix Circuit', 'Sepang International Circuit', 'Bahrain International Circuit']\n    country TEXT, -- example: ['Australia', 'Malaysia', 'Bahrain']\n    last_race_year TEXT, -- example: [2024, 2017, 2021]\n    number_of_races TEXT, -- example: [27, 19, 21]\n);\n\nCREATE TABLE constructors_ext (\n    name TEXT, -- example: ['McLaren', 'BMW Sauber', 'Williams']\n    nationality TEXT, -- example: ['British', 'German', 'French']\n    short_name TEXT, -- example: ['McLaren', 'BMW Sauber', 'Williams']\n);\n\nCREATE TABLE drivers_ext (\n    driver_id INT, -- example: [1, 2, 3]\n    driver_ref TEXT, -- example: ['driver']\n    forename TEXT, -- example: ['Lewis', 'Nick', 'Nico']\n    surname TEXT, -- example: ['Driver']\n    full_name TEXT, -- example: ['Lewis Hamilton', 'Nick Heidfeld', 'Nico Rosberg']\n    nationality TEXT, -- example: ['British', 'German', 'Spanish']\n\nCREATE TABLE driver_standings_ext (\n    race_id INT, -- example: [18, 19, 20]\n    driver_id INT, -- example: [1, 2, 3]\n    points REAL, -- example: [10.0, 8.0, 6.0]\n    `position` INT, -- example: [1, 2, 3]\n    position_text TEXT, -- example: ['1', '2', '3']\n\nCREATE TABLE lap_times_ext (\n    race_id INT, -- example: [1, 2, 3]\n    driver_id INT, -- example: [1, 2, 3]\n    lap INT, -- example: [1, 2, 3]\n    `position` INT, -- example: [13, 12, 11]\n    `time` TEXT, -- example: ['1:49.088', '1:33.740', '1:31.600']\n\nCREATE TABLE lap_time_stats (\n    race_id INT, -- example: [1, 2, 3]\n    driver_id INT, -- example: [1, 2, 3]\n\nCREATE TABLE races_ext (\n    race_id INT, -- example: [1, 2, 3]\n    round INT, -- example: [1, 2, 3]\n    name TEXT, -- example: ['Australian Grand Prix', 'Malaysian Grand Prix', 'Chinese Grand Prix']\n    `time` NUM, -- example: ['06:00:00', '09:00:00', '07:00:00']\n    sprint_time TEXT, -- example: ['14:30:00', '19:30:00', '13:30:00']\n    is_pit_data_available TEXT, -- example: [0, 1]\n    short_name TEXT, -- example: ['Australia', 'Malaysia', 'China']\n\nCREATE TABLE team_driver_ranks (\n    driver_id INT, -- example: [647, 687, 802]\n    driver_ref TEXT, -- example: ['driver']\n    team_driver_rank TEXT, -- example: [1, 2, 3]\n);\n\nCREATE TABLE drives (\n    driver_id INT, -- example: [427, 498, 501]\n\nCREATE TABLE retirements (\n    race_id INT, -- example: [18, 19, 20]\n    driver_id INT, -- example: [7, 8, 9]\n    lap TEXT, -- example: [56, 54, 48]\n    position_order INT, -- example: [7, 8, 9]\n    retirement_type TEXT, -- example: ['Retirement (Mechanical Problem)', 'Retirement (Disqualification)']\n);\n\nCREATE TABLE lap_positions (\n    race_id INT, -- example: [1, 2, 3]\n    driver_id INT, -- example: [1, 2, 3]\n    lap INT, -- example: [0, 1, 2]\n    `position` INT, -- example: [18, 13, 12]\n    lap_type TEXT, -- example: ['Retirement (Mechanical Problem)', 'Retirement (Disqualification)', 'Race']\n);",
        "question": "Provide the full names of drivers who have been overtaken on track more times than they have overtaken others on track during race laps, excluding position changes due to pit stops, retirements, or movements at the start of the race.",
        "instance_id": "local356",
        "db_id": "f1"
    },
    {
        "db_desc": "CREATE TABLE player (\n    player_id INTEGER, -- example: [1, 2, 3]\n    player_name TEXT, -- example: ['SC Ganguly', 'BB McCullum', 'RT Ponting']\n    batting_hand TEXT, -- example: ['Left-hand bat', 'Right-hand bat']\n    country_name TEXT, -- example: ['India', 'New Zealand', 'Australia']\n    PRIMARY KEY (player_id)\n);\n\nCREATE TABLE team (\n    name TEXT, -- example: ['Royal Challengers Bangalore', 'Chennai Super Kings', 'Kings XI Punjab']\n    PRIMARY KEY (team_id)\n);\n\nCREATE TABLE `match` (\n    match_id INTEGER, -- example: [335987, 335988, 335989]\n    match_date DATE, -- example: ['2008-04-18', '2008-04-19', '2008-04-20']\n    win_type TEXT, -- example: ['runs']\n    match_winner INTEGER, -- example: [1, 3, 6]\n    man_of_the_match INTEGER, -- example: [2, 19, 90]\n    PRIMARY KEY (match_id)\n);\n\nCREATE TABLE player_match (\n    match_id INTEGER, -- example: [335987, 335988, 335989]\n    player_id INTEGER, -- example: [1, 2, 3]\n    PRIMARY KEY (match_id)\n);\n\nCREATE TABLE ball_by_ball (\n    match_id INTEGER, -- example: [335987, 335988, 335989]\n    team_batting INTEGER, -- example: [2, 1, 3]\n    striker_batting_position INTEGER, -- example: [1, 2, 3]\n    striker INTEGER, -- example: [6, 2, 7]\n    non_striker INTEGER, -- example: [7, 1, 6]\n    PRIMARY KEY (match_id)\n);\n\nCREATE TABLE batsman_scored (\n    match_id INTEGER, -- example: [335987, 335988, 335989]\n    runs_scored INTEGER, -- example: [1, 0, 4]\n    PRIMARY KEY (match_id)\n);\n\nCREATE TABLE wicket_taken (\n    match_id INTEGER, -- example: [335987, 335988, 335989]\n    PRIMARY KEY (match_id)\n);\n\nCREATE TABLE extra_runs (\n    match_id INTEGER, -- example: [335987, 335988, 335989]\n    extra_runs INTEGER, -- example: [1, 4, 2]\n    PRIMARY KEY (match_id)\n);",
        "question": "Could you calculate the average of the total runs scored by all strikers who have scored more than 50 runs in any single match?",
        "instance_id": "local021",
        "db_id": "IPL"
    },
    {
        "db_desc": "CREATE TABLE player (\n    player_id INTEGER, -- example: [1, 2, 3]\n    player_name TEXT, -- example: ['SC Ganguly', 'BB McCullum', 'RT Ponting']\n    country_name TEXT, -- example: ['India', 'New Zealand', 'Australia']\n    PRIMARY KEY (player_id)\n);\n\nCREATE TABLE team (\n    team_id INTEGER, -- example: [2, 3, 4]\n    name TEXT, -- example: ['Royal Challengers Bangalore', 'Chennai Super Kings', 'Kings XI Punjab']\n    PRIMARY KEY (team_id)\n);\n\nCREATE TABLE `match` (\n    match_id INTEGER, -- example: [335987, 335988, 335989]\n    team_1 INTEGER, -- example: [2, 4, 6]\n    team_2 INTEGER, -- example: [1, 3, 5]\n    match_date DATE, -- example: ['2008-04-18', '2008-04-19', '2008-04-20']\n    win_type TEXT, -- example: ['runs']\n    match_winner INTEGER, -- example: [1, 3, 6]\n    man_of_the_match INTEGER, -- example: [2, 19, 90]\n    PRIMARY KEY (match_id)\n);\n\nCREATE TABLE player_match (\n    match_id INTEGER, -- example: [335987, 335988, 335989]\n    player_id INTEGER, -- example: [1, 2, 3]\n    `role` TEXT, -- example: ['Player']\n    team_id INTEGER, -- example: [7, 1, 11]\n    PRIMARY KEY (match_id)\n);\n\nCREATE TABLE ball_by_ball (\n    match_id INTEGER, -- example: [335987, 335988, 335989]\n    innings_no INTEGER, -- example: [2, 1]\n    team_batting INTEGER, -- example: [2, 1, 3]\n    team_bowling INTEGER, -- example: [1, 2, 4]\n    striker INTEGER, -- example: [6, 2, 7]\n    PRIMARY KEY (match_id)\n);\n\nCREATE TABLE batsman_scored (\n    match_id INTEGER, -- example: [335987, 335988, 335989]\n    runs_scored INTEGER, -- example: [1, 0, 4]\n    innings_no INTEGER, -- example: [2, 1]\n    PRIMARY KEY (match_id)\n);\n\nCREATE TABLE wicket_taken (\n    match_id INTEGER, -- example: [335987, 335988, 335989]\n    player_out INTEGER, -- example: [154, 46, 8]\n    innings_no INTEGER, -- example: [2, 1]\n    PRIMARY KEY (match_id)\n);\n\nCREATE TABLE extra_runs (\n    match_id INTEGER, -- example: [335987, 335988, 335989]\n    extra_runs INTEGER, -- example: [1, 4, 2]\n    innings_no INTEGER, -- example: [1, 2]\n    PRIMARY KEY (match_id)\n);",
        "question": "Retrieve the names of players who scored no less than 100 runs in a match while playing for the team that lost that match.",
        "instance_id": "local022",
        "db_id": "IPL"
    },
    {
        "db_desc": "CREATE TABLE player (\n    player_id INTEGER, -- example: [1, 2, 3]\n    player_name TEXT, -- example: ['SC Ganguly', 'BB McCullum', 'RT Ponting']\n    batting_hand TEXT, -- example: ['Left-hand bat', 'Right-hand bat']\n    country_name TEXT, -- example: ['India', 'New Zealand', 'Australia']\n    PRIMARY KEY (player_id)\n);\n\nCREATE TABLE team (\n    name TEXT, -- example: ['Royal Challengers Bangalore', 'Chennai Super Kings', 'Kings XI Punjab']\n    PRIMARY KEY (team_id)\n);\n\nCREATE TABLE `match` (\n    match_id INTEGER, -- example: [335987, 335988, 335989]\n    match_date DATE, -- example: ['2008-04-18', '2008-04-19', '2008-04-20']\n    season_id INTEGER, -- example: [1, 2, 3]\n    match_winner INTEGER, -- example: [1, 3, 6]\n    man_of_the_match INTEGER, -- example: [2, 19, 90]\n    PRIMARY KEY (match_id)\n);\n\nCREATE TABLE player_match (\n    match_id INTEGER, -- example: [335987, 335988, 335989]\n    player_id INTEGER, -- example: [1, 2, 3]\n    `role` TEXT, -- example: ['Player']\n    PRIMARY KEY (match_id)\n);\n\nCREATE TABLE ball_by_ball (\n    match_id INTEGER, -- example: [335987, 335988, 335989]\n    team_batting INTEGER, -- example: [2, 1, 3]\n    team_bowling INTEGER, -- example: [1, 2, 4]\n    striker_batting_position INTEGER, -- example: [1, 2, 3]\n    PRIMARY KEY (match_id)\n);\n\nCREATE TABLE batsman_scored (\n    match_id INTEGER, -- example: [335987, 335988, 335989]\n    runs_scored INTEGER, -- example: [1, 0, 4]\n    PRIMARY KEY (match_id)\n);\n\nCREATE TABLE wicket_taken (\n    match_id INTEGER, -- example: [335987, 335988, 335989]\n    player_out INTEGER, -- example: [154, 46, 8]\n    PRIMARY KEY (match_id)\n);\n\nCREATE TABLE extra_runs (\n    match_id INTEGER, -- example: [335987, 335988, 335989]\n    extra_runs INTEGER, -- example: [1, 4, 2]\n    PRIMARY KEY (match_id)\n);",
        "question": "Please help me find the names of top 5 players with the highest average runs per match in season 5, along with their batting averages.",
        "instance_id": "local023",
        "db_id": "IPL"
    },
    {
        "db_desc": "CREATE TABLE player (\n    player_id INTEGER, -- example: [1, 2, 3]\n    player_name TEXT, -- example: ['SC Ganguly', 'BB McCullum', 'RT Ponting']\n    batting_hand TEXT, -- example: ['Left-hand bat', 'Right-hand bat']\n    country_name TEXT, -- example: ['India', 'New Zealand', 'Australia']\n    PRIMARY KEY (player_id)\n);\n\nCREATE TABLE team (\n    name TEXT, -- example: ['Royal Challengers Bangalore', 'Chennai Super Kings', 'Kings XI Punjab']\n    PRIMARY KEY (team_id)\n);\n\nCREATE TABLE `match` (\n    match_id INTEGER, -- example: [335987, 335988, 335989]\n    team_1 INTEGER, -- example: [2, 4, 6]\n    match_date DATE, -- example: ['2008-04-18', '2008-04-19', '2008-04-20']\n    season_id INTEGER, -- example: [1, 2, 3]\n    venue TEXT, -- example: ['M Chinnaswamy Stadium', 'Punjab Cricket Association Stadium Mohal', 'Feroz Shah Kotla']\n    outcome_type TEXT, -- example: ['Result']\n    match_winner INTEGER, -- example: [1, 3, 6]\n    man_of_the_match INTEGER, -- example: [2, 19, 90]\n    PRIMARY KEY (match_id)\n);\n\nCREATE TABLE player_match (\n    match_id INTEGER, -- example: [335987, 335988, 335989]\n    player_id INTEGER, -- example: [1, 2, 3]\n    `role` TEXT, -- example: ['Player']\n    PRIMARY KEY (match_id)\n);\n\nCREATE TABLE ball_by_ball (\n    match_id INTEGER, -- example: [335987, 335988, 335989]\n    over_id INTEGER, -- example: [1, 2, 3]\n    team_batting INTEGER, -- example: [2, 1, 3]\n    striker_batting_position INTEGER, -- example: [1, 2, 3]\n    striker INTEGER, -- example: [6, 2, 7]\n    PRIMARY KEY (match_id)\n);\n\nCREATE TABLE batsman_scored (\n    match_id INTEGER, -- example: [335987, 335988, 335989]\n    over_id INTEGER, -- example: [1, 2, 3]\n    runs_scored INTEGER, -- example: [1, 0, 4]\n    PRIMARY KEY (match_id)\n);\n\nCREATE TABLE wicket_taken (\n    match_id INTEGER, -- example: [335987, 335988, 335989]\n    over_id INTEGER, -- example: [2, 3, 5]\n    player_out INTEGER, -- example: [154, 46, 8]\n    PRIMARY KEY (match_id)\n);\n\nCREATE TABLE extra_runs (\n    match_id INTEGER, -- example: [335987, 335988, 335989]\n    over_id INTEGER, -- example: [1, 2, 3]\n    extra_runs INTEGER, -- example: [1, 4, 2]\n    PRIMARY KEY (match_id)\n);",
        "question": "Can you help me find the top 5 countries whose players have the highest average of their individual average runs per match across all seasons? Specifically, for each player, calculate their average runs per match over all matches they played, then compute the average of these player averages for each country, and include these country batting averages in the result.",
        "instance_id": "local024",
        "db_id": "IPL"
    },
    {
        "db_desc": "CREATE TABLE player (\n    batting_hand TEXT, -- example: ['Left-hand bat', 'Right-hand bat']\n    bowling_skill TEXT, -- example: ['Right-arm medium', 'Right-arm offbreak', 'Right-arm fast-medium']\n    PRIMARY KEY (player_id)\n);\n\nCREATE TABLE team (\n    PRIMARY KEY (team_id)\n);\n\nCREATE TABLE `match` (\n    match_id INTEGER, -- example: [335987, 335988, 335989]\n    match_date DATE, -- example: ['2008-04-18', '2008-04-19', '2008-04-20']\n    win_type TEXT, -- example: ['runs']\n    match_winner INTEGER, -- example: [1, 3, 6]\n    man_of_the_match INTEGER, -- example: [2, 19, 90]\n    PRIMARY KEY (match_id)\n);\n\nCREATE TABLE player_match (\n    match_id INTEGER, -- example: [335987, 335988, 335989]\n    PRIMARY KEY (match_id)\n);\n\nCREATE TABLE ball_by_ball (\n    match_id INTEGER, -- example: [335987, 335988, 335989]\n    over_id INTEGER, -- example: [1, 2, 3]\n    ball_id INTEGER, -- example: [1, 2, 3]\n    innings_no INTEGER, -- example: [2, 1]\n    team_batting INTEGER, -- example: [2, 1, 3]\n    team_bowling INTEGER, -- example: [1, 2, 4]\n    striker_batting_position INTEGER, -- example: [1, 2, 3]\n    striker INTEGER, -- example: [6, 2, 7]\n    bowler INTEGER, -- example: [106, 14, 15]\n    PRIMARY KEY (match_id)\n);\n\nCREATE TABLE batsman_scored (\n    match_id INTEGER, -- example: [335987, 335988, 335989]\n    over_id INTEGER, -- example: [1, 2, 3]\n    ball_id INTEGER, -- example: [1, 2, 3]\n    runs_scored INTEGER, -- example: [1, 0, 4]\n    innings_no INTEGER, -- example: [2, 1]\n    PRIMARY KEY (match_id)\n);\n\nCREATE TABLE wicket_taken (\n    match_id INTEGER, -- example: [335987, 335988, 335989]\n    over_id INTEGER, -- example: [2, 3, 5]\n    ball_id INTEGER, -- example: [1, 2, 5]\n    player_out INTEGER, -- example: [154, 46, 8]\n    kind_out TEXT, -- example: ['bowled']\n    innings_no INTEGER, -- example: [2, 1]\n    PRIMARY KEY (match_id)\n);\n\nCREATE TABLE extra_runs (\n    match_id INTEGER, -- example: [335987, 335988, 335989]\n    over_id INTEGER, -- example: [1, 2, 3]\n    ball_id INTEGER, -- example: [1, 2, 3]\n    extra_type TEXT, -- example: ['legbyes', 'wides', 'byes']\n    extra_runs INTEGER, -- example: [1, 4, 2]\n    innings_no INTEGER, -- example: [1, 2]\n    PRIMARY KEY (match_id)\n);",
        "question": "For each match, considering every innings, please combine runs from both batsman scored and extra runs for each over, then identify the single over with the highest total runs, retrieve the bowler for that over from the ball by ball table, and calculate the average of these highest over totals across all matches, ensuring that all runs and bowler details are accurately reflected.",
        "instance_id": "local025",
        "db_id": "IPL"
    },
    {
        "db_desc": "CREATE TABLE olist_customers (\n    \n\nCREATE TABLE olist_sellers (\n    \n\nCREATE TABLE olist_order_reviews (\n    order_id TEXT, -- example: ['73fc7af87114b39712e6da79b0a377eb', 'a548910a1c6147796b98fdf73dbeba33', 'f9e4b658b201a9f2ecdecbb34bed034b']\n\nCREATE TABLE olist_order_items (\n    order_id TEXT, -- example: ['00010242fe8c5a6d1ba2dd792cb16214', '00018f77f2f0320c557190d7a144bdd3', '000229ec398224ef6ca0657da4fc703e']\n    order_item_id BIGINT, -- example: [1, 2, 3]\n\nCREATE TABLE olist_products (\n    \n\nCREATE TABLE olist_geolocation (\n    \n\nCREATE TABLE product_category_name_translation (\n    \n\nCREATE TABLE olist_orders (\n    order_id TEXT, -- example: ['e481f51cbdc54678b7cc49136f2d6af7', '53cdb2fc8bc7dce0b6741e2150273451', '47770eb9100c2d0c44946d9cf07ec65d']\n    order_status TEXT, -- example: ['delivered']\n    order_purchase_timestamp TEXT, -- example: ['2017-10-02 10:56:33', '2018-07-24 20:41:37', '2018-08-08 08:38:49']\n    order_approved_at TEXT, -- example: ['2017-10-02 11:07:15', '2018-07-26 03:24:27', '2018-08-08 08:55:23']\n    order_delivered_carrier_date TEXT, -- example: ['2017-10-04 19:55:00', '2018-07-26 14:31:00', '2018-08-08 13:50:00']\n    order_delivered_customer_date TEXT, -- example: ['2017-10-10 21:25:13', '2018-08-07 15:27:45', '2018-08-17 18:06:29']\n    order_estimated_delivery_date TEXT, -- example: ['2017-10-18 00:00:00', '2018-08-13 00:00:00', '2018-09-04 00:00:00']\n);\n\nCREATE TABLE olist_order_payments (\n    order_id TEXT, -- example: ['b81ef226f3fe1789b1e8b2acac839d17', 'a9810da82917af2d9aefd1278f1dcfa0', '25e8ea4e93396b6fa0d3dd708e76c1bd']\n\nCREATE TABLE olist_products_dataset (\n    ",
        "question": "Could you generate a report that shows the number of delivered orders for each month in the years 2016, 2017, and 2018? Each column represents a year, and each row represents a month",
        "instance_id": "local028",
        "db_id": "Brazilian_E_Commerce"
    },
    {
        "db_desc": "CREATE TABLE olist_customers (\n    \n\nCREATE TABLE olist_sellers (\n    \n\nCREATE TABLE olist_order_reviews (\n    order_id TEXT, -- example: ['73fc7af87114b39712e6da79b0a377eb', 'a548910a1c6147796b98fdf73dbeba33', 'f9e4b658b201a9f2ecdecbb34bed034b']\n\nCREATE TABLE olist_order_items (\n    order_id TEXT, -- example: ['00010242fe8c5a6d1ba2dd792cb16214', '00018f77f2f0320c557190d7a144bdd3', '000229ec398224ef6ca0657da4fc703e']\n    order_item_id BIGINT, -- example: [1, 2, 3]\n\nCREATE TABLE olist_products (\n    \n\nCREATE TABLE olist_geolocation (\n    \n\nCREATE TABLE product_category_name_translation (\n    \n\nCREATE TABLE olist_orders (\n    order_id TEXT, -- example: ['e481f51cbdc54678b7cc49136f2d6af7', '53cdb2fc8bc7dce0b6741e2150273451', '47770eb9100c2d0c44946d9cf07ec65d']\n    order_status TEXT, -- example: ['delivered']\n    order_purchase_timestamp TEXT, -- example: ['2017-10-02 10:56:33', '2018-07-24 20:41:37', '2018-08-08 08:38:49']\n    order_approved_at TEXT, -- example: ['2017-10-02 11:07:15', '2018-07-26 03:24:27', '2018-08-08 08:55:23']\n    order_delivered_carrier_date TEXT, -- example: ['2017-10-04 19:55:00', '2018-07-26 14:31:00', '2018-08-08 13:50:00']\n    order_delivered_customer_date TEXT, -- example: ['2017-10-10 21:25:13', '2018-08-07 15:27:45', '2018-08-17 18:06:29']\n    order_estimated_delivery_date TEXT, -- example: ['2017-10-18 00:00:00', '2018-08-13 00:00:00', '2018-09-04 00:00:00']\n);\n\nCREATE TABLE olist_order_payments (\n    order_id TEXT, -- example: ['b81ef226f3fe1789b1e8b2acac839d17', 'a9810da82917af2d9aefd1278f1dcfa0', '25e8ea4e93396b6fa0d3dd708e76c1bd']\n\nCREATE TABLE olist_products_dataset (\n    ",
        "question": "What is the highest monthly delivered orders volume in the year with the lowest annual delivered orders volume among 2016, 2017, and 2018?",
        "instance_id": "local031",
        "db_id": "Brazilian_E_Commerce"
    },
    {
        "db_desc": "CREATE TABLE product_category_name_translation (\n    \n\nCREATE TABLE sellers (\n    \n\nCREATE TABLE customers (\n    customer_id TEXT, -- example: ['06b8999e2fba1a1fbc88172c00ba8bc7', '18955e83d337fd6b2def6b18a428ac77', '4e7b3e00288586ebd08712fdd0374a03']\n    customer_unique_id TEXT, -- example: ['861eff4711a542e4b93843c6dd7febb0', '290c77bc529b7ac935b93aa66c333dc3', '060e732b5b29e8181a18229c7b0b2b5e']\n    customer_zip_code_prefix INTEGER, -- example: [14409, 9790, 1151]\n    customer_city TEXT, -- example: ['sales']\n    customer_state TEXT, -- example: ['SP', 'SC', 'MG']\n);\n\nCREATE TABLE geolocation (\n    geolocation_city TEXT, -- example: ['sales']\n\nCREATE TABLE order_items (\n    order_id TEXT, -- example: ['00010242fe8c5a6d1ba2dd792cb16214', '00018f77f2f0320c557190d7a144bdd3', '000229ec398224ef6ca0657da4fc703e']\n    order_item_id INTEGER, -- example: [1, 2, 3]\n    price REAL, -- example: [58.9, 239.9, 199.0]\n    freight_value REAL, -- example: [13.29, 19.93, 17.87]\n);\n\nCREATE TABLE order_payments (\n    order_id TEXT, -- example: ['b81ef226f3fe1789b1e8b2acac839d17', 'a9810da82917af2d9aefd1278f1dcfa0', '25e8ea4e93396b6fa0d3dd708e76c1bd']\n\nCREATE TABLE order_reviews (\n    order_id TEXT, -- example: ['73fc7af87114b39712e6da79b0a377eb', 'a548910a1c6147796b98fdf73dbeba33', 'f9e4b658b201a9f2ecdecbb34bed034b']\n    review_answer_timestamp TEXT, -- example: ['2018-01-18 21:46:59', '2018-03-11 03:05:13', '2018-02-18 14:36:24']\n);\n\nCREATE TABLE orders (\n    order_id TEXT, -- example: ['e481f51cbdc54678b7cc49136f2d6af7', '53cdb2fc8bc7dce0b6741e2150273451', '47770eb9100c2d0c44946d9cf07ec65d']\n    customer_id TEXT, -- example: ['9ef432eb6251297304e76186b10a928d', 'b0830fb4747a6c6d20dea0b8c802d7ef', '41ce2a54c0b03bf3443c3d931a367089']\n    order_status TEXT, -- example: ['delivered']\n    order_purchase_timestamp TEXT, -- example: ['2017-10-02 10:56:33', '2018-07-24 20:41:37', '2018-08-08 08:38:49']\n    order_approved_at TEXT, -- example: ['2017-10-02 11:07:15', '2018-07-26 03:24:27', '2018-08-08 08:55:23']\n    order_delivered_carrier_date TEXT, -- example: ['2017-10-04 19:55:00', '2018-07-26 14:31:00', '2018-08-08 13:50:00']\n    order_delivered_customer_date TEXT, -- example: ['2017-10-10 21:25:13', '2018-08-07 15:27:45', '2018-08-17 18:06:29']\n    order_estimated_delivery_date TEXT, -- example: ['2017-10-18 00:00:00', '2018-08-13 00:00:00', '2018-09-04 00:00:00']\n);\n\nCREATE TABLE products (\n    \n\nCREATE TABLE leads_qualified (\n    \n\nCREATE TABLE leads_closed (\n    business_segment TEXT, -- example: ['other', 'pet', 'car_accessories', 'home_appliances']\n    average_stock TEXT, -- example: ['20-50', '1-5', '5-20']",
        "question": "According to the RFM definition document, calculate the average sales per order for each customer within distinct RFM segments, considering only 'delivered' orders. Use the customer unique identifier. Clearly define how to calculate Recency based on the latest purchase timestamp and specify the criteria for classifying RFM segments. The average sales should be computed as the total spend divided by the total number of orders. Please analyze and report the differences in average sales across the RFM segments",
        "instance_id": "local003",
        "db_id": "E_commerce"
    },
    {
        "db_desc": "CREATE TABLE olist_customers (\n    customer_id TEXT, -- example: ['06b8999e2fba1a1fbc88172c00ba8bc7', '18955e83d337fd6b2def6b18a428ac77', '4e7b3e00288586ebd08712fdd0374a03']\n    customer_unique_id TEXT, -- example: ['861eff4711a542e4b93843c6dd7febb0', '290c77bc529b7ac935b93aa66c333dc3', '060e732b5b29e8181a18229c7b0b2b5e']\n    customer_city TEXT, -- example: ['franca', 'sao bernardo do campo', 'sao paulo']\n    customer_state TEXT, -- example: ['SP', 'SC', 'MG']\n);\n\nCREATE TABLE olist_sellers (\n    seller_id TEXT, -- example: ['3442f8959a84dea7ee197c632cb2df15', 'd1b65fc7debc3361ea86b5f14c68d2e2', 'ce3ad9de960102d0677a81f5d0bb7b2d']\n    seller_city TEXT, -- example: ['campinas', 'mogi guacu', 'rio de janeiro']\n    seller_state TEXT, -- example: ['SP', 'RJ', 'PE']\n);\n\nCREATE TABLE olist_order_reviews (\n    order_id TEXT, -- example: ['73fc7af87114b39712e6da79b0a377eb', 'a548910a1c6147796b98fdf73dbeba33', 'f9e4b658b201a9f2ecdecbb34bed034b']\n\nCREATE TABLE olist_order_items (\n    order_id TEXT, -- example: ['00010242fe8c5a6d1ba2dd792cb16214', '00018f77f2f0320c557190d7a144bdd3', '000229ec398224ef6ca0657da4fc703e']\n    order_item_id BIGINT, -- example: [1, 2, 3]\n    product_id TEXT, -- example: ['4244733e06e7ecb4970a6e2683c13e61', 'e5f2d52b802189ee658865ca93d83a8f', 'c777355d18b72b67abbeef9df44fd0fd']\n    seller_id TEXT, -- example: ['48436dade18ac8b2bce089ec2a041202', 'dd7ddc04e1b6c2c614352b383efe2d36', '5b51032eddd242adc84c38acab88f23d']\n    price FLOAT, -- example: [58.9, 239.9, 199.0]\n    freight_value FLOAT, -- example: [13.29, 19.93, 17.87]\n);\n\nCREATE TABLE olist_products (\n    product_id TEXT, -- example: ['1e9e8ef04dbcff4541ed26657ea517e5', '3aa071139cb16b67ca9e5dea641aaa2f', '96bd76ec8810374ed1b65e291975717f']\n\nCREATE TABLE olist_geolocation (\n    \n\nCREATE TABLE product_category_name_translation (\n    \n\nCREATE TABLE olist_orders (\n    order_id TEXT, -- example: ['e481f51cbdc54678b7cc49136f2d6af7', '53cdb2fc8bc7dce0b6741e2150273451', '47770eb9100c2d0c44946d9cf07ec65d']\n    customer_id TEXT, -- example: ['9ef432eb6251297304e76186b10a928d', 'b0830fb4747a6c6d20dea0b8c802d7ef', '41ce2a54c0b03bf3443c3d931a367089']\n    order_status TEXT, -- example: ['delivered']\n    order_approved_at TEXT, -- example: ['2017-10-02 11:07:15', '2018-07-26 03:24:27', '2018-08-08 08:55:23']\n    order_delivered_carrier_date TEXT, -- example: ['2017-10-04 19:55:00', '2018-07-26 14:31:00', '2018-08-08 13:50:00']\n    order_delivered_customer_date TEXT, -- example: ['2017-10-10 21:25:13', '2018-08-07 15:27:45', '2018-08-17 18:06:29']\n    order_estimated_delivery_date TEXT, -- example: ['2017-10-18 00:00:00', '2018-08-13 00:00:00', '2018-09-04 00:00:00']\n);\n\nCREATE TABLE olist_order_payments (\n    order_id TEXT, -- example: ['b81ef226f3fe1789b1e8b2acac839d17', 'a9810da82917af2d9aefd1278f1dcfa0', '25e8ea4e93396b6fa0d3dd708e76c1bd']\n    payment_type TEXT, -- example: ['credit_card', 'boleto', 'voucher']\n    payment_installments BIGINT, -- example: [8, 1, 2]\n    payment_value FLOAT, -- example: [99.33, 24.39, 65.71]\n);\n\nCREATE TABLE olist_products_dataset (\n    product_id TEXT, -- example: ['1e9e8ef04dbcff4541ed26657ea517e5', '3aa071139cb16b67ca9e5dea641aaa2f', '96bd76ec8810374ed1b65e291975717f']",
        "question": "Please identify the top three customers, based on their customer_unique_id, who have the highest number of delivered orders, and provide the average payment value, city, and state for each of these customers.",
        "instance_id": "local029",
        "db_id": "Brazilian_E_Commerce"
    },
    {
        "db_desc": "CREATE TABLE olist_customers (\n    customer_city TEXT, -- example: ['franca', 'sao bernardo do campo', 'sao paulo']\n\nCREATE TABLE olist_sellers (\n    \n\nCREATE TABLE olist_order_reviews (\n    order_id TEXT, -- example: ['73fc7af87114b39712e6da79b0a377eb', 'a548910a1c6147796b98fdf73dbeba33', 'f9e4b658b201a9f2ecdecbb34bed034b']\n\nCREATE TABLE olist_order_items (\n    order_id TEXT, -- example: ['00010242fe8c5a6d1ba2dd792cb16214', '00018f77f2f0320c557190d7a144bdd3', '000229ec398224ef6ca0657da4fc703e']\n    order_item_id BIGINT, -- example: [1, 2, 3]\n    price FLOAT, -- example: [58.9, 239.9, 199.0]\n\nCREATE TABLE olist_products (\n    \n\nCREATE TABLE olist_geolocation (\n    \n\nCREATE TABLE product_category_name_translation (\n    \n\nCREATE TABLE olist_orders (\n    order_id TEXT, -- example: ['e481f51cbdc54678b7cc49136f2d6af7', '53cdb2fc8bc7dce0b6741e2150273451', '47770eb9100c2d0c44946d9cf07ec65d']\n    order_status TEXT, -- example: ['delivered']\n    order_approved_at TEXT, -- example: ['2017-10-02 11:07:15', '2018-07-26 03:24:27', '2018-08-08 08:55:23']\n    order_delivered_carrier_date TEXT, -- example: ['2017-10-04 19:55:00', '2018-07-26 14:31:00', '2018-08-08 13:50:00']\n    order_delivered_customer_date TEXT, -- example: ['2017-10-10 21:25:13', '2018-08-07 15:27:45', '2018-08-17 18:06:29']\n    order_estimated_delivery_date TEXT, -- example: ['2017-10-18 00:00:00', '2018-08-13 00:00:00', '2018-09-04 00:00:00']\n);\n\nCREATE TABLE olist_order_payments (\n    order_id TEXT, -- example: ['b81ef226f3fe1789b1e8b2acac839d17', 'a9810da82917af2d9aefd1278f1dcfa0', '25e8ea4e93396b6fa0d3dd708e76c1bd']\n    payment_sequential BIGINT, -- example: [1, 2, 4]\n    payment_type TEXT, -- example: ['credit_card', 'boleto', 'voucher']\n    payment_installments BIGINT, -- example: [8, 1, 2]\n    payment_value FLOAT, -- example: [99.33, 24.39, 65.71]\n);\n\nCREATE TABLE olist_products_dataset (\n    ",
        "question": "Among all cities with delivered orders, find the five cities whose summed payments are the lowest, then calculate the average of their total payments and the average of their total delivered order counts.",
        "instance_id": "local030",
        "db_id": "Brazilian_E_Commerce"
    },
    {
        "db_desc": "CREATE TABLE olist_customers (\n    customer_id TEXT, -- example: ['06b8999e2fba1a1fbc88172c00ba8bc7', '18955e83d337fd6b2def6b18a428ac77', '4e7b3e00288586ebd08712fdd0374a03']\n    customer_unique_id TEXT, -- example: ['861eff4711a542e4b93843c6dd7febb0', '290c77bc529b7ac935b93aa66c333dc3', '060e732b5b29e8181a18229c7b0b2b5e']\n    customer_city TEXT, -- example: ['sales']\n    customer_state TEXT, -- example: ['SP', 'SC', 'MG']\n);\n\nCREATE TABLE olist_sellers (\n    seller_id TEXT, -- example: ['3442f8959a84dea7ee197c632cb2df15', 'd1b65fc7debc3361ea86b5f14c68d2e2', 'ce3ad9de960102d0677a81f5d0bb7b2d']\n    seller_zip_code_prefix BIGINT, -- example: [13023, 13844, 20031]\n    seller_city TEXT, -- example: ['campinas', 'mogi guacu', 'rio de janeiro']\n    seller_state TEXT, -- example: ['SP', 'RJ', 'PE']\n);\n\nCREATE TABLE olist_order_reviews (\n    order_id TEXT, -- example: ['73fc7af87114b39712e6da79b0a377eb', 'a548910a1c6147796b98fdf73dbeba33', 'f9e4b658b201a9f2ecdecbb34bed034b']\n    review_score BIGINT, -- example: [4, 5, 1]\n\nCREATE TABLE olist_order_items (\n    order_id TEXT, -- example: ['00010242fe8c5a6d1ba2dd792cb16214', '00018f77f2f0320c557190d7a144bdd3', '000229ec398224ef6ca0657da4fc703e']\n    order_item_id BIGINT, -- example: [1, 2, 3]\n    seller_id TEXT, -- example: ['48436dade18ac8b2bce089ec2a041202', 'dd7ddc04e1b6c2c614352b383efe2d36', '5b51032eddd242adc84c38acab88f23d']\n    price FLOAT, -- example: [58.9, 239.9, 199.0]\n    freight_value FLOAT, -- example: [13.29, 19.93, 17.87]\n);\n\nCREATE TABLE olist_products (\n    \n\nCREATE TABLE olist_geolocation (\n    geolocation_city TEXT, -- example: ['sales']\n\nCREATE TABLE product_category_name_translation (\n    \n\nCREATE TABLE olist_orders (\n    order_id TEXT, -- example: ['e481f51cbdc54678b7cc49136f2d6af7', '53cdb2fc8bc7dce0b6741e2150273451', '47770eb9100c2d0c44946d9cf07ec65d']\n    customer_id TEXT, -- example: ['9ef432eb6251297304e76186b10a928d', 'b0830fb4747a6c6d20dea0b8c802d7ef', '41ce2a54c0b03bf3443c3d931a367089']\n    order_status TEXT, -- example: ['delivered']\n    order_approved_at TEXT, -- example: ['2017-10-02 11:07:15', '2018-07-26 03:24:27', '2018-08-08 08:55:23']\n    order_delivered_carrier_date TEXT, -- example: ['2017-10-04 19:55:00', '2018-07-26 14:31:00', '2018-08-08 13:50:00']\n    order_delivered_customer_date TEXT, -- example: ['2017-10-10 21:25:13', '2018-08-07 15:27:45', '2018-08-17 18:06:29']\n    order_estimated_delivery_date TEXT, -- example: ['2017-10-18 00:00:00', '2018-08-13 00:00:00', '2018-09-04 00:00:00']\n);\n\nCREATE TABLE olist_order_payments (\n    order_id TEXT, -- example: ['b81ef226f3fe1789b1e8b2acac839d17', 'a9810da82917af2d9aefd1278f1dcfa0', '25e8ea4e93396b6fa0d3dd708e76c1bd']\n\nCREATE TABLE olist_products_dataset (\n    ",
        "question": "Could you help me find the sellers respectively with the highest number of distinct customers, highest profit, highest number of distinct orders, and most 5-star ratings, in delivered orders, along with their corresponding values? ",
        "instance_id": "local032",
        "db_id": "Brazilian_E_Commerce"
    },
    {
        "db_desc": "CREATE TABLE olist_customers (\n    customer_city TEXT, -- example: ['franca', 'sao bernardo do campo', 'sao paulo']\n\nCREATE TABLE olist_sellers (\n    \n\nCREATE TABLE olist_order_reviews (\n    \n\nCREATE TABLE olist_order_items (\n    product_id TEXT, -- example: ['4244733e06e7ecb4970a6e2683c13e61', 'e5f2d52b802189ee658865ca93d83a8f', 'c777355d18b72b67abbeef9df44fd0fd']\n    price FLOAT, -- example: [58.9, 239.9, 199.0]\n\nCREATE TABLE olist_products (\n    product_id TEXT, -- example: ['1e9e8ef04dbcff4541ed26657ea517e5', '3aa071139cb16b67ca9e5dea641aaa2f', '96bd76ec8810374ed1b65e291975717f']\n    product_category_name TEXT, -- example: ['perfumaria', 'artes', 'esporte_lazer']\n    product_weight_g FLOAT, -- example: [225.0, 1000.0, 154.0]\n\nCREATE TABLE olist_geolocation (\n    \n\nCREATE TABLE product_category_name_translation (\n    product_category_name TEXT, -- example: ['beleza_saude', 'informatica_acessorios', 'automotivo']\n    product_category_name_english TEXT, -- example: ['health_beauty', 'computers_accessories', 'auto']\n);\n\nCREATE TABLE olist_orders (\n    \n\nCREATE TABLE olist_order_payments (\n    payment_sequential BIGINT, -- example: [1, 2, 4]\n    payment_type TEXT, -- example: ['credit_card', 'boleto', 'voucher']\n    payment_installments BIGINT, -- example: [8, 1, 2]\n    payment_value FLOAT, -- example: [99.33, 24.39, 65.71]\n);\n\nCREATE TABLE olist_products_dataset (\n    product_id TEXT, -- example: ['1e9e8ef04dbcff4541ed26657ea517e5', '3aa071139cb16b67ca9e5dea641aaa2f', '96bd76ec8810374ed1b65e291975717f']\n    product_category_name TEXT, -- example: ['perfumaria', 'artes', 'esporte_lazer']\n    product_weight_g FLOAT, -- example: [225.0, 1000.0, 154.0]",
        "question": "Could you help me calculate the average of the total number of payments made using the most preferred payment method for each product category, where the most preferred payment method in a category is the one with the highest number of payments?",
        "instance_id": "local034",
        "db_id": "Brazilian_E_Commerce"
    },
    {
        "db_desc": "CREATE TABLE olist_customers (\n    \n\nCREATE TABLE olist_sellers (\n    \n\nCREATE TABLE olist_order_reviews (\n    review_comment_title TEXT, -- example: ['top']\n    review_comment_message TEXT, -- example: ['top']\n\nCREATE TABLE olist_order_items (\n    price FLOAT, -- example: [58.9, 239.9, 199.0]\n\nCREATE TABLE olist_products (\n    product_category_name TEXT, -- example: ['perfumaria', 'artes', 'esporte_lazer']\n\nCREATE TABLE olist_geolocation (\n    \n\nCREATE TABLE product_category_name_translation (\n    product_category_name TEXT, -- example: ['beleza_saude', 'informatica_acessorios', 'automotivo']\n    product_category_name_english TEXT, -- example: ['health_beauty', 'computers_accessories', 'auto']\n);\n\nCREATE TABLE olist_orders (\n    \n\nCREATE TABLE olist_order_payments (\n    payment_sequential BIGINT, -- example: [1, 2, 4]\n    payment_type TEXT, -- example: ['credit_card', 'boleto', 'voucher']\n    payment_installments BIGINT, -- example: [8, 1, 2]\n    payment_value FLOAT, -- example: [99.33, 24.39, 65.71]\n);\n\nCREATE TABLE olist_products_dataset (\n    product_category_name TEXT, -- example: ['perfumaria', 'artes', 'esporte_lazer']",
        "question": "Identify the top three product categories whose most commonly used payment type has the highest number of payments across all categories, and specify the number of payments made in each category using that payment type.",
        "instance_id": "local037",
        "db_id": "Brazilian_E_Commerce"
    },
    {
        "db_desc": "CREATE TABLE olist_customers (\n    customer_zip_code_prefix BIGINT, -- example: [14409, 9790, 1151]\n    customer_city TEXT, -- example: ['franca', 'sao bernardo do campo', 'sao paulo']\n\nCREATE TABLE olist_sellers (\n    seller_zip_code_prefix BIGINT, -- example: [13023, 13844, 20031]\n\nCREATE TABLE olist_order_reviews (\n    order_id TEXT, -- example: ['73fc7af87114b39712e6da79b0a377eb', 'a548910a1c6147796b98fdf73dbeba33', 'f9e4b658b201a9f2ecdecbb34bed034b']\n\nCREATE TABLE olist_order_items (\n    order_id TEXT, -- example: ['00010242fe8c5a6d1ba2dd792cb16214', '00018f77f2f0320c557190d7a144bdd3', '000229ec398224ef6ca0657da4fc703e']\n    order_item_id BIGINT, -- example: [1, 2, 3]\n    product_id TEXT, -- example: ['4244733e06e7ecb4970a6e2683c13e61', 'e5f2d52b802189ee658865ca93d83a8f', 'c777355d18b72b67abbeef9df44fd0fd']\n\nCREATE TABLE olist_products (\n    product_id TEXT, -- example: ['1e9e8ef04dbcff4541ed26657ea517e5', '3aa071139cb16b67ca9e5dea641aaa2f', '96bd76ec8810374ed1b65e291975717f']\n\nCREATE TABLE olist_geolocation (\n    geolocation_zip_code_prefix BIGINT, -- example: [1037, 1046, 1041]\n    geolocation_lat FLOAT, -- example: [-23.54562128115268, -23.54608112703553, -23.54612896641469]\n    geolocation_lng FLOAT, -- example: [-46.63929204800168, -46.64482029837157, -46.64295148361138]\n    geolocation_city TEXT, -- example: ['sao paulo', 's\u00e3o paulo', 'sao bernardo do campo']\n    geolocation_state TEXT, -- example: ['SP', 'RN', 'AC']\n);\n\nCREATE TABLE product_category_name_translation (\n    \n\nCREATE TABLE olist_orders (\n    order_id TEXT, -- example: ['e481f51cbdc54678b7cc49136f2d6af7', '53cdb2fc8bc7dce0b6741e2150273451', '47770eb9100c2d0c44946d9cf07ec65d']\n    order_status TEXT, -- example: ['delivered', 'invoiced', 'shipped']\n    order_approved_at TEXT, -- example: ['2017-10-02 11:07:15', '2018-07-26 03:24:27', '2018-08-08 08:55:23']\n\nCREATE TABLE olist_order_payments (\n    order_id TEXT, -- example: ['b81ef226f3fe1789b1e8b2acac839d17', 'a9810da82917af2d9aefd1278f1dcfa0', '25e8ea4e93396b6fa0d3dd708e76c1bd']\n\nCREATE TABLE olist_products_dataset (\n    product_id TEXT, -- example: ['1e9e8ef04dbcff4541ed26657ea517e5', '3aa071139cb16b67ca9e5dea641aaa2f', '96bd76ec8810374ed1b65e291975717f']",
        "question": "In the \u201colist_geolocation\u201d table, please identify which two consecutive cities, when sorted by geolocation_state, geolocation_city, geolocation_zip_code_prefix, geolocation_lat, and geolocation_lng, have the greatest distance between them based on the difference in distance computed between each city and its immediate predecessor in that ordering.",
        "instance_id": "local035",
        "db_id": "Brazilian_E_Commerce"
    },
    {
        "db_desc": "CREATE TABLE actor (\n    actor_id numeric, -- example: [1, 2, 3]\n    first_name VARCHAR(45), -- example: ['PENELOPE', 'NICK', 'ED']\n    last_name VARCHAR(45), -- example: ['AKROYD', 'ALLEN', 'ASTAIRE']\n    PRIMARY KEY (actor_id)\n);\n\nCREATE TABLE country (\n    country_id SMALLINT, -- example: [1, 2, 3]\n    country VARCHAR(50), -- example: ['Afghanistan', 'Algeria', 'American Samoa']\n    PRIMARY KEY (country_id)\n);\n\nCREATE TABLE city (\n    city_id int, -- example: [1, 2, 3]\n    city VARCHAR(50), -- example: ['A Corua (La Corua)', 'Abha', 'Abu Dhabi']\n    country_id SMALLINT, -- example: [1, 2, 3]\n    PRIMARY KEY (city_id),\n    CONSTRAINT fk_city_country_id FOREIGN KEY (country_id) REFERENCES country (country_id)\n);\n\nCREATE TABLE address (\n    address_id int, -- example: [1, 2, 3]\n    address VARCHAR(50), -- example: ['47 MySakila Drive', '28 MySQL Boulevard', '23 Workhaven Lane']\n    address2 VARCHAR(50),\n    city_id INT, -- example: [1, 2, 3]\n    phone VARCHAR(20), -- example: [' ']\n    PRIMARY KEY (address_id),\n    CONSTRAINT fk_address_city_id FOREIGN KEY (city_id) REFERENCES city (city_id)\n);\n\nCREATE TABLE `language` (\n    language_id SMALLINT, -- example: [1, 2, 3]\n    name CHAR(20), -- example: ['English']\n    PRIMARY KEY (language_id)\n);\n\nCREATE TABLE category (\n    category_id SMALLINT, -- example: [1, 2, 3]\n    name VARCHAR(25), -- example: ['Children']\n    PRIMARY KEY (category_id)\n);\n\nCREATE TABLE customer (\n    customer_id INT, -- example: [1, 2, 3]\n    first_name VARCHAR(45), -- example: ['MARY', 'PATRICIA', 'LINDA']\n    last_name VARCHAR(45), -- example: ['ABNEY', 'ADAM', 'ADAMS']\n    address_id INT, -- example: [5, 6, 7]\n    active CHAR(1), -- example: ['1', '0']\n    create_date TIMESTAMP, -- example: ['2006-02-14 22:04:36.000', '2006-02-14 22:04:37.000']\n    PRIMARY KEY (customer_id),\n    CONSTRAINT fk_customer_store_id FOREIGN KEY (store_id) REFERENCES store (store_id),\n    CONSTRAINT fk_customer_address_id FOREIGN KEY (address_id) REFERENCES address (address_id)\n);\n\nCREATE TABLE film (\n    film_id int, -- example: [1, 2, 3]\n    release_year VARCHAR(4), -- example: ['2006']\n    language_id SMALLINT, -- example: [1]\n    original_language_id SMALLINT,\n    length SMALLINT, -- example: [86, 48, 50]\n    rating VARCHAR(10), -- example: ['PG', 'G']\n    PRIMARY KEY (film_id),\n    CONSTRAINT fk_film_language_id FOREIGN KEY (language_id) REFERENCES `language` (language_id),\n    CONSTRAINT fk_film_original_language_id FOREIGN KEY (original_language_id) REFERENCES `language` (language_id)\n);\n\nCREATE TABLE film_actor (\n    actor_id INT, -- example: [1, 2, 3]\n    film_id INT, -- example: [1, 2, 3]\n    PRIMARY KEY (actor_id),\n    CONSTRAINT fk_film_actor_actor_id FOREIGN KEY (actor_id) REFERENCES actor (actor_id),\n    CONSTRAINT fk_film_actor_film_id FOREIGN KEY (film_id) REFERENCES film (film_id)\n);\n\nCREATE TABLE film_category (\n    film_id INT, -- example: [1, 2, 3]\n    category_id SMALLINT, -- example: [1, 2, 3]\n    PRIMARY KEY (film_id),\n    CONSTRAINT fk_film_category_film_id FOREIGN KEY (film_id) REFERENCES film (film_id),\n    CONSTRAINT fk_film_category_category_id FOREIGN KEY (category_id) REFERENCES category (category_id)\n);\n\nCREATE TABLE film_text (\n    film_id SMALLINT,\n    title VARCHAR(255),\n    description BLOB SUB_TYPE TEXT,\n    PRIMARY KEY (film_id)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT, -- example: [1, 2, 3]\n    film_id INT, -- example: [1, 2, 3]\n    PRIMARY KEY (inventory_id),\n    CONSTRAINT fk_inventory_film_id FOREIGN KEY (film_id) REFERENCES film (film_id),\n    CONSTRAINT fk_inventory_store_id FOREIGN KEY (store_id) REFERENCES store (store_id)\n);\n\nCREATE TABLE staff (\n    staff_id SMALLINT, -- example: [1, 2]\n    first_name VARCHAR(45), -- example: ['Mike', 'Jon']\n    last_name VARCHAR(45), -- example: ['Hillyer', 'Stephens']\n    address_id INT, -- example: [3, 4]\n    picture BLOB,\n    active SMALLINT, -- example: [1]\n    username VARCHAR(16), -- example: ['Mike', 'Jon']\n    PRIMARY KEY (staff_id),\n    CONSTRAINT fk_staff_address_id FOREIGN KEY (address_id) REFERENCES address (address_id),\n    CONSTRAINT fk_staff_store_id FOREIGN KEY (store_id) REFERENCES store (store_id)\n);\n\nCREATE TABLE store (\n    manager_staff_id SMALLINT, -- example: [1, 2]\n    address_id INT, -- example: [1, 2]\n    PRIMARY KEY (store_id),\n    CONSTRAINT fk_store_manager_staff_id FOREIGN KEY (manager_staff_id) REFERENCES staff (staff_id),\n    CONSTRAINT fk_store_address_id FOREIGN KEY (address_id) REFERENCES address (address_id)\n);\n\nCREATE TABLE payment (\n    customer_id INT, -- example: [1, 2, 3]\n    staff_id SMALLINT, -- example: [1, 2]\n    amount DECIMAL(5,2), -- example: [2.99, 0.99, 5.99]\n    payment_date TIMESTAMP, -- example: ['2005-05-25 11:30:37.000', '2005-05-28 10:35:23.000', '2005-06-15 00:54:12.000']\n    PRIMARY KEY (payment_id),\n    CONSTRAINT fk_payment_customer_id FOREIGN KEY (customer_id) REFERENCES customer (customer_id),\n    CONSTRAINT fk_payment_staff_id FOREIGN KEY (staff_id) REFERENCES staff (staff_id),\n    CONSTRAINT fk_payment_rental_id FOREIGN KEY (rental_id) REFERENCES rental (rental_id)\n);\n\nCREATE TABLE rental (\n    rental_date TIMESTAMP, -- example: ['2005-05-24 22:53:30.000', '2005-05-24 22:54:33.000', '2005-05-24 23:03:39.000']\n    inventory_id INT, -- example: [1, 2, 3]\n    customer_id INT, -- example: [1, 2, 3]\n    return_date TIMESTAMP, -- example: ['2005-05-26 22:04:30.000', '2005-05-28 19:40:33.000', '2005-06-01 22:12:39.000']\n    staff_id SMALLINT, -- example: [1, 2]\n    PRIMARY KEY (rental_id),\n    CONSTRAINT fk_rental_inventory_id FOREIGN KEY (inventory_id) REFERENCES inventory (inventory_id),\n    CONSTRAINT fk_rental_customer_id FOREIGN KEY (customer_id) REFERENCES customer (customer_id),\n    CONSTRAINT fk_rental_staff_id FOREIGN KEY (staff_id) REFERENCES staff (staff_id)\n);",
        "question": "Could you help me determine which actor starred most frequently in English-language children's category films that were rated either G or PG, had a running time of 120 minutes or less, and were released between 2000 and 2010? Please provide the actor's full name.",
        "instance_id": "local038",
        "db_id": "Pagila"
    },
    {
        "db_desc": "CREATE TABLE actor (\n    actor_id numeric, -- example: [1, 2, 3]\n    first_name VARCHAR(45), -- example: ['PENELOPE', 'NICK', 'ED']\n    last_name VARCHAR(45), -- example: ['AKROYD', 'ALLEN', 'ASTAIRE']\n    PRIMARY KEY (actor_id)\n);\n\nCREATE TABLE country (\n    country_id SMALLINT, -- example: [1, 2, 3]\n    country VARCHAR(50), -- example: ['Afghanistan', 'Algeria', 'American Samoa']\n    PRIMARY KEY (country_id)\n);\n\nCREATE TABLE city (\n    city_id int, -- example: [1, 2, 3]\n    city VARCHAR(50), -- example: ['A Corua (La Corua)', 'Abha', 'Abu Dhabi']\n    country_id SMALLINT, -- example: [1, 2, 3]\n    PRIMARY KEY (city_id),\n    CONSTRAINT fk_city_country_id FOREIGN KEY (country_id) REFERENCES country (country_id)\n);\n\nCREATE TABLE address (\n    address_id int, -- example: [1, 2, 3]\n    address VARCHAR(50), -- example: ['47 MySakila Drive', '28 MySQL Boulevard', '23 Workhaven Lane']\n    address2 VARCHAR(50),\n    city_id INT, -- example: [1, 2, 3]\n    phone VARCHAR(20), -- example: [' ']\n    PRIMARY KEY (address_id),\n    CONSTRAINT fk_address_city_id FOREIGN KEY (city_id) REFERENCES city (city_id)\n);\n\nCREATE TABLE `language` (\n    language_id SMALLINT, -- example: [1, 2, 3]\n    name CHAR(20), -- example: ['English', 'Italian', 'Japanese']\n    PRIMARY KEY (language_id)\n);\n\nCREATE TABLE category (\n    category_id SMALLINT, -- example: [1, 2, 3]\n    name VARCHAR(25), -- example: ['Action', 'Animation', 'Children']\n    PRIMARY KEY (category_id)\n);\n\nCREATE TABLE customer (\n    customer_id INT, -- example: [1, 2, 3]\n    first_name VARCHAR(45), -- example: ['MARY', 'PATRICIA', 'LINDA']\n    last_name VARCHAR(45), -- example: ['ABNEY', 'ADAM', 'ADAMS']\n    address_id INT, -- example: [5, 6, 7]\n    PRIMARY KEY (customer_id),\n    CONSTRAINT fk_customer_store_id FOREIGN KEY (store_id) REFERENCES store (store_id),\n    CONSTRAINT fk_customer_address_id FOREIGN KEY (address_id) REFERENCES address (address_id)\n);\n\nCREATE TABLE film (\n    film_id int, -- example: [1, 2, 3]\n    title VARCHAR(255), -- example: ['STRAIGHT HOURS']\n    language_id SMALLINT, -- example: [1]\n    original_language_id SMALLINT,\n    rental_duration SMALLINT, -- example: [6, 3, 7]\n    rental_rate DECIMAL(4,2), -- example: [0.99, 4.99, 2.99]\n    PRIMARY KEY (film_id),\n    CONSTRAINT fk_film_language_id FOREIGN KEY (language_id) REFERENCES `language` (language_id),\n    CONSTRAINT fk_film_original_language_id FOREIGN KEY (original_language_id) REFERENCES `language` (language_id)\n);\n\nCREATE TABLE film_actor (\n    actor_id INT, -- example: [1, 2, 3]\n    film_id INT, -- example: [1, 2, 3]\n    PRIMARY KEY (actor_id),\n    CONSTRAINT fk_film_actor_actor_id FOREIGN KEY (actor_id) REFERENCES actor (actor_id),\n    CONSTRAINT fk_film_actor_film_id FOREIGN KEY (film_id) REFERENCES film (film_id)\n);\n\nCREATE TABLE film_category (\n    film_id INT, -- example: [1, 2, 3]\n    category_id SMALLINT, -- example: [1, 2, 3]\n    PRIMARY KEY (film_id),\n    CONSTRAINT fk_film_category_film_id FOREIGN KEY (film_id) REFERENCES film (film_id),\n    CONSTRAINT fk_film_category_category_id FOREIGN KEY (category_id) REFERENCES category (category_id)\n);\n\nCREATE TABLE film_text (\n    film_id SMALLINT,\n    title VARCHAR(255),\n    description BLOB SUB_TYPE TEXT,\n    PRIMARY KEY (film_id)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT, -- example: [1, 2, 3]\n    film_id INT, -- example: [1, 2, 3]\n    PRIMARY KEY (inventory_id),\n    CONSTRAINT fk_inventory_film_id FOREIGN KEY (film_id) REFERENCES film (film_id),\n    CONSTRAINT fk_inventory_store_id FOREIGN KEY (store_id) REFERENCES store (store_id)\n);\n\nCREATE TABLE staff (\n    staff_id SMALLINT, -- example: [1, 2]\n    first_name VARCHAR(45), -- example: ['Mike', 'Jon']\n    last_name VARCHAR(45), -- example: ['Hillyer', 'Stephens']\n    address_id INT, -- example: [3, 4]\n    picture BLOB,\n    username VARCHAR(16), -- example: ['Mike', 'Jon']\n    PRIMARY KEY (staff_id),\n    CONSTRAINT fk_staff_address_id FOREIGN KEY (address_id) REFERENCES address (address_id),\n    CONSTRAINT fk_staff_store_id FOREIGN KEY (store_id) REFERENCES store (store_id)\n);\n\nCREATE TABLE store (\n    manager_staff_id SMALLINT, -- example: [1, 2]\n    address_id INT, -- example: [1, 2]\n    PRIMARY KEY (store_id),\n    CONSTRAINT fk_store_manager_staff_id FOREIGN KEY (manager_staff_id) REFERENCES staff (staff_id),\n    CONSTRAINT fk_store_address_id FOREIGN KEY (address_id) REFERENCES address (address_id)\n);\n\nCREATE TABLE payment (\n    customer_id INT, -- example: [1, 2, 3]\n    staff_id SMALLINT, -- example: [1, 2]\n    rental_id INT, -- example: [76, 573, 1185]\n    amount DECIMAL(5,2), -- example: [2.99, 0.99, 5.99]\n    PRIMARY KEY (payment_id),\n    CONSTRAINT fk_payment_customer_id FOREIGN KEY (customer_id) REFERENCES customer (customer_id),\n    CONSTRAINT fk_payment_staff_id FOREIGN KEY (staff_id) REFERENCES staff (staff_id),\n    CONSTRAINT fk_payment_rental_id FOREIGN KEY (rental_id) REFERENCES rental (rental_id)\n);\n\nCREATE TABLE rental (\n    rental_id INT, -- example: [1, 2, 3]\n    rental_date TIMESTAMP, -- example: ['2005-05-24 22:53:30.000', '2005-05-24 22:54:33.000', '2005-05-24 23:03:39.000']\n    inventory_id INT, -- example: [1, 2, 3]\n    customer_id INT, -- example: [1, 2, 3]\n    return_date TIMESTAMP, -- example: ['2005-05-26 22:04:30.000', '2005-05-28 19:40:33.000', '2005-06-01 22:12:39.000']\n    staff_id SMALLINT, -- example: [1, 2]\n    PRIMARY KEY (rental_id),\n    CONSTRAINT fk_rental_inventory_id FOREIGN KEY (inventory_id) REFERENCES inventory (inventory_id),\n    CONSTRAINT fk_rental_customer_id FOREIGN KEY (customer_id) REFERENCES customer (customer_id),\n    CONSTRAINT fk_rental_staff_id FOREIGN KEY (staff_id) REFERENCES staff (staff_id)\n);",
        "question": "Please help me find the film category with the highest total rental hours in cities where the city's name either starts with \"A\" or contains a hyphen. ",
        "instance_id": "local039",
        "db_id": "Pagila"
    },
    {
        "db_desc": "CREATE TABLE pizza_names (\n    pizza_id INTEGER, -- example: [1, 2]\n\nCREATE TABLE companies_funding (\n    company_id INTEGER, -- example: [548, 645, 615]\n    valuation INTEGER, -- example: [2000000000, 1000000000, 10000000000]\n\nCREATE TABLE pizza_customer_orders (\n    pizza_id INTEGER, -- example: [1, 2]\n    exclusions TEXT, -- example: ['4', '2,6']\n\nCREATE TABLE pizza_toppings (\n    topping_name TEXT, -- example: ['Bacon', 'BBQ Sauce', 'Beef']\n);\n\nCREATE TABLE trees (\n    idx INTEGER, -- example: [199121, 32277, 164564]\n    tree_id INTEGER, -- example: [414328, 155915, 362104]\n    status TEXT, -- example: ['Alive', 'Stump', 'Dead']\n    address TEXT, -- example: ['1301 RYAWA AVENUE', '506 BEACH 69 STREET', '2312 WESTERVELT AVENUE']\n    zipcode INTEGER, -- example: [10474, 11692, 10469]\n    boroname TEXT, -- example: ['Bronx', 'Queens', 'Brooklyn']\n    state TEXT, -- example: ['New York']\n\nCREATE TABLE pizza_recipes (\n    pizza_id INTEGER, -- example: [1, 2]\n    toppings TEXT, -- example: ['1, 2, 3, 4, 5, 6, 8, 10', '4, 6, 7, 9, 11, 12']\n);\n\nCREATE TABLE statistics (\n    `date` TEXT, -- example: ['2020-05-27 00:00:00', '2020-06-26 00:00:00', '2020-09-05 00:00:00']\n    state TEXT, -- example: ['NC', 'CO', 'MA']\n\nCREATE TABLE income_trees (\n    zipcode INTEGER, -- example: [11205, 11218, 10451]\n    Estimate_Median_income INTEGER, -- example: [47575, 56120, 26048]\n    Margin_of_Error_Median_income INTEGER, -- example: [3834, 3925, 2140]\n    Estimate_Mean_income INTEGER, -- example: [73353, 78208, 40836]\n    Margin_of_Error_Mean_income INTEGER, -- example: [3929, 3788, 3424]\n);\n\nCREATE TABLE pizza_clean_runner_orders (\n    distance REAL, -- example: [20.0, 13.4, 23.4]\n    duration REAL, -- example: [32.0, 27.0, 20.0]\n\nCREATE TABLE pizza_runner_orders (\n    distance TEXT, -- example: ['20km', '13.4km', '23.4']\n    duration TEXT, -- example: ['32 minutes', '27 minutes', '20 mins']\n\nCREATE TABLE word_list (\n    words TEXT, -- example: ['zip', 'values', 'valid', 'trees', 'three', 'records', 'of', 'number', 'nonzero', 'name', 'median', 'mean', 'incomes', 'income', 'dataset', 'data', 'code', 'boroughs', 'borough', 'average']\n);\n\nCREATE TABLE companies_dates (\n    company_id INTEGER, -- example: [109, 821, 153]\n    date_joined TEXT, -- example: ['2020-09-08T00:00:00.000', '2019-05-16T00:00:00.000', '2019-07-11T00:00:00.000']\n\nCREATE TABLE pizza_get_extras (\n    \n\nCREATE TABLE pizza_get_exclusions (\n    exclusions INTEGER, -- example: [4, 2, 6]\n\nCREATE TABLE pizza_clean_customer_orders (\n    pizza_id INTEGER, -- example: [1, 2]\n    exclusions TEXT, -- example: ['4', '2,6']\n\nCREATE TABLE companies_industries (\n    company_id INTEGER, -- example: [316, 162, 803]\n\nCREATE TABLE pizza_runners (\n    registration_date TEXT, -- example: ['2021-01-01', '2021-01-03', '2021-01-08']\n);",
        "question": "In the combined dataset that unifies the trees data with the income data by ZIP code, filling missing ZIP values where necessary, which three boroughs, restricted to records with median and mean income both greater than zero and a valid borough name, contain the highest number of trees, and what is the average mean income for each of these three boroughs?",
        "instance_id": "local040",
        "db_id": "modern_data"
    },
    {
        "db_desc": "CREATE TABLE pizza_names (\n    \n\nCREATE TABLE companies_funding (\n    \n\nCREATE TABLE pizza_customer_orders (\n    \n\nCREATE TABLE pizza_toppings (\n    \n\nCREATE TABLE trees (\n    status TEXT, -- example: ['Alive', 'Stump', 'Dead']\n    health TEXT, -- example: ['Good']\n    boroname TEXT, -- example: ['Bronx']\n\nCREATE TABLE pizza_recipes (\n    \n\nCREATE TABLE statistics (\n    \n\nCREATE TABLE income_trees (\n    \n\nCREATE TABLE pizza_clean_runner_orders (\n    \n\nCREATE TABLE pizza_runner_orders (\n    \n\nCREATE TABLE word_list (\n    words TEXT, -- example: ['trees', 'status', 'percentage', 'health', 'good', 'bronx']\n);\n\nCREATE TABLE companies_dates (\n    \n\nCREATE TABLE pizza_get_extras (\n    \n\nCREATE TABLE pizza_get_exclusions (\n    \n\nCREATE TABLE pizza_clean_customer_orders (\n    \n\nCREATE TABLE companies_industries (\n    industry TEXT, -- example: ['Health']\n);\n\nCREATE TABLE pizza_runners (\n    ",
        "question": "What percentage of trees in the Bronx have a health status of Good?",
        "instance_id": "local041",
        "db_id": "modern_data"
    },
    {
        "db_desc": "CREATE TABLE product_category_name_translation (\n    \n\nCREATE TABLE sellers (\n    \n\nCREATE TABLE customers (\n    customer_id TEXT, -- example: ['06b8999e2fba1a1fbc88172c00ba8bc7', '18955e83d337fd6b2def6b18a428ac77', '4e7b3e00288586ebd08712fdd0374a03']\n    customer_city TEXT, -- example: ['franca', 'sao bernardo do campo', 'sao paulo']\n    customer_state TEXT, -- example: ['SP', 'SC', 'MG']\n);\n\nCREATE TABLE geolocation (\n    \n\nCREATE TABLE order_items (\n    order_id TEXT, -- example: ['00010242fe8c5a6d1ba2dd792cb16214', '00018f77f2f0320c557190d7a144bdd3', '000229ec398224ef6ca0657da4fc703e']\n    order_item_id INTEGER, -- example: [1, 2, 3]\n    shipping_limit_date TEXT, -- example: ['2017-09-19 09:45:35', '2017-05-03 11:05:13', '2018-01-18 14:48:30']\n    price REAL, -- example: [58.9, 239.9, 199.0]\n\nCREATE TABLE order_payments (\n    order_id TEXT, -- example: ['b81ef226f3fe1789b1e8b2acac839d17', 'a9810da82917af2d9aefd1278f1dcfa0', '25e8ea4e93396b6fa0d3dd708e76c1bd']\n    payment_type TEXT, -- example: ['credit_card', 'boleto', 'voucher']\n    payment_installments INTEGER, -- example: [8, 1, 2]\n    payment_value REAL, -- example: [99.33, 24.39, 65.71]\n);\n\nCREATE TABLE order_reviews (\n    order_id TEXT, -- example: ['73fc7af87114b39712e6da79b0a377eb', 'a548910a1c6147796b98fdf73dbeba33', 'f9e4b658b201a9f2ecdecbb34bed034b']\n    review_comment_title TEXT, -- example: ['7 ']\n\nCREATE TABLE orders (\n    order_id TEXT, -- example: ['e481f51cbdc54678b7cc49136f2d6af7', '53cdb2fc8bc7dce0b6741e2150273451', '47770eb9100c2d0c44946d9cf07ec65d']\n    customer_id TEXT, -- example: ['9ef432eb6251297304e76186b10a928d', 'b0830fb4747a6c6d20dea0b8c802d7ef', '41ce2a54c0b03bf3443c3d931a367089']\n    order_status TEXT, -- example: ['delivered', 'invoiced', 'shipped']\n    order_purchase_timestamp TEXT, -- example: ['2017-10-02 10:56:33', '2018-07-24 20:41:37', '2018-08-08 08:38:49']\n    order_approved_at TEXT, -- example: ['2017-10-02 11:07:15', '2018-07-26 03:24:27', '2018-08-08 08:55:23']\n    order_delivered_carrier_date TEXT, -- example: ['2017-10-04 19:55:00', '2018-07-26 14:31:00', '2018-08-08 13:50:00']\n    order_delivered_customer_date TEXT, -- example: ['2017-10-10 21:25:13', '2018-08-07 15:27:45', '2018-08-17 18:06:29']\n    order_estimated_delivery_date TEXT, -- example: ['2017-10-18 00:00:00', '2018-08-13 00:00:00', '2018-09-04 00:00:00']\n);\n\nCREATE TABLE products (\n    \n\nCREATE TABLE leads_qualified (\n    first_contact_date TEXT, -- example: ['2018-02-01', '2017-10-20', '2018-03-22']\n    origin TEXT, -- example: ['social', 'paid_search', 'organic_search']\n);\n\nCREATE TABLE leads_closed (\n    won_date TEXT, -- example: ['2018-02-26 19:58:54', '2018-05-08 20:17:59', '2018-06-05 17:27:23']\n    average_stock TEXT, -- example: ['20-50', '1-5', '5-20']",
        "question": "Could you tell me the number of orders, average payment per order and customer lifespan in weeks of the 3 custumers with the highest average payment per order, where the lifespan is calculated by subtracting the earliest purchase date from the latest purchase date in days, dividing by seven, and if the result is less than seven days, setting it to 1.0?",
        "instance_id": "local004",
        "db_id": "E_commerce"
    },
    {
        "db_desc": "CREATE TABLE pizza_names (\n    \n\nCREATE TABLE companies_funding (\n    \n\nCREATE TABLE pizza_customer_orders (\n    \n\nCREATE TABLE pizza_toppings (\n    topping_name TEXT, -- example: ['Bacon', 'BBQ Sauce', 'Beef']\n);\n\nCREATE TABLE trees (\n    health TEXT, -- example: ['Good', 'Fair', 'Poor']\n\nCREATE TABLE pizza_recipes (\n    \n\nCREATE TABLE statistics (\n    \n\nCREATE TABLE income_trees (\n    Estimate_Total INTEGER, -- example: [15198, 24909, 18140]\n\nCREATE TABLE pizza_clean_runner_orders (\n    distance REAL, -- example: [20.0, 13.4, 23.4]\n\nCREATE TABLE pizza_runner_orders (\n    distance TEXT, -- example: ['20km', '13.4km', '23.4']\n\nCREATE TABLE word_list (\n    words TEXT, -- example: ['year', 'unicorns', 'unicorn', 'top', 'number', 'industry', 'help', 'companies', 'average']\n);\n\nCREATE TABLE companies_dates (\n    date_joined TEXT, -- example: ['2020-09-08T00:00:00.000', '2019-05-16T00:00:00.000', '2019-07-11T00:00:00.000']\n    year_founded INTEGER, -- example: [2004, 2009, 2016]\n);\n\nCREATE TABLE pizza_get_extras (\n    \n\nCREATE TABLE pizza_get_exclusions (\n    \n\nCREATE TABLE pizza_clean_customer_orders (\n    \n\nCREATE TABLE companies_industries (\n    industry TEXT, -- example: ['Fintech', 'Internet software & services', 'E-commerce & direct-to-consumer']\n);\n\nCREATE TABLE pizza_runners (\n    ",
        "question": "Can you help me calculate the average number of new unicorn companies per year in the top industry from 2019 to 2021?",
        "instance_id": "local049",
        "db_id": "modern_data"
    },
    {
        "db_desc": "CREATE TABLE albums (\n    AlbumId INTEGER, -- example: [1, 4, 2]\n    ArtistId INTEGER, -- example: [1, 2, 3]\n    PRIMARY KEY (AlbumId),\n    CONSTRAINT fk_albums_artistid FOREIGN KEY (ArtistId) REFERENCES artists (ArtistId)\n);\n\nCREATE TABLE sqlite_sequence (\n    \n\nCREATE TABLE artists (\n    ArtistId INTEGER, -- example: [1, 2, 3]\n    Name NVARCHAR(120), -- example: ['AC/DC', 'Accept', 'Aerosmith']\n    PRIMARY KEY (ArtistId)\n);\n\nCREATE TABLE customers (\n    CustomerId INTEGER, -- example: [1, 3, 12]\n    FirstName NVARCHAR(40), -- example: ['Lu\u00eds', 'Leonie', 'Fran\u00e7ois']\n    LastName NVARCHAR(20), -- example: ['Gon\u00e7alves', 'K\u00f6hler', 'Tremblay']\n    Country NVARCHAR(40), -- example: ['Brazil', 'Germany', 'Canada']\n    Phone NVARCHAR(24), -- example: ['+55 (12) 3923-5555', '+49 0711 2842222', '+1 (514) 721-4711']\n    PRIMARY KEY (CustomerId),\n    CONSTRAINT fk_customers_supportrepid FOREIGN KEY (SupportRepId) REFERENCES employees (EmployeeId)\n);\n\nCREATE TABLE employees (\n    EmployeeId INTEGER, -- example: [1, 2, 6]\n    LastName NVARCHAR(20), -- example: ['Adams', 'Edwards', 'Peacock']\n    FirstName NVARCHAR(20), -- example: ['Andrew', 'Nancy', 'Jane']\n    ReportsTo INTEGER, -- example: [1, 2, 6]\n    Country NVARCHAR(40), -- example: ['Canada']\n    Phone NVARCHAR(24), -- example: ['+1 (780) 428-9482', '+1 (403) 262-3443', '+1 (403) 263-4423']\n    PRIMARY KEY (EmployeeId),\n    CONSTRAINT fk_employees_reportsto FOREIGN KEY (ReportsTo) REFERENCES employees (EmployeeId)\n);\n\nCREATE TABLE genres (\n    GenreId INTEGER, -- example: [1, 2, 3]\n    Name NVARCHAR(120), -- example: ['Rock', 'Jazz', 'Metal']\n    PRIMARY KEY (GenreId)\n);\n\nCREATE TABLE invoices (\n    InvoiceId INTEGER, -- example: [98, 121, 143]\n    CustomerId INTEGER, -- example: [1, 2, 3]\n    Total NUMERIC(10,2), -- example: [1.98, 3.96, 5.94]\n    PRIMARY KEY (InvoiceId),\n    CONSTRAINT fk_invoices_customerid FOREIGN KEY (CustomerId) REFERENCES customers (CustomerId)\n);\n\nCREATE TABLE invoice_items (\n    InvoiceId INTEGER, -- example: [1, 2, 3]\n    UnitPrice NUMERIC(10,2), -- example: [0.99, 1.99]\n    Quantity INTEGER, -- example: [1]\n    PRIMARY KEY (InvoiceLineId),\n    CONSTRAINT fk_invoice_items_invoiceid FOREIGN KEY (InvoiceId) REFERENCES invoices (InvoiceId),\n    CONSTRAINT fk_invoice_items_trackid FOREIGN KEY (TrackId) REFERENCES tracks (TrackId)\n);\n\nCREATE TABLE media_types (\n    MediaTypeId INTEGER, -- example: [1, 2, 3]\n    Name NVARCHAR(120), -- example: ['MPEG audio file', 'Protected AAC audio file', 'Protected MPEG-4 video file']\n    PRIMARY KEY (MediaTypeId)\n);\n\nCREATE TABLE playlists (\n    PlaylistId INTEGER, -- example: [1, 2, 3]\n    Name NVARCHAR(120), -- example: ['Music', 'Movies', 'TV Shows']\n    PRIMARY KEY (PlaylistId)\n);\n\nCREATE TABLE playlist_track (\n    PlaylistId INTEGER, -- example: [1, 3, 5]\n    PRIMARY KEY (PlaylistId),\n    CONSTRAINT fk_playlist_track_playlistid FOREIGN KEY (PlaylistId) REFERENCES playlists (PlaylistId),\n    CONSTRAINT fk_playlist_track_trackid FOREIGN KEY (TrackId) REFERENCES tracks (TrackId)\n);\n\nCREATE TABLE tracks (\n    Name NVARCHAR(200), -- example: ['Whatsername']\n    AlbumId INTEGER, -- example: [1, 2, 3]\n    MediaTypeId INTEGER, -- example: [1, 2, 3]\n    GenreId INTEGER, -- example: [1, 2, 3]\n    UnitPrice NUMERIC(10,2), -- example: [0.99, 1.99]\n    PRIMARY KEY (TrackId),\n    CONSTRAINT fk_tracks_albumid FOREIGN KEY (AlbumId) REFERENCES albums (AlbumId),\n    CONSTRAINT fk_tracks_mediatypeid FOREIGN KEY (MediaTypeId) REFERENCES media_types (MediaTypeId),\n    CONSTRAINT fk_tracks_genreid FOREIGN KEY (GenreId) REFERENCES genres (GenreId)\n);\n\nCREATE TABLE sqlite_stat1 (\n    tbl TEXT, -- example: ['customers', 'artists', 'albums']",
        "question": "Could you tell me the first names of customers who spent less than $1 on albums by the best-selling artist, along with the amounts they spent?",
        "instance_id": "local054",
        "db_id": "chinook"
    },
    {
        "db_desc": "CREATE TABLE albums (\n    AlbumId INTEGER, -- example: [1, 4, 2]\n    ArtistId INTEGER, -- example: [1, 2, 3]\n    PRIMARY KEY (AlbumId),\n    CONSTRAINT fk_albums_artistid FOREIGN KEY (ArtistId) REFERENCES artists (ArtistId)\n);\n\nCREATE TABLE sqlite_sequence (\n    \n\nCREATE TABLE artists (\n    ArtistId INTEGER, -- example: [1, 2, 3]\n    Name NVARCHAR(120), -- example: ['AC/DC', 'Accept', 'Aerosmith']\n    PRIMARY KEY (ArtistId)\n);\n\nCREATE TABLE customers (\n    CustomerId INTEGER, -- example: [1, 3, 12]\n    FirstName NVARCHAR(40), -- example: ['Lu\u00eds', 'Leonie', 'Fran\u00e7ois']\n    LastName NVARCHAR(20), -- example: ['Gon\u00e7alves', 'K\u00f6hler', 'Tremblay']\n    Address NVARCHAR(70), -- example: ['Av. Brigadeiro Faria Lima, 2170', 'Theodor-Heuss-Stra\u00dfe 34', '1498 rue B\u00e9langer']\n    Country NVARCHAR(40), -- example: ['Brazil', 'Germany', 'Canada']\n    Phone NVARCHAR(24), -- example: ['+55 (12) 3923-5555', '+49 0711 2842222', '+1 (514) 721-4711']\n    PRIMARY KEY (CustomerId),\n    CONSTRAINT fk_customers_supportrepid FOREIGN KEY (SupportRepId) REFERENCES employees (EmployeeId)\n);\n\nCREATE TABLE employees (\n    EmployeeId INTEGER, -- example: [1, 2, 6]\n    LastName NVARCHAR(20), -- example: ['Adams', 'Edwards', 'Peacock']\n    FirstName NVARCHAR(20), -- example: ['Andrew', 'Nancy', 'Jane']\n    ReportsTo INTEGER, -- example: [1, 2, 6]\n    Address NVARCHAR(70), -- example: ['11120 Jasper Ave NW', '825 8 Ave SW', '1111 6 Ave SW']\n    Country NVARCHAR(40), -- example: ['Canada']\n    Phone NVARCHAR(24), -- example: ['+1 (780) 428-9482', '+1 (403) 262-3443', '+1 (403) 263-4423']\n    PRIMARY KEY (EmployeeId),\n    CONSTRAINT fk_employees_reportsto FOREIGN KEY (ReportsTo) REFERENCES employees (EmployeeId)\n);\n\nCREATE TABLE genres (\n    GenreId INTEGER, -- example: [1, 2, 3]\n    Name NVARCHAR(120), -- example: ['Rock', 'Jazz', 'Metal']\n    PRIMARY KEY (GenreId)\n);\n\nCREATE TABLE invoices (\n    InvoiceId INTEGER, -- example: [98, 121, 143]\n    CustomerId INTEGER, -- example: [1, 2, 3]\n    Total NUMERIC(10,2), -- example: [1.98, 3.96, 5.94]\n    PRIMARY KEY (InvoiceId),\n    CONSTRAINT fk_invoices_customerid FOREIGN KEY (CustomerId) REFERENCES customers (CustomerId)\n);\n\nCREATE TABLE invoice_items (\n    InvoiceId INTEGER, -- example: [1, 2, 3]\n    TrackId INTEGER, -- example: [1, 2, 3]\n    UnitPrice NUMERIC(10,2), -- example: [0.99, 1.99]\n    Quantity INTEGER, -- example: [1]\n    PRIMARY KEY (InvoiceLineId),\n    CONSTRAINT fk_invoice_items_invoiceid FOREIGN KEY (InvoiceId) REFERENCES invoices (InvoiceId),\n    CONSTRAINT fk_invoice_items_trackid FOREIGN KEY (TrackId) REFERENCES tracks (TrackId)\n);\n\nCREATE TABLE media_types (\n    MediaTypeId INTEGER, -- example: [1, 2, 3]\n    Name NVARCHAR(120), -- example: ['MPEG audio file', 'Protected AAC audio file', 'Protected MPEG-4 video file']\n    PRIMARY KEY (MediaTypeId)\n);\n\nCREATE TABLE playlists (\n    PlaylistId INTEGER, -- example: [1, 2, 3]\n    Name NVARCHAR(120), -- example: ['Music', 'Movies', 'TV Shows']\n    PRIMARY KEY (PlaylistId)\n);\n\nCREATE TABLE playlist_track (\n    PlaylistId INTEGER, -- example: [1, 3, 5]\n    TrackId INTEGER, -- example: [1, 2, 3]\n    PRIMARY KEY (PlaylistId),\n    CONSTRAINT fk_playlist_track_playlistid FOREIGN KEY (PlaylistId) REFERENCES playlists (PlaylistId),\n    CONSTRAINT fk_playlist_track_trackid FOREIGN KEY (TrackId) REFERENCES tracks (TrackId)\n);\n\nCREATE TABLE tracks (\n    TrackId INTEGER, -- example: [1, 6, 7]\n    Name NVARCHAR(200), -- example: ['The Client']\n    AlbumId INTEGER, -- example: [1, 2, 3]\n    MediaTypeId INTEGER, -- example: [1, 2, 3]\n    GenreId INTEGER, -- example: [1, 2, 3]\n    UnitPrice NUMERIC(10,2), -- example: [0.99, 1.99]\n    PRIMARY KEY (TrackId),\n    CONSTRAINT fk_tracks_albumid FOREIGN KEY (AlbumId) REFERENCES albums (AlbumId),\n    CONSTRAINT fk_tracks_mediatypeid FOREIGN KEY (MediaTypeId) REFERENCES media_types (MediaTypeId),\n    CONSTRAINT fk_tracks_genreid FOREIGN KEY (GenreId) REFERENCES genres (GenreId)\n);\n\nCREATE TABLE sqlite_stat1 (\n    tbl TEXT, -- example: ['customers', 'artists', 'albums']\n    stat TEXT, -- example: ['3503 701', '3503 141', '3503 11']\n);",
        "question": "Identify the artist with the highest overall sales of albums (tie broken by alphabetical order) and the artist with the lowest overall sales of albums (tie broken by alphabetical order), then calculate the amount each customer spent specifically on those two artists\u2019 albums. Next, compute the average spending for the customers who purchased from the top-selling artist and the average spending for the customers who purchased from the lowest-selling artist, and finally return the absolute difference between these two averages.",
        "instance_id": "local055",
        "db_id": "chinook"
    },
    {
        "db_desc": "CREATE TABLE albums (\n    AlbumId INTEGER, -- example: [1, 4, 2]\n    PRIMARY KEY (AlbumId),\n    CONSTRAINT fk_albums_artistid FOREIGN KEY (ArtistId) REFERENCES artists (ArtistId)\n);\n\nCREATE TABLE sqlite_sequence (\n    \n\nCREATE TABLE artists (\n    Name NVARCHAR(120), -- example: ['AC/DC', 'Accept', 'Aerosmith']\n    PRIMARY KEY (ArtistId)\n);\n\nCREATE TABLE customers (\n    CustomerId INTEGER, -- example: [1, 3, 12]\n    Company NVARCHAR(80), -- example: ['Embraer - Empresa Brasileira de Aeron\u00e1ut', 'JetBrains s.r.o.', 'Woodstock Discos']\n    Address NVARCHAR(70), -- example: ['Av. Brigadeiro Faria Lima, 2170', 'Theodor-Heuss-Stra\u00dfe 34', '1498 rue B\u00e9langer']\n    City NVARCHAR(40), -- example: ['S\u00e3o Jos\u00e9 dos Campos', 'Stuttgart', 'Montr\u00e9al']\n    State NVARCHAR(40), -- example: ['SP', 'QC', 'RJ']\n    Country NVARCHAR(40), -- example: ['Brazil', 'Germany', 'Canada']\n    Phone NVARCHAR(24), -- example: ['+55 (12) 3923-5555', '+49 0711 2842222', '+1 (514) 721-4711']\n    PRIMARY KEY (CustomerId),\n    CONSTRAINT fk_customers_supportrepid FOREIGN KEY (SupportRepId) REFERENCES employees (EmployeeId)\n);\n\nCREATE TABLE employees (\n    EmployeeId INTEGER, -- example: [1, 2, 6]\n    ReportsTo INTEGER, -- example: [1, 2, 6]\n    BirthDate DATETIME, -- example: ['1962-02-18 00:00:00', '1958-12-08 00:00:00', '1973-08-29 00:00:00']\n    Address NVARCHAR(70), -- example: ['11120 Jasper Ave NW', '825 8 Ave SW', '1111 6 Ave SW']\n    City NVARCHAR(40), -- example: ['Edmonton', 'Calgary', 'Lethbridge']\n    State NVARCHAR(40), -- example: ['AB']\n    Country NVARCHAR(40), -- example: ['Canada']\n    Phone NVARCHAR(24), -- example: ['+1 (780) 428-9482', '+1 (403) 262-3443', '+1 (403) 263-4423']\n    PRIMARY KEY (EmployeeId),\n    CONSTRAINT fk_employees_reportsto FOREIGN KEY (ReportsTo) REFERENCES employees (EmployeeId)\n);\n\nCREATE TABLE genres (\n    GenreId INTEGER, -- example: [1, 2, 3]\n    Name NVARCHAR(120), -- example: ['Rock', 'Jazz', 'Metal']\n    PRIMARY KEY (GenreId)\n);\n\nCREATE TABLE invoices (\n    InvoiceId INTEGER, -- example: [98, 121, 143]\n    CustomerId INTEGER, -- example: [1, 2, 3]\n    BillingCountry NVARCHAR(40), -- example: ['Germany', 'Norway', 'Belgium']\n    Total NUMERIC(10,2), -- example: [1.98, 3.96, 5.94]\n    PRIMARY KEY (InvoiceId),\n    CONSTRAINT fk_invoices_customerid FOREIGN KEY (CustomerId) REFERENCES customers (CustomerId)\n);\n\nCREATE TABLE invoice_items (\n    InvoiceId INTEGER, -- example: [1, 2, 3]\n    Quantity INTEGER, -- example: [1]\n    PRIMARY KEY (InvoiceLineId),\n    CONSTRAINT fk_invoice_items_invoiceid FOREIGN KEY (InvoiceId) REFERENCES invoices (InvoiceId),\n    CONSTRAINT fk_invoice_items_trackid FOREIGN KEY (TrackId) REFERENCES tracks (TrackId)\n);\n\nCREATE TABLE media_types (\n    MediaTypeId INTEGER, -- example: [1, 2, 3]\n    Name NVARCHAR(120), -- example: ['MPEG audio file', 'Protected AAC audio file', 'Protected MPEG-4 video file']\n    PRIMARY KEY (MediaTypeId)\n);\n\nCREATE TABLE playlists (\n    PlaylistId INTEGER, -- example: [1, 2, 3]\n    Name NVARCHAR(120), -- example: ['Music', 'Movies', 'TV Shows']\n    PRIMARY KEY (PlaylistId)\n);\n\nCREATE TABLE playlist_track (\n    PlaylistId INTEGER, -- example: [1, 3, 5]\n    PRIMARY KEY (PlaylistId),\n    CONSTRAINT fk_playlist_track_playlistid FOREIGN KEY (PlaylistId) REFERENCES playlists (PlaylistId),\n    CONSTRAINT fk_playlist_track_trackid FOREIGN KEY (TrackId) REFERENCES tracks (TrackId)\n);\n\nCREATE TABLE tracks (\n    Name NVARCHAR(200), -- example: ['Numbers']\n    AlbumId INTEGER, -- example: [1, 2, 3]\n    MediaTypeId INTEGER, -- example: [1, 2, 3]\n    GenreId INTEGER, -- example: [1, 2, 3]\n    Bytes INTEGER, -- example: [11170334, 5510424, 3990994]\n    PRIMARY KEY (TrackId),\n    CONSTRAINT fk_tracks_albumid FOREIGN KEY (AlbumId) REFERENCES albums (AlbumId),\n    CONSTRAINT fk_tracks_mediatypeid FOREIGN KEY (MediaTypeId) REFERENCES media_types (MediaTypeId),\n    CONSTRAINT fk_tracks_genreid FOREIGN KEY (GenreId) REFERENCES genres (GenreId)\n);\n\nCREATE TABLE sqlite_stat1 (\n    tbl TEXT, -- example: ['customers']\n    stat TEXT, -- example: ['3503 701', '3503 141', '3503 11']\n);",
        "question": "Using the sales data, what is the median value of total sales made in countries where the number of customers is greater than 4?",
        "instance_id": "local198",
        "db_id": "chinook"
    },
    {
        "db_desc": "CREATE TABLE actor (\n    actor_id numeric, -- example: [1, 2, 3]\n    first_name VARCHAR(45), -- example: ['PENELOPE', 'NICK', 'ED']\n    last_name VARCHAR(45), -- example: ['AKROYD', 'ALLEN', 'ASTAIRE']\n    PRIMARY KEY (actor_id)\n);\n\nCREATE TABLE country (\n    country_id SMALLINT, -- example: [1, 2, 3]\n    PRIMARY KEY (country_id)\n);\n\nCREATE TABLE city (\n    city_id int, -- example: [1, 2, 3]\n    city VARCHAR(50), -- example: ['A Corua (La Corua)', 'Abha', 'Abu Dhabi']\n    country_id SMALLINT, -- example: [1, 2, 3]\n    PRIMARY KEY (city_id),\n    CONSTRAINT fk_city_country_id FOREIGN KEY (country_id) REFERENCES country (country_id)\n);\n\nCREATE TABLE address (\n    address_id int, -- example: [1, 2, 3]\n    address VARCHAR(50), -- example: ['47 MySakila Drive', '28 MySQL Boulevard', '23 Workhaven Lane']\n    address2 VARCHAR(50),\n    city_id INT, -- example: [1, 2, 3]\n    phone VARCHAR(20), -- example: [' ']\n    PRIMARY KEY (address_id),\n    CONSTRAINT fk_address_city_id FOREIGN KEY (city_id) REFERENCES city (city_id)\n);\n\nCREATE TABLE `language` (\n    language_id SMALLINT, -- example: [1, 2, 3]\n    name CHAR(20), -- example: ['English', 'Italian', 'Japanese']\n    PRIMARY KEY (language_id)\n);\n\nCREATE TABLE category (\n    category_id SMALLINT, -- example: [1, 2, 3]\n    name VARCHAR(25), -- example: ['Action', 'Animation', 'Children']\n    PRIMARY KEY (category_id)\n);\n\nCREATE TABLE customer (\n    customer_id INT, -- example: [1, 2, 3]\n    first_name VARCHAR(45), -- example: ['MARY', 'PATRICIA', 'LINDA']\n    last_name VARCHAR(45), -- example: ['ABNEY', 'ADAM', 'ADAMS']\n    address_id INT, -- example: [5, 6, 7]\n    active CHAR(1), -- example: ['1', '0']\n    create_date TIMESTAMP, -- example: ['2006-02-14 22:04:36.000', '2006-02-14 22:04:37.000']\n    PRIMARY KEY (customer_id),\n    CONSTRAINT fk_customer_store_id FOREIGN KEY (store_id) REFERENCES store (store_id),\n    CONSTRAINT fk_customer_address_id FOREIGN KEY (address_id) REFERENCES address (address_id)\n);\n\nCREATE TABLE film (\n    film_id int, -- example: [1, 2, 3]\n    language_id SMALLINT, -- example: [1]\n    original_language_id SMALLINT,\n    length SMALLINT, -- example: [86, 48, 50]\n    rating VARCHAR(10), -- example: ['PG', 'G', 'NC-17']\n    PRIMARY KEY (film_id),\n    CONSTRAINT fk_film_language_id FOREIGN KEY (language_id) REFERENCES `language` (language_id),\n    CONSTRAINT fk_film_original_language_id FOREIGN KEY (original_language_id) REFERENCES `language` (language_id)\n);\n\nCREATE TABLE film_actor (\n    actor_id INT, -- example: [1, 2, 3]\n    film_id INT, -- example: [1, 2, 3]\n    PRIMARY KEY (actor_id),\n    CONSTRAINT fk_film_actor_actor_id FOREIGN KEY (actor_id) REFERENCES actor (actor_id),\n    CONSTRAINT fk_film_actor_film_id FOREIGN KEY (film_id) REFERENCES film (film_id)\n);\n\nCREATE TABLE film_category (\n    film_id INT, -- example: [1, 2, 3]\n    category_id SMALLINT, -- example: [1, 2, 3]\n    PRIMARY KEY (film_id),\n    CONSTRAINT fk_film_category_film_id FOREIGN KEY (film_id) REFERENCES film (film_id),\n    CONSTRAINT fk_film_category_category_id FOREIGN KEY (category_id) REFERENCES category (category_id)\n);\n\nCREATE TABLE film_text (\n    film_id SMALLINT,\n    title VARCHAR(255),\n    description BLOB SUB_TYPE TEXT,\n    PRIMARY KEY (film_id)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT, -- example: [1, 2, 3]\n    film_id INT, -- example: [1, 2, 3]\n    PRIMARY KEY (inventory_id),\n    CONSTRAINT fk_inventory_film_id FOREIGN KEY (film_id) REFERENCES film (film_id),\n    CONSTRAINT fk_inventory_store_id FOREIGN KEY (store_id) REFERENCES store (store_id)\n);\n\nCREATE TABLE staff (\n    staff_id SMALLINT, -- example: [1, 2]\n    first_name VARCHAR(45), -- example: ['Mike', 'Jon']\n    last_name VARCHAR(45), -- example: ['Hillyer', 'Stephens']\n    address_id INT, -- example: [3, 4]\n    picture BLOB,\n    active SMALLINT, -- example: [1]\n    username VARCHAR(16), -- example: ['Mike', 'Jon']\n    PRIMARY KEY (staff_id),\n    CONSTRAINT fk_staff_address_id FOREIGN KEY (address_id) REFERENCES address (address_id),\n    CONSTRAINT fk_staff_store_id FOREIGN KEY (store_id) REFERENCES store (store_id)\n);\n\nCREATE TABLE store (\n    manager_staff_id SMALLINT, -- example: [1, 2]\n    address_id INT, -- example: [1, 2]\n    PRIMARY KEY (store_id),\n    CONSTRAINT fk_store_manager_staff_id FOREIGN KEY (manager_staff_id) REFERENCES staff (staff_id),\n    CONSTRAINT fk_store_address_id FOREIGN KEY (address_id) REFERENCES address (address_id)\n);\n\nCREATE TABLE payment (\n    payment_id int, -- example: [1, 2, 3]\n    customer_id INT, -- example: [1, 2, 3]\n    staff_id SMALLINT, -- example: [1, 2]\n    amount DECIMAL(5,2), -- example: [2.99, 0.99, 5.99]\n    payment_date TIMESTAMP, -- example: ['2005-05-25 11:30:37.000', '2005-05-28 10:35:23.000', '2005-06-15 00:54:12.000']\n    PRIMARY KEY (payment_id),\n    CONSTRAINT fk_payment_customer_id FOREIGN KEY (customer_id) REFERENCES customer (customer_id),\n    CONSTRAINT fk_payment_staff_id FOREIGN KEY (staff_id) REFERENCES staff (staff_id),\n    CONSTRAINT fk_payment_rental_id FOREIGN KEY (rental_id) REFERENCES rental (rental_id)\n);\n\nCREATE TABLE rental (\n    rental_date TIMESTAMP, -- example: ['2005-05-24 22:53:30.000', '2005-05-24 22:54:33.000', '2005-05-24 23:03:39.000']\n    inventory_id INT, -- example: [1, 2, 3]\n    customer_id INT, -- example: [1, 2, 3]\n    return_date TIMESTAMP, -- example: ['2005-05-26 22:04:30.000', '2005-05-28 19:40:33.000', '2005-06-01 22:12:39.000']\n    staff_id SMALLINT, -- example: [1, 2]\n    PRIMARY KEY (rental_id),\n    CONSTRAINT fk_rental_inventory_id FOREIGN KEY (inventory_id) REFERENCES inventory (inventory_id),\n    CONSTRAINT fk_rental_customer_id FOREIGN KEY (customer_id) REFERENCES customer (customer_id),\n    CONSTRAINT fk_rental_staff_id FOREIGN KEY (staff_id) REFERENCES staff (staff_id)\n);",
        "question": "Which customer has the highest average monthly change in payment amounts? Provide the customer's full name.",
        "instance_id": "local056",
        "db_id": "sqlite-sakila"
    },
    {
        "db_desc": "CREATE TABLE hardware_dim_customer (\n    customer TEXT, -- example: ['Atliq Exclusive', 'Atliq e Store', 'Neptune']\n    platform TEXT, -- example: ['Brick & Mortar', 'E-Commerce']\n    market TEXT, -- example: ['India', 'Indonesia', 'Japan']\n    region TEXT, -- example: ['APAC', 'EU', 'LATAM']\n);\n\nCREATE TABLE hardware_fact_pre_invoice_deductions (\n    \n\nCREATE TABLE web_sales_reps (\n    \n\nCREATE TABLE hardware_dim_product (\n    product_code TEXT, -- example: ['A0118150101', 'A0118150102', 'A0118150103']\n    division TEXT, -- example: ['P & A', 'PC', 'N & S']\n    segment TEXT, -- example: ['Peripherals', 'Accessories', 'Notebook']\n    category TEXT, -- example: ['MotherBoard']\n    product TEXT, -- example: ['AQ Dracula HDD \u2013 3.5 Inch SATA 6 Gb/s 54', 'AQ WereWolf NAS Internal Hard Drive HDD ', 'AQ Zion Saga']\n    variant TEXT, -- example: ['Standard', 'Plus', 'Premium']\n);\n\nCREATE TABLE web_orders (\n    total INTEGER, -- example: [169, 288, 132]\n\nCREATE TABLE StaffHours (\n    \n\nCREATE TABLE university_enrollment (\n    \n\nCREATE TABLE university_faculty (\n    \n\nCREATE TABLE university_student (\n    \n\nCREATE TABLE university_offering (\n    OffYear INTEGER, -- example: [2010, 2009]\n\nCREATE TABLE web_accounts (\n    website TEXT, -- example: ['www.walmart.com', 'www.exxonmobil.com', 'www.apple.com']\n    sales_rep_id INTEGER, -- example: [321500, 321510, 321520]\n);\n\nCREATE TABLE web_events (\n    \n\nCREATE TABLE SalaryDataset (\n    \n\nCREATE TABLE web_region (\n    \n\nCREATE TABLE hardware_fact_gross_price (\n    product_code TEXT, -- example: ['A0118150101', 'A0118150102', 'A0118150103']\n\nCREATE TABLE hardware_fact_manufacturing_cost (\n    product_code TEXT, -- example: ['A0118150101', 'A0118150102', 'A0118150103']\n\nCREATE TABLE university_course (\n    \n\nCREATE TABLE hardware_fact_sales_monthly (\n    product_code TEXT, -- example: ['A0118150101', 'A0118150102', 'A0118150103']\n    sold_quantity INTEGER, -- example: [137, 47, 57]",
        "question": "Can you provide a list of hardware product segments along with their unique product counts for 2020 in the output, ordered by the highest percentage increase in unique fact sales products from 2020 to 2021?",
        "instance_id": "local058",
        "db_id": "education_business"
    },
    {
        "db_desc": "CREATE TABLE hardware_dim_customer (\n    platform TEXT, -- example: ['Brick & Mortar', 'E-Commerce']\n    market TEXT, -- example: ['India', 'Indonesia', 'Japan']\n    region TEXT, -- example: ['APAC', 'EU', 'LATAM']\n);\n\nCREATE TABLE hardware_fact_pre_invoice_deductions (\n    fiscal_year INTEGER, -- example: [2020, 2021]\n\nCREATE TABLE web_sales_reps (\n    \n\nCREATE TABLE hardware_dim_product (\n    product_code TEXT, -- example: ['A0118150101', 'A0118150102', 'A0118150103']\n    division TEXT, -- example: ['P & A', 'PC', 'N & S']\n    segment TEXT, -- example: ['Peripherals', 'Accessories', 'Notebook']\n    category TEXT, -- example: ['Internal HDD', 'Graphic Card', 'Processors']\n    product TEXT, -- example: ['AQ Dracula HDD \u2013 3.5 Inch SATA 6 Gb/s 54', 'AQ WereWolf NAS Internal Hard Drive HDD ', 'AQ Zion Saga']\n\nCREATE TABLE web_orders (\n    standard_qty INTEGER, -- example: [123, 190, 85]\n    gloss_qty INTEGER, -- example: [22, 41, 47]\n    total INTEGER, -- example: [169, 288, 132]\n    total_amt_usd REAL, -- example: [973.43, 1718.03, 776.18]\n);\n\nCREATE TABLE StaffHours (\n    EventDate TEXT, -- example: ['2013-02-01', '2013-01-15', '2013-03-01']\n\nCREATE TABLE university_enrollment (\n    \n\nCREATE TABLE university_faculty (\n    \n\nCREATE TABLE university_student (\n    \n\nCREATE TABLE university_offering (\n    OffYear INTEGER, -- example: [2010, 2009]\n\nCREATE TABLE web_accounts (\n    website TEXT, -- example: ['www.walmart.com', 'www.exxonmobil.com', 'www.apple.com']\n\nCREATE TABLE web_events (\n    \n\nCREATE TABLE SalaryDataset (\n    \n\nCREATE TABLE web_region (\n    \n\nCREATE TABLE hardware_fact_gross_price (\n    product_code TEXT, -- example: ['A0118150101', 'A0118150102', 'A0118150103']\n    fiscal_year INTEGER, -- example: [2020, 2021]\n\nCREATE TABLE hardware_fact_manufacturing_cost (\n    product_code TEXT, -- example: ['A0118150101', 'A0118150102', 'A0118150103']\n    cost_year INTEGER, -- example: [2020, 2021]\n\nCREATE TABLE university_course (\n    \n\nCREATE TABLE hardware_fact_sales_monthly (\n    `date` TEXT, -- example: ['2019-09-01', '2019-10-01', '2019-11-01']\n    product_code TEXT, -- example: ['A0118150101', 'A0118150102', 'A0118150103']\n    sold_quantity INTEGER, -- example: [137, 47, 57]\n    fiscal_year INTEGER, -- example: [2020, 2021]\n);",
        "question": "For the calendar year 2021, what is the overall average quantity sold of the top three best-selling hardware products (by total quantity sold) in each division?",
        "instance_id": "local059",
        "db_id": "education_business"
    },
    {
        "db_desc": "CREATE TABLE countries (\n    country_id INTEGER, -- example: [52769, 52770, 52771]\n    country_name TEXT, -- example: ['Singapore', 'Italy', 'China']\n    country_region TEXT, -- example: ['Asia', 'Europe', 'Americas']\n    country_total TEXT, -- example: ['World total']\n    PRIMARY KEY (country_id)\n);\n\nCREATE TABLE customers (\n    cust_id INTEGER, -- example: [1, 2, 3]\n    cust_city TEXT, -- example: ['Downham Market', 'Salamanca', 'Middelburg']\n    cust_city_id INTEGER, -- example: [51396, 52286, 51912]\n    cust_state_province TEXT, -- example: ['England - Norfolk', 'Salamanca', 'Zeeland']\n    country_id INTEGER, -- example: [52789, 52778, 52770]\n    cust_total TEXT, -- example: ['Customer total']\n    cust_total_id INTEGER, -- example: [52772]\n    cust_src_id INTEGER,\n    cust_eff_from DATE, -- example: ['2019-01-01']\n    cust_eff_to DATE,\n    PRIMARY KEY (cust_id),\n    CONSTRAINT fk_customers_country_id FOREIGN KEY (country_id) REFERENCES countries (country_id)\n);\n\nCREATE TABLE promotions (\n    promo_id INTEGER, -- example: [33, 34, 35]\n    promo_name TEXT, -- example: ['NO PROMOTION #', 'post promotion #20-33', 'newspaper promotion #19-34', 'TV promotion #12-35']\n    promo_subcategory TEXT, -- example: ['NO PROMOTION', 'downtown billboard', 'coupon news', 'TV commercial']\n    promo_category TEXT, -- example: ['NO PROMOTION', 'post', 'newspaper', 'TV']\n    promo_total TEXT, -- example: ['Promotion total']\n    PRIMARY KEY (promo_id)\n);\n\nCREATE TABLE products (\n    prod_id INTEGER, -- example: [14, 19, 21]\n    prod_name TEXT, -- example: ['Pitching Machine and Batting Cage Combo', 'Cricket Bat Bag', 'Speed Trainer Bats and Training Program']\n    prod_total TEXT, -- example: ['TOTAL']\n    prod_src_id INTEGER,\n    prod_eff_to DATE,\n    PRIMARY KEY (prod_id)\n);\n\nCREATE TABLE times (\n    time_id DATE, -- example: ['2019-01-01', '2019-01-02', '2019-01-03']\n    calendar_month_desc TEXT, -- example: ['2020-04']\n    fiscal_month_desc TEXT, -- example: ['2020-04']\n    calendar_quarter_desc CHAR(7), -- example: ['2020-04']\n    calendar_quarter_id INTEGER, -- example: [1770, 1771, 1769]\n    fiscal_quarter_desc CHAR(7), -- example: ['2020-04']\n    calendar_quarter_number INTEGER, -- example: [2, 3, 1]\n    calendar_year INTEGER, -- example: [2019, 2020, 2021]\n    PRIMARY KEY (time_id)\n);\n\nCREATE TABLE channels (\n    channel_id INTEGER, -- example: [2, 3, 4]\n    PRIMARY KEY (channel_id)\n);\n\nCREATE TABLE sales (\n    prod_id INTEGER, -- example: [13, 14, 15]\n    cust_id INTEGER, -- example: [987, 1660, 1762]\n    time_id DATE, -- example: ['2019-01-10', '2019-01-20', '2019-01-30']\n    channel_id INTEGER, -- example: [3, 2, 4]\n    promo_id INTEGER, -- example: [999, 33, 350]\n    quantity_sold INTEGER, -- example: [1]\n    amount_sold REAL, -- example: [1232.16, 1205.99, 1237.31]\n    CONSTRAINT fk_sales_prod_id FOREIGN KEY (prod_id) REFERENCES products (prod_id),\n    CONSTRAINT fk_sales_cust_id FOREIGN KEY (cust_id) REFERENCES customers (cust_id),\n    CONSTRAINT fk_sales_time_id FOREIGN KEY (time_id) REFERENCES times (time_id),\n    CONSTRAINT fk_sales_channel_id FOREIGN KEY (channel_id) REFERENCES channels (channel_id),\n    CONSTRAINT fk_sales_promo_id FOREIGN KEY (promo_id) REFERENCES promotions (promo_id)\n);\n\nCREATE TABLE costs (\n    prod_id INTEGER, -- example: [13, 14, 15]\n    time_id DATE, -- example: ['2019-02-10', '2019-01-19', '2019-02-02']\n    promo_id INTEGER, -- example: [350, 351, 999]\n    channel_id INTEGER, -- example: [2, 3, 4]\n    CONSTRAINT fk_costs_prod_id FOREIGN KEY (prod_id) REFERENCES products (prod_id),\n    CONSTRAINT fk_costs_time_id FOREIGN KEY (time_id) REFERENCES times (time_id),\n    CONSTRAINT fk_costs_promo_id FOREIGN KEY (promo_id) REFERENCES promotions (promo_id),\n    CONSTRAINT fk_costs_channel_id FOREIGN KEY (channel_id) REFERENCES channels (channel_id)\n);\n\nCREATE TABLE supplementary_demographics (\n    cust_id INTEGER, -- example: [100001, 100002, 100003]\n    occupation TEXT, -- example: ['Sales']\n    `unknown` INTEGER, -- example: [0, 1]\n    PRIMARY KEY (cust_id)\n);\n\nCREATE TABLE currency (\n    country TEXT, -- example: ['Singapore', 'Italy', 'China']\n    `year` INTEGER, -- example: [2019, 2020, 2021]\n    to_us REAL, -- example: [1.0, 0.74]\n);",
        "question": "In the United States, for Q4 2019 and Q4 2020, first select only those cities where total sales (with no promotions) rose by at least 20% from Q4 2019 to Q4 2020. Among these cities, rank products by their overall sales (still excluding promotions) in those quarters and take the top 20%. Then compute each top product\u2019s share of total sales in Q4 2019 and Q4 2020 and calculate the difference in share from Q4 2019 to Q4 2020, returning the results in descending order of that share change.",
        "instance_id": "local060",
        "db_id": "complex_oracle"
    },
    {
        "db_desc": "CREATE TABLE countries (\n    country_id INTEGER, -- example: [52769, 52770, 52771]\n    country_name TEXT, -- example: ['Singapore', 'Italy', 'China']\n    country_region TEXT, -- example: ['Asia', 'Europe', 'Americas']\n    country_total TEXT, -- example: ['World total']\n    PRIMARY KEY (country_id)\n);\n\nCREATE TABLE customers (\n    cust_id INTEGER, -- example: [1, 2, 3]\n    cust_city TEXT, -- example: ['Downham Market', 'Salamanca', 'Middelburg']\n    cust_state_province TEXT, -- example: ['England - Norfolk', 'Salamanca', 'Zeeland']\n    country_id INTEGER, -- example: [52789, 52778, 52770]\n    cust_total TEXT, -- example: ['Customer total']\n    cust_total_id INTEGER, -- example: [52772]\n    cust_src_id INTEGER,\n    cust_eff_from DATE, -- example: ['2019-01-01']\n    cust_eff_to DATE,\n    PRIMARY KEY (cust_id),\n    CONSTRAINT fk_customers_country_id FOREIGN KEY (country_id) REFERENCES countries (country_id)\n);\n\nCREATE TABLE promotions (\n    promo_id INTEGER, -- example: [33, 34, 35]\n    promo_name TEXT, -- example: ['post promotion #20-33', 'newspaper promotion #19-34', 'TV promotion #12-35']\n    promo_subcategory_id INTEGER, -- example: [20, 19, 12]\n    promo_category_id INTEGER, -- example: [9, 8, 3]\n    promo_total TEXT, -- example: ['Promotion total']\n    promo_total_id INTEGER, -- example: [1]\n    PRIMARY KEY (promo_id)\n);\n\nCREATE TABLE products (\n    prod_id INTEGER, -- example: [14, 19, 21]\n    prod_name TEXT, -- example: ['Pitching Machine and Batting Cage Combo', 'Cricket Bat Bag', 'Speed Trainer Bats and Training Program']\n    prod_total TEXT, -- example: ['TOTAL']\n    prod_src_id INTEGER,\n    prod_eff_to DATE,\n    PRIMARY KEY (prod_id)\n);\n\nCREATE TABLE times (\n    time_id DATE, -- example: ['2019-01-01', '2019-01-02', '2019-01-03']\n    day_name TEXT, -- example: ['Friday', 'Saturday', 'Sunday']\n    calendar_month_desc TEXT, -- example: ['2020-04']\n    fiscal_month_desc TEXT, -- example: ['2020-04']\n    calendar_quarter_desc CHAR(7), -- example: ['2020-04']\n    calendar_quarter_id INTEGER, -- example: [1770, 1771, 1769]\n    fiscal_quarter_desc CHAR(7), -- example: ['2020-04']\n    fiscal_quarter_id INTEGER, -- example: [1786, 1787, 1785]\n    calendar_quarter_number INTEGER, -- example: [2, 3, 1]\n    fiscal_year_id INTEGER, -- example: [1806, 1807, 1808]\n    PRIMARY KEY (time_id)\n);\n\nCREATE TABLE channels (\n    channel_id INTEGER, -- example: [2, 3, 4]\n    PRIMARY KEY (channel_id)\n);\n\nCREATE TABLE sales (\n    prod_id INTEGER, -- example: [13, 14, 15]\n    cust_id INTEGER, -- example: [987, 1660, 1762]\n    time_id DATE, -- example: ['2019-01-10', '2019-01-20', '2019-01-30']\n    channel_id INTEGER, -- example: [3, 2, 4]\n    promo_id INTEGER, -- example: [999, 33, 350]\n    quantity_sold INTEGER, -- example: [1]\n    amount_sold REAL, -- example: [1232.16, 1205.99, 1237.31]\n    CONSTRAINT fk_sales_prod_id FOREIGN KEY (prod_id) REFERENCES products (prod_id),\n    CONSTRAINT fk_sales_cust_id FOREIGN KEY (cust_id) REFERENCES customers (cust_id),\n    CONSTRAINT fk_sales_time_id FOREIGN KEY (time_id) REFERENCES times (time_id),\n    CONSTRAINT fk_sales_channel_id FOREIGN KEY (channel_id) REFERENCES channels (channel_id),\n    CONSTRAINT fk_sales_promo_id FOREIGN KEY (promo_id) REFERENCES promotions (promo_id)\n);\n\nCREATE TABLE costs (\n    prod_id INTEGER, -- example: [13, 14, 15]\n    time_id DATE, -- example: ['2019-02-10', '2019-01-19', '2019-02-02']\n    promo_id INTEGER, -- example: [350, 351, 999]\n    channel_id INTEGER, -- example: [2, 3, 4]\n    CONSTRAINT fk_costs_prod_id FOREIGN KEY (prod_id) REFERENCES products (prod_id),\n    CONSTRAINT fk_costs_time_id FOREIGN KEY (time_id) REFERENCES times (time_id),\n    CONSTRAINT fk_costs_promo_id FOREIGN KEY (promo_id) REFERENCES promotions (promo_id),\n    CONSTRAINT fk_costs_channel_id FOREIGN KEY (channel_id) REFERENCES channels (channel_id)\n);\n\nCREATE TABLE supplementary_demographics (\n    cust_id INTEGER, -- example: [100001, 100002, 100003]\n    occupation TEXT, -- example: ['Sales']\n    `unknown` INTEGER, -- example: [0, 1]\n    misc INTEGER, -- example: [0, 1]\n    PRIMARY KEY (cust_id)\n);\n\nCREATE TABLE currency (\n    country TEXT, -- example: ['Singapore', 'Italy', 'China']\n    `month` INTEGER, -- example: [5, 6, 7]\n    to_us REAL, -- example: [1.0, 0.74]\n);",
        "question": "Among all products sold in the United States with promo_id=999, considering only those cities whose sales increased by at least 20% from Q4 2019 (calendar_quarter_id=1772) to Q4 2020 (calendar_quarter_id=1776), which product that ranks in the top 20% of total sales has the smallest percentage-point change in its share of total sales between these two quarters?",
        "instance_id": "local063",
        "db_id": "complex_oracle"
    },
    {
        "db_desc": "CREATE TABLE countries (\n    country_id INTEGER, -- example: [52769, 52770, 52771]\n    country_name TEXT, -- example: ['France']\n    country_region TEXT, -- example: ['Asia', 'Europe', 'Americas']\n    country_total TEXT, -- example: ['World total']\n    PRIMARY KEY (country_id)\n);\n\nCREATE TABLE customers (\n    cust_id INTEGER, -- example: [1, 2, 3]\n    cust_city TEXT, -- example: ['Downham Market', 'Salamanca', 'Middelburg']\n    cust_city_id INTEGER, -- example: [51396, 52286, 51912]\n    country_id INTEGER, -- example: [52789, 52778, 52770]\n    cust_total TEXT, -- example: ['Customer total']\n    cust_total_id INTEGER, -- example: [52772]\n    cust_src_id INTEGER,\n    cust_eff_from DATE, -- example: ['2019-01-01']\n    cust_eff_to DATE,\n    PRIMARY KEY (cust_id),\n    CONSTRAINT fk_customers_country_id FOREIGN KEY (country_id) REFERENCES countries (country_id)\n);\n\nCREATE TABLE promotions (\n    promo_id INTEGER, -- example: [33, 34, 35]\n    promo_name TEXT, -- example: ['post promotion #20-33', 'newspaper promotion #19-34', 'TV promotion #12-35']\n    promo_subcategory_id INTEGER, -- example: [20, 19, 12]\n    promo_category TEXT, -- example: ['post', 'newspaper', 'TV']\n    promo_category_id INTEGER, -- example: [9, 8, 3]\n    promo_cost REAL, -- example: [77200.0, 22400.0, 61600.0]\n    promo_begin_date DATE, -- example: ['2019-09-15', '2019-07-16', '2019-11-30']\n    promo_total TEXT, -- example: ['Promotion total']\n    promo_total_id INTEGER, -- example: [1]\n    PRIMARY KEY (promo_id)\n);\n\nCREATE TABLE products (\n    prod_id INTEGER, -- example: [14, 19, 21]\n    prod_total_id INTEGER, -- example: [1]\n    prod_src_id INTEGER,\n    prod_eff_to DATE,\n    PRIMARY KEY (prod_id)\n);\n\nCREATE TABLE times (\n    time_id DATE, -- example: ['2019-01-01', '2019-01-02', '2019-01-03']\n    calendar_month_number INTEGER, -- example: [5, 6, 7]\n    calendar_month_desc TEXT, -- example: ['2019-05', '2019-06', '2019-07']\n    calendar_month_id INTEGER, -- example: [1676, 1677, 1678]\n    fiscal_month_desc TEXT, -- example: ['2019-05', '2019-06', '2019-07']\n    fiscal_month_id INTEGER, -- example: [1724, 1725, 1726]\n    days_in_cal_month INTEGER, -- example: [31, 30, 28]\n    calendar_month_name TEXT, -- example: ['April']\n    fiscal_month_name TEXT, -- example: ['April']\n    calendar_year INTEGER, -- example: [2019, 2020, 2021]\n    PRIMARY KEY (time_id)\n);\n\nCREATE TABLE channels (\n    channel_id INTEGER, -- example: [2, 3, 4]\n    channel_desc TEXT, -- example: ['Partners', 'Direct Sales', 'Internet']\n    channel_class TEXT, -- example: ['Others', 'Direct', 'Indirect']\n    channel_class_id INTEGER, -- example: [14, 12, 13]\n    channel_total TEXT, -- example: ['Channel total']\n    channel_total_id INTEGER, -- example: [1]\n    PRIMARY KEY (channel_id)\n);\n\nCREATE TABLE sales (\n    prod_id INTEGER, -- example: [13, 14, 15]\n    cust_id INTEGER, -- example: [987, 1660, 1762]\n    time_id DATE, -- example: ['2019-01-10', '2019-01-20', '2019-01-30']\n    channel_id INTEGER, -- example: [3, 2, 4]\n    promo_id INTEGER, -- example: [999, 33, 350]\n    quantity_sold INTEGER, -- example: [1]\n    amount_sold REAL, -- example: [1232.16, 1205.99, 1237.31]\n    CONSTRAINT fk_sales_prod_id FOREIGN KEY (prod_id) REFERENCES products (prod_id),\n    CONSTRAINT fk_sales_cust_id FOREIGN KEY (cust_id) REFERENCES customers (cust_id),\n    CONSTRAINT fk_sales_time_id FOREIGN KEY (time_id) REFERENCES times (time_id),\n    CONSTRAINT fk_sales_channel_id FOREIGN KEY (channel_id) REFERENCES channels (channel_id),\n    CONSTRAINT fk_sales_promo_id FOREIGN KEY (promo_id) REFERENCES promotions (promo_id)\n);\n\nCREATE TABLE costs (\n    prod_id INTEGER, -- example: [13, 14, 15]\n    time_id DATE, -- example: ['2019-02-10', '2019-01-19', '2019-02-02']\n    promo_id INTEGER, -- example: [350, 351, 999]\n    channel_id INTEGER, -- example: [2, 3, 4]\n    unit_cost REAL, -- example: [813.07, 886.45, 863.64]\n    unit_price REAL, -- example: [1237.31, 1108.99, 1259.99]\n    CONSTRAINT fk_costs_prod_id FOREIGN KEY (prod_id) REFERENCES products (prod_id),\n    CONSTRAINT fk_costs_time_id FOREIGN KEY (time_id) REFERENCES times (time_id),\n    CONSTRAINT fk_costs_promo_id FOREIGN KEY (promo_id) REFERENCES promotions (promo_id),\n    CONSTRAINT fk_costs_channel_id FOREIGN KEY (channel_id) REFERENCES channels (channel_id)\n);\n\nCREATE TABLE supplementary_demographics (\n    cust_id INTEGER, -- example: [100001, 100002, 100003]\n    occupation TEXT, -- example: ['Sales']\n    `unknown` INTEGER, -- example: [0, 1]\n    PRIMARY KEY (cust_id)\n);\n\nCREATE TABLE currency (\n    country TEXT, -- example: ['France']\n    `year` INTEGER, -- example: [2019, 2020, 2021]\n    `month` INTEGER, -- example: [5, 6, 7]\n    to_us REAL, -- example: [1.0, 0.74]\n);",
        "question": "What is the average projected monthly sales in USD for France in 2021, considering only product sales with promotions where promo_total_id = 1 and channels where channel_total_id = 1, by taking each product\u2019s monthly sales from 2019 and 2020, calculating the growth rate from 2019 to 2020 for that same product and month, applying this growth rate to project 2021 monthly sales, converting all projected 2021 amounts to USD with the 2021 exchange rates, and finally averaging and listing them by month?",
        "instance_id": "local061",
        "db_id": "complex_oracle"
    },
    {
        "db_desc": "CREATE TABLE all_star (\n    player_id TEXT, -- example: ['gomezle01', 'ferreri01', 'gehrilo01']\n    `year` INTEGER, -- example: [1933, 1934, 1935]\n    game_num INTEGER, -- example: [0, 2, 1]\n    game_id TEXT, -- example: ['ALS193307060', 'NLS193407100', 'ALS193507080']\n\nCREATE TABLE appearances (\n    `year` INTEGER, -- example: [1871, 1872, 1873]\n    player_id TEXT, -- example: ['barnero01', 'barrofr01', 'birdsda01']\n    g_all NUMERIC, -- example: [31, 18, 29]\n    g_batting INTEGER, -- example: [31, 18, 29]\n    g_of INTEGER, -- example: [0, 17, 27]\n\nCREATE TABLE manager_award (\n    player_id TEXT, -- example: ['larusto01', 'lasorto01', 'andersp01']\n    `year` INTEGER, -- example: [1983, 1984, 1985]\n    notes NUMERIC\n);\n\nCREATE TABLE player_award (\n    player_id TEXT, -- example: ['bondto01', 'hinespa01', 'heckegu01']\n    `year` INTEGER, -- example: [1877, 1878, 1884]\n\nCREATE TABLE manager_award_vote (\n    `year` INTEGER, -- example: [1983, 1984, 1985]\n    player_id TEXT, -- example: ['altobjo01', 'coxbo01', 'larusto01']\n    points_won INTEGER, -- example: [7, 4, 17]\n    votes_first INTEGER, -- example: [7, 4, 17]\n);\n\nCREATE TABLE player_award_vote (\n    `year` INTEGER, -- example: [1956, 1957, 1958]\n    player_id TEXT, -- example: ['fordwh01', 'maglisa01', 'newcodo01']\n    points_won NUMERIC, -- example: [1, 4, 10]\n    votes_first NUMERIC, -- example: [1, 4, 10]\n);\n\nCREATE TABLE batting (\n    player_id TEXT, -- example: ['abercda01', 'addybo01', 'allisar01']\n    `year` INTEGER, -- example: [1871, 1872, 1873]\n    ab NUMERIC, -- example: [4, 118, 137]\n    `double` NUMERIC, -- example: [0, 6, 4]\n    so NUMERIC, -- example: [0, 5, 2]\n\nCREATE TABLE batting_postseason (\n    `year` INTEGER, -- example: [1884, 1885, 1886]\n    round TEXT, -- example: ['WS', 'CS', 'ALCS']\n    player_id TEXT, -- example: ['becanbu01', 'bradyst01', 'esterdu01']\n    ab INTEGER, -- example: [2, 10, 3]\n    `double` INTEGER, -- example: [0, 1, 2]\n    so INTEGER, -- example: [0, 1, 3]\n\nCREATE TABLE player_college (\n    player_id TEXT, -- example: ['aardsda01', 'abadan01', 'abbeybe01']\n    `year` INTEGER, -- example: [2001, 2002, 2003]\n);\n\nCREATE TABLE fielding (\n    player_id TEXT, -- example: ['abercda01', 'addybo01', 'allisar01']\n    `year` INTEGER, -- example: [1871, 1872, 1873]\n    a NUMERIC, -- example: [3, 72, 14]\n\nCREATE TABLE fielding_outfield (\n    player_id TEXT, -- example: ['allisar01', 'ansonca01', 'armstbo01']\n    `year` INTEGER, -- example: [1871, 1872, 1873]\n\nCREATE TABLE fielding_postseason (\n    player_id TEXT, -- example: ['colliji01', 'crigelo01', 'dinnebi01']\n    `year` INTEGER, -- example: [1903, 1905, 1906]\n    round TEXT, -- example: ['WS', 'ALCS', 'NLCS']\n    a INTEGER, -- example: [18, 7, 9]\n\nCREATE TABLE hall_of_fame (\n    player_id TEXT, -- example: ['cobbty01', 'ruthba01', 'wagneho01']\n    yearid INTEGER, -- example: [1936, 1937, 1938]\n    needed NUMERIC, -- example: [170, 59, 151]\n    category TEXT, -- example: ['Player']\n\nCREATE TABLE home_game (\n    `year` INTEGER, -- example: [1871, 1872, 1873]\n    span_first TEXT, -- example: ['1871-05-16', '1871-05-27', '1871-05-08']\n    span_last TEXT, -- example: ['1871-10-07', '1871-05-27', '1871-09-29']\n    games INTEGER, -- example: [16, 1, 2]\n\nCREATE TABLE manager (\n    player_id TEXT, -- example: ['wrighha01', 'woodji01', 'paborch01']\n    `year` INTEGER, -- example: [1871, 1872, 1873]\n    inseason INTEGER, -- example: [1, 2, 3]\n\nCREATE TABLE manager_half (\n    player_id TEXT, -- example: ['hanlone01', 'vanhage01', 'waltzjo99']\n    `year` INTEGER, -- example: [1892, 1981]\n    inseason INTEGER, -- example: [3, 1, 2]\n    half INTEGER, -- example: [1, 2]\n\nCREATE TABLE player (\n    player_id TEXT, -- example: ['aardsda01', 'aaronha01', 'aaronto01']\n    birth_month NUMERIC, -- example: [12, 2, 8]\n    death_month NUMERIC, -- example: [8, 5, 1]\n    name_first TEXT, -- example: ['Count', 'David', 'Hank', 'Tommie']\n    name_last TEXT, -- example: ['Day']\n    weight NUMERIC, -- example: [220, 180, 190]\n    bats TEXT, -- example: ['R', 'L', 'B']\n    throws TEXT, -- example: ['R', 'L']\n    debut TEXT, -- example: ['2004-04-06', '1954-04-13', '1962-04-10']\n    final_game TEXT, -- example: ['2015-08-23', '1976-10-03', '1971-09-26']\n\nCREATE TABLE park (\n    city TEXT, -- example: ['Albany', 'Altoona', 'Anaheim']\n    country TEXT, -- example: ['US', 'MX', 'CA']\n);\n\nCREATE TABLE pitching (\n    player_id TEXT, -- example: ['bechtge01', 'brainas01', 'fergubo01']\n    `year` INTEGER, -- example: [1871, 1872, 1873]\n    sv INTEGER, -- example: [0, 1, 3]\n    so INTEGER, -- example: [1, 13, 0]\n\nCREATE TABLE pitching_postseason (\n    player_id TEXT, -- example: ['becanbu01', 'keefeti01', 'radboch01']\n    `year` INTEGER, -- example: [1884, 1885, 1886]\n    round TEXT, -- example: ['WS', 'CS', 'ALCS']\n    sv INTEGER, -- example: [0, 1, 2]\n    so INTEGER, -- example: [1, 12, 17]\n\nCREATE TABLE salary (\n    `year` INTEGER, -- example: [1985, 1986, 1987]\n    player_id TEXT, -- example: ['barkele01', 'bedrost01', 'benedbr01']\n    salary INTEGER, -- example: [870000, 550000, 545000]\n);\n\nCREATE TABLE college (\n    city TEXT, -- example: ['Abilene', 'Garden City', 'Adrian']\n    country TEXT, -- example: ['USA']\n);\n\nCREATE TABLE postseason (\n    `year` INTEGER, -- example: [1884, 1885, 1886]\n    round TEXT, -- example: ['WS', 'CS', 'ALCS']\n    team_id_winner TEXT, -- example: ['PRO', 'CHC', 'STL']\n    league_id_winner TEXT, -- example: ['NL', 'AA', 'AL']\n    wins INTEGER, -- example: [3, 4, 10]\n\nCREATE TABLE team (\n    `year` INTEGER, -- example: [1871, 1872, 1873]\n    wc_win TEXT, -- example: ['N', 'Y']\n    ab INTEGER, -- example: [1372, 1196, 1186]\n    `double` INTEGER, -- example: [70, 52, 35]\n    so NUMERIC, -- example: [19, 22, 25]\n    sv INTEGER, -- example: [3, 1, 0]\n    ha INTEGER, -- example: [367, 308, 346]\n    fp NUMERIC, -- example: [0.83, 0.82, 0.81]\n    park TEXT, -- example: ['South End Grounds I', 'Union Base-Ball Grounds', 'National Association Grounds']\n    team_id_br TEXT, -- example: ['BOS', 'CHI', 'CLE']\n    team_id_lahman45 TEXT, -- example: ['BS1', 'CH1', 'CL1']\n\nCREATE TABLE team_franchise (\n    \n\nCREATE TABLE team_half (\n    `year` INTEGER, -- example: [1981]\n    half INTEGER, -- example: [1, 2]",
        "question": "Could you help me calculate the average single career span value in years for all baseball players? Please precise the result as a float number. First, calculate the difference in years, months, and days between the debut and final game dates. For each player, the career span is computed as the sum of the absolute number of years, plus the absolute number of months divided by 12, plus the absolute number of days divided by 365. Round each part to two decimal places before summing. Finally, average the career spans and round the result to a float number.",
        "instance_id": "local007",
        "db_id": "Baseball"
    },
    {
        "db_desc": "CREATE TABLE countries (\n    country_id INTEGER, -- example: [52769, 52770, 52771]\n    country_name TEXT, -- example: ['France']\n    PRIMARY KEY (country_id)\n);\n\nCREATE TABLE customers (\n    cust_id INTEGER, -- example: [1, 2, 3]\n    country_id INTEGER, -- example: [52789, 52778, 52770]\n    cust_total TEXT, -- example: ['Customer total']\n    cust_total_id INTEGER, -- example: [52772]\n    cust_src_id INTEGER,\n    cust_eff_from DATE, -- example: ['2019-01-01']\n    cust_eff_to DATE,\n    PRIMARY KEY (cust_id),\n    CONSTRAINT fk_customers_country_id FOREIGN KEY (country_id) REFERENCES countries (country_id)\n);\n\nCREATE TABLE promotions (\n    promo_id INTEGER, -- example: [33, 34, 35]\n    promo_category_id INTEGER, -- example: [9, 8, 3]\n    promo_total TEXT, -- example: ['Promotion total']\n    promo_total_id INTEGER, -- example: [1]\n    PRIMARY KEY (promo_id)\n);\n\nCREATE TABLE products (\n    prod_id INTEGER, -- example: [14, 19, 21]\n    prod_total_id INTEGER, -- example: [1]\n    prod_src_id INTEGER,\n    prod_eff_to DATE,\n    PRIMARY KEY (prod_id)\n);\n\nCREATE TABLE times (\n    time_id DATE, -- example: ['2019-01-01', '2019-01-02', '2019-01-03']\n    calendar_month_desc TEXT, -- example: ['2019-05', '2019-06', '2019-07']\n    calendar_month_id INTEGER, -- example: [1676, 1677, 1678]\n    fiscal_month_desc TEXT, -- example: ['2019-05', '2019-06', '2019-07']\n    fiscal_month_id INTEGER, -- example: [1724, 1725, 1726]\n    end_of_cal_month DATE, -- example: ['2019-05-31', '2019-06-30', '2019-07-31']\n    fiscal_month_name TEXT, -- example: ['May', 'June', 'July']\n    calendar_year INTEGER, -- example: [2019, 2020, 2021]\n    PRIMARY KEY (time_id)\n);\n\nCREATE TABLE channels (\n    channel_id INTEGER, -- example: [2, 3, 4]\n    channel_class_id INTEGER, -- example: [14, 12, 13]\n    channel_total TEXT, -- example: ['Channel total']\n    channel_total_id INTEGER, -- example: [1]\n    PRIMARY KEY (channel_id)\n);\n\nCREATE TABLE sales (\n    prod_id INTEGER, -- example: [13, 14, 15]\n    cust_id INTEGER, -- example: [987, 1660, 1762]\n    time_id DATE, -- example: ['2019-01-10', '2019-01-20', '2019-01-30']\n    channel_id INTEGER, -- example: [3, 2, 4]\n    promo_id INTEGER, -- example: [999, 33, 350]\n    quantity_sold INTEGER, -- example: [1]\n    amount_sold REAL, -- example: [1232.16, 1205.99, 1237.31]\n    CONSTRAINT fk_sales_prod_id FOREIGN KEY (prod_id) REFERENCES products (prod_id),\n    CONSTRAINT fk_sales_cust_id FOREIGN KEY (cust_id) REFERENCES customers (cust_id),\n    CONSTRAINT fk_sales_time_id FOREIGN KEY (time_id) REFERENCES times (time_id),\n    CONSTRAINT fk_sales_channel_id FOREIGN KEY (channel_id) REFERENCES channels (channel_id),\n    CONSTRAINT fk_sales_promo_id FOREIGN KEY (promo_id) REFERENCES promotions (promo_id)\n);\n\nCREATE TABLE costs (\n    prod_id INTEGER, -- example: [13, 14, 15]\n    time_id DATE, -- example: ['2019-02-10', '2019-01-19', '2019-02-02']\n    promo_id INTEGER, -- example: [350, 351, 999]\n    channel_id INTEGER, -- example: [2, 3, 4]\n    unit_cost REAL, -- example: [813.07, 886.45, 863.64]\n    unit_price REAL, -- example: [1237.31, 1108.99, 1259.99]\n    CONSTRAINT fk_costs_prod_id FOREIGN KEY (prod_id) REFERENCES products (prod_id),\n    CONSTRAINT fk_costs_time_id FOREIGN KEY (time_id) REFERENCES times (time_id),\n    CONSTRAINT fk_costs_promo_id FOREIGN KEY (promo_id) REFERENCES promotions (promo_id),\n    CONSTRAINT fk_costs_channel_id FOREIGN KEY (channel_id) REFERENCES channels (channel_id)\n);\n\nCREATE TABLE supplementary_demographics (\n    cust_id INTEGER, -- example: [100001, 100002, 100003]\n    occupation TEXT, -- example: ['Sales']\n    `unknown` INTEGER, -- example: [0, 1]\n    misc INTEGER, -- example: [0, 1]\n    PRIMARY KEY (cust_id)\n);\n\nCREATE TABLE currency (\n    country TEXT, -- example: ['France']\n    `year` INTEGER, -- example: [2019, 2020, 2021]\n    `month` INTEGER, -- example: [5, 6, 7]\n    to_us REAL, -- example: [1.0, 0.74]\n);",
        "question": "What is the median of the average monthly projected sales in USD for France in 2021, calculated by using the monthly sales data from 2019 and 2020 (filtered by promo_total_id=1 and channel_total_id=1), applying the growth rate from 2019 to 2020 to project 2021, converting to USD based on the currency table, and then determining the monthly averages before finding their median?",
        "instance_id": "local050",
        "db_id": "complex_oracle"
    },
    {
        "db_desc": "CREATE TABLE countries (\n    country_id INTEGER, -- example: [52769, 52770, 52771]\n    country_name TEXT, -- example: ['Italy']\n    country_region TEXT, -- example: ['Asia', 'Europe', 'Americas']\n    country_total TEXT, -- example: ['World total']\n    PRIMARY KEY (country_id)\n);\n\nCREATE TABLE customers (\n    cust_id INTEGER, -- example: [1, 2, 3]\n    cust_last_name TEXT, -- example: ['Buckett']\n    cust_city TEXT, -- example: ['Downham Market', 'Salamanca', 'Middelburg']\n    cust_city_id INTEGER, -- example: [51396, 52286, 51912]\n    country_id INTEGER, -- example: [52789, 52778, 52770]\n    cust_main_phone_number TEXT, -- example: ['127-379-8954', '680-327-1419', '115-509-3391']\n    cust_total TEXT, -- example: ['Customer total']\n    cust_total_id INTEGER, -- example: [52772]\n    cust_src_id INTEGER,\n    cust_eff_from DATE, -- example: ['2019-01-01']\n    cust_eff_to DATE,\n    PRIMARY KEY (cust_id),\n    CONSTRAINT fk_customers_country_id FOREIGN KEY (country_id) REFERENCES countries (country_id)\n);\n\nCREATE TABLE promotions (\n    promo_id INTEGER, -- example: [33, 34, 35]\n    promo_cost REAL, -- example: [77200.0, 22400.0, 61600.0]\n    promo_total TEXT, -- example: ['Promotion total']\n    PRIMARY KEY (promo_id)\n);\n\nCREATE TABLE products (\n    prod_id INTEGER, -- example: [14, 19, 21]\n    prod_unit_of_measure TEXT, -- example: ['U']\n    prod_list_price REAL, -- example: [999.99, 55.99, 899.99]\n    prod_min_price REAL, -- example: [999.99, 55.99, 899.99]\n    prod_total TEXT, -- example: ['TOTAL']\n    prod_src_id INTEGER,\n    prod_eff_to DATE,\n    PRIMARY KEY (prod_id)\n);\n\nCREATE TABLE times (\n    time_id DATE, -- example: ['2019-01-01', '2019-01-02', '2019-01-03']\n    calendar_month_desc TEXT, -- example: ['2019-05', '2019-06', '2019-07']\n    fiscal_month_desc TEXT, -- example: ['2019-05', '2019-06', '2019-07']\n    calendar_month_name TEXT, -- example: ['December']\n    fiscal_month_name TEXT, -- example: ['December']\n    calendar_year INTEGER, -- example: [2019, 2020, 2021]\n    PRIMARY KEY (time_id)\n);\n\nCREATE TABLE channels (\n    channel_id INTEGER, -- example: [2, 3, 4]\n    PRIMARY KEY (channel_id)\n);\n\nCREATE TABLE sales (\n    prod_id INTEGER, -- example: [13, 14, 15]\n    cust_id INTEGER, -- example: [987, 1660, 1762]\n    time_id DATE, -- example: ['2019-01-10', '2019-01-20', '2019-01-30']\n    channel_id INTEGER, -- example: [3, 2, 4]\n    promo_id INTEGER, -- example: [999, 33, 350]\n    quantity_sold INTEGER, -- example: [1]\n    amount_sold REAL, -- example: [1232.16, 1205.99, 1237.31]\n    CONSTRAINT fk_sales_prod_id FOREIGN KEY (prod_id) REFERENCES products (prod_id),\n    CONSTRAINT fk_sales_cust_id FOREIGN KEY (cust_id) REFERENCES customers (cust_id),\n    CONSTRAINT fk_sales_time_id FOREIGN KEY (time_id) REFERENCES times (time_id),\n    CONSTRAINT fk_sales_channel_id FOREIGN KEY (channel_id) REFERENCES channels (channel_id),\n    CONSTRAINT fk_sales_promo_id FOREIGN KEY (promo_id) REFERENCES promotions (promo_id)\n);\n\nCREATE TABLE costs (\n    prod_id INTEGER, -- example: [13, 14, 15]\n    time_id DATE, -- example: ['2019-02-10', '2019-01-19', '2019-02-02']\n    promo_id INTEGER, -- example: [350, 351, 999]\n    channel_id INTEGER, -- example: [2, 3, 4]\n    unit_cost REAL, -- example: [813.07, 886.45, 863.64]\n    unit_price REAL, -- example: [1237.31, 1108.99, 1259.99]\n    CONSTRAINT fk_costs_prod_id FOREIGN KEY (prod_id) REFERENCES products (prod_id),\n    CONSTRAINT fk_costs_time_id FOREIGN KEY (time_id) REFERENCES times (time_id),\n    CONSTRAINT fk_costs_promo_id FOREIGN KEY (promo_id) REFERENCES promotions (promo_id),\n    CONSTRAINT fk_costs_channel_id FOREIGN KEY (channel_id) REFERENCES channels (channel_id)\n);\n\nCREATE TABLE supplementary_demographics (\n    cust_id INTEGER, -- example: [100001, 100002, 100003]\n    `unknown` INTEGER, -- example: [0, 1]\n    PRIMARY KEY (cust_id)\n);\n\nCREATE TABLE currency (\n    country TEXT, -- example: ['Italy']\n    `year` INTEGER, -- example: [2019, 2020, 2021]\n    `month` INTEGER, -- example: [5, 6, 7]",
        "question": "Please group all Italian customers into ten buckets for December 2021 by summing their profits from all products purchased (where profit is calculated as quantity_sold multiplied by the difference between unit_price and unit_cost), then divide the overall range of total monthly profits into ten equal intervals. For each bucket, provide the number of customers, and identify the minimum and maximum total profits within that bucket.",
        "instance_id": "local062",
        "db_id": "complex_oracle"
    },
    {
        "db_desc": "CREATE TABLE countries (\n    country_id INTEGER, -- example: [52769, 52770, 52771]\n    country_name TEXT, -- example: ['Italy']\n    PRIMARY KEY (country_id)\n);\n\nCREATE TABLE customers (\n    cust_id INTEGER, -- example: [1, 2, 3]\n    country_id INTEGER, -- example: [52789, 52778, 52770]\n    cust_src_id INTEGER,\n    cust_eff_to DATE,\n    PRIMARY KEY (cust_id),\n    CONSTRAINT fk_customers_country_id FOREIGN KEY (country_id) REFERENCES countries (country_id)\n);\n\nCREATE TABLE promotions (\n    promo_id INTEGER, -- example: [33, 34, 35]\n    PRIMARY KEY (promo_id)\n);\n\nCREATE TABLE products (\n    prod_id INTEGER, -- example: [14, 19, 21]\n    prod_src_id INTEGER,\n    prod_eff_to DATE,\n    PRIMARY KEY (prod_id)\n);\n\nCREATE TABLE times (\n    time_id DATE, -- example: ['2019-01-01', '2019-01-02', '2019-01-03']\n    calendar_month_desc TEXT, -- example: ['2021-12']\n    fiscal_month_desc TEXT, -- example: ['2021-12']\n    calendar_month_name TEXT, -- example: ['December']\n    fiscal_month_name TEXT, -- example: ['December']\n    calendar_year INTEGER, -- example: [2019, 2020, 2021]\n    PRIMARY KEY (time_id)\n);\n\nCREATE TABLE channels (\n    channel_id INTEGER, -- example: [2, 3, 4]\n    PRIMARY KEY (channel_id)\n);\n\nCREATE TABLE sales (\n    prod_id INTEGER, -- example: [13, 14, 15]\n    cust_id INTEGER, -- example: [987, 1660, 1762]\n    time_id DATE, -- example: ['2019-01-10', '2019-01-20', '2019-01-30']\n    channel_id INTEGER, -- example: [3, 2, 4]\n    promo_id INTEGER, -- example: [999, 33, 350]\n    quantity_sold INTEGER, -- example: [1]\n    amount_sold REAL, -- example: [1232.16, 1205.99, 1237.31]\n    CONSTRAINT fk_sales_prod_id FOREIGN KEY (prod_id) REFERENCES products (prod_id),\n    CONSTRAINT fk_sales_cust_id FOREIGN KEY (cust_id) REFERENCES customers (cust_id),\n    CONSTRAINT fk_sales_time_id FOREIGN KEY (time_id) REFERENCES times (time_id),\n    CONSTRAINT fk_sales_channel_id FOREIGN KEY (channel_id) REFERENCES channels (channel_id),\n    CONSTRAINT fk_sales_promo_id FOREIGN KEY (promo_id) REFERENCES promotions (promo_id)\n);\n\nCREATE TABLE costs (\n    prod_id INTEGER, -- example: [13, 14, 15]\n    time_id DATE, -- example: ['2019-02-10', '2019-01-19', '2019-02-02']\n    promo_id INTEGER, -- example: [350, 351, 999]\n    channel_id INTEGER, -- example: [2, 3, 4]\n    unit_cost REAL, -- example: [813.07, 886.45, 863.64]\n    CONSTRAINT fk_costs_prod_id FOREIGN KEY (prod_id) REFERENCES products (prod_id),\n    CONSTRAINT fk_costs_time_id FOREIGN KEY (time_id) REFERENCES times (time_id),\n    CONSTRAINT fk_costs_promo_id FOREIGN KEY (promo_id) REFERENCES promotions (promo_id),\n    CONSTRAINT fk_costs_channel_id FOREIGN KEY (channel_id) REFERENCES channels (channel_id)\n);\n\nCREATE TABLE supplementary_demographics (\n    cust_id INTEGER, -- example: [100001, 100002, 100003]\n    occupation TEXT, -- example: ['Sales']\n    PRIMARY KEY (cust_id)\n);\n\nCREATE TABLE currency (\n    country TEXT, -- example: ['Italy']",
        "question": "Can you provide the highest and lowest profits for Italian customers segmented into ten evenly divided tiers based on their December 2021 sales profits?",
        "instance_id": "local067",
        "db_id": "complex_oracle"
    },
    {
        "db_desc": "CREATE TABLE aliens_details (\n    \n\nCREATE TABLE skills_dim (\n    \n\nCREATE TABLE legislators_terms (\n    address TEXT, -- example: ['393 RUSSELL SENATE OFFICE BUILDING WASHI', '1520 Longworth House Office Building; Wa', '302 HART SENATE OFFICE BUILDING WASHINGT']\n    office TEXT, -- example: ['393 Russell Senate Office Building', '1520 Longworth House Office Building', '302 Hart Senate Office Building']\n\nCREATE TABLE cities_currencies (\n    \n\nCREATE TABLE legislators (\n    first_name TEXT, -- example: ['Sherrod', 'Maria', 'Benjamin']\n    last_name TEXT, -- example: ['Brown', 'Cantwell', 'Cardin']\n    nickname TEXT, -- example: ['Bob', 'Bernie', 'Jim']\n    other_names_middle REAL,\n    birthday TEXT, -- example: ['1952-11-09', '1958-10-13', '1943-10-05']\n\nCREATE TABLE skills_job_dim (\n    \n\nCREATE TABLE job_postings_fact (\n    job_title_short TEXT, -- example: ['Data Analyst', 'Senior Data Engineer', 'Senior Data Analyst']\n    job_location TEXT, -- example: ['China']\n    search_location TEXT, -- example: ['China']\n    job_country TEXT, -- example: ['China']\n\nCREATE TABLE alien_data (\n    id INTEGER, -- example: [1, 2, 3]\n    first_name TEXT, -- example: ['tyrus', 'ealasaid', 'violette']\n    last_name TEXT, -- example: ['streak', 'records', 'july', 'china']\n    email TEXT, -- example: ['twrey0@sakura.ne.jp', 'estlouis1@amazon.co.uk', 'vsawood2@yolasite.com']\n    age INTEGER, -- example: [307, 351, 349]\n    country TEXT, -- example: ['united states']\n);\n\nCREATE TABLE cities_countries (\n    country_name TEXT, -- example: ['china']\n    region TEXT, -- example: ['asia', 'europe', 'africa']\n\nCREATE TABLE legislation_date_dim (\n    `date` TEXT, -- example: ['1917-01-01', '1917-01-02', '1917-01-03']\n    month_name TEXT, -- example: ['July']\n    day_of_month INTEGER, -- example: [1, 2, 3]\n);\n\nCREATE TABLE cities (\n    city_id INTEGER, -- example: [1, 2, 3]\n    city_name TEXT, -- example: ['date']\n    capital INTEGER, -- example: [1, 0]\n    insert_date TEXT, -- example: ['2022-01-12', '2021-08-22', '2021-03-11']\n);\n\nCREATE TABLE aliens_location (\n    country TEXT, -- example: ['United States']\n\nCREATE TABLE aliens (\n    id INTEGER, -- example: [1, 2, 3]\n    first_name TEXT, -- example: ['Tyrus', 'Ealasaid', 'Violette']\n    last_name TEXT, -- example: ['Streak', 'Records', 'July', 'China']\n    email TEXT, -- example: ['twrey0@sakura.ne.jp', 'estlouis1@amazon.co.uk', 'vsawood2@yolasite.com']\n\nCREATE TABLE cities_languages (\n    `language` TEXT, -- example: ['chinese', 'pashto', 'persian', 'uzbek']\n\nCREATE TABLE job_company (\n    name TEXT, -- example: ['LIST', 'Kaderabotim.bg', 'acalerate', 'Group S']",
        "question": "Please examine our records for Chinese cities in July 2021 and identify both the shortest and longest streaks of consecutive date entries. List the dates along with their corresponding city names, capitalizing the first letter of each city name, for these streaks.",
        "instance_id": "local070",
        "db_id": "city_legislation"
    },
    {
        "db_desc": "CREATE TABLE aliens_details (\n    \n\nCREATE TABLE skills_dim (\n    \n\nCREATE TABLE legislators_terms (\n    id_bioguide TEXT, -- example: ['B000944', 'C000127', 'C000141']\n    state TEXT, -- example: ['OH', 'WA', 'MD']\n    how TEXT, -- example: ['appointment']\n    address TEXT, -- example: ['393 RUSSELL SENATE OFFICE BUILDING WASHI', '1520 Longworth House Office Building; Wa', '302 HART SENATE OFFICE BUILDING WASHINGT']\n    phone TEXT, -- example: ['202-224-6324', '202-225-6611', '202-224-3244']\n    office TEXT, -- example: ['393 Russell Senate Office Building', '1520 Longworth House Office Building', '302 Hart Senate Office Building']\n\nCREATE TABLE cities_currencies (\n    country_code_2 TEXT, -- example: ['af', 'al', 'dz']\n    currency_code TEXT, -- example: ['afn', 'all', 'dzd']\n);\n\nCREATE TABLE legislators (\n    first_name TEXT, -- example: ['June']\n    last_name TEXT, -- example: ['Brown', 'Cantwell', 'Cardin']\n    middle_name TEXT, -- example: ['June']\n    other_names_middle REAL,\n    birthday TEXT, -- example: ['1952-11-09', '1958-10-13', '1943-10-05']\n    id_bioguide TEXT, -- example: ['B000944', 'C000127', 'C000141']\n    id_wikipedia TEXT, -- example: ['Sherrod Brown', 'Maria Cantwell', 'Ben Cardin']\n\nCREATE TABLE skills_job_dim (\n    \n\nCREATE TABLE job_postings_fact (\n    \n\nCREATE TABLE alien_data (\n    id INTEGER, -- example: [1, 2, 3]\n    first_name TEXT, -- example: ['june']\n    last_name TEXT, -- example: ['streak', 'records', 'june']\n    email TEXT, -- example: ['twrey0@sakura.ne.jp', 'estlouis1@amazon.co.uk', 'vsawood2@yolasite.com']\n    age INTEGER, -- example: [307, 351, 349]\n    state TEXT, -- example: ['ohio', 'maryland', 'california']\n    country TEXT, -- example: ['united states']\n);\n\nCREATE TABLE cities_countries (\n    country_id INTEGER, -- example: [1, 2, 4]\n    country_name TEXT, -- example: ['afghanistan', 'albania', 'algeria']\n    country_code_2 TEXT, -- example: ['af', 'al', 'dz']\n    country_code_3 TEXT, -- example: ['afg', 'alb', 'dza']\n    region TEXT, -- example: ['europe']\n\nCREATE TABLE legislation_date_dim (\n    `date` TEXT, -- example: ['1917-01-01', '1917-01-02', '1917-01-03']\n    month_name TEXT, -- example: ['June']\n    day_of_month INTEGER, -- example: [1, 2, 3]\n);\n\nCREATE TABLE cities (\n    city_id INTEGER, -- example: [1, 2, 3]\n    city_name TEXT, -- example: ['date', 'tokyo', 'jakarta', 'delhi']\n    country_code_2 TEXT, -- example: ['jp', 'id', 'in']\n    insert_date TEXT, -- example: ['2023-06-23', '2022-01-20']\n);\n\nCREATE TABLE aliens_location (\n    state TEXT, -- example: ['Ohio', 'Maryland', 'California']\n    country TEXT, -- example: ['United States']\n\nCREATE TABLE aliens (\n    id INTEGER, -- example: [1, 2, 3]\n    first_name TEXT, -- example: ['June']\n    last_name TEXT, -- example: ['Streak', 'Records', 'June']\n    email TEXT, -- example: ['twrey0@sakura.ne.jp', 'estlouis1@amazon.co.uk', 'vsawood2@yolasite.com']\n\nCREATE TABLE cities_languages (\n    `language` TEXT, -- example: ['pashto', 'persian', 'uzbek']\n    country_code_2 TEXT, -- example: ['af', 'al', 'dz']\n);\n\nCREATE TABLE job_company (\n    name TEXT, -- example: ['Europe']",
        "question": "Could you review our records in June 2022 and identify which countries have the longest streak of consecutive inserted city dates? Please list the 2-letter length country codes of these countries.",
        "instance_id": "local071",
        "db_id": "city_legislation"
    },
    {
        "db_desc": "CREATE TABLE aliens_details (\n    \n\nCREATE TABLE skills_dim (\n    \n\nCREATE TABLE legislators_terms (\n    state TEXT, -- example: ['OH', 'WA', 'MD']\n    url TEXT, -- example: ['http://casey.senate.gov/', 'https://fulcher.house.gov', 'http://klobuchar.senate.gov/']\n    phone TEXT, -- example: ['202-224-6324', '202-225-6611', '202-224-3244']\n    office TEXT, -- example: ['393 Russell Senate Office Building', '1520 Longworth House Office Building', '302 Hart Senate Office Building']\n\nCREATE TABLE cities_currencies (\n    country_code_2 TEXT, -- example: ['af', 'al', 'dz']\n\nCREATE TABLE legislators (\n    last_name TEXT, -- example: ['Day']\n    middle_name TEXT, -- example: ['January', 'Day']\n    other_names_middle REAL,\n    gender TEXT, -- example: ['M', 'F']\n\nCREATE TABLE skills_job_dim (\n    \n\nCREATE TABLE job_postings_fact (\n    job_title TEXT, -- example: ['Data', 'DATA ENTRY']\n    salary_rate TEXT, -- example: ['day']\n\nCREATE TABLE alien_data (\n    id INTEGER, -- example: [1, 2, 3]\n    last_name TEXT, -- example: ['january', 'day']\n    gender TEXT, -- example: ['non-binary', 'female', 'male']\n    state TEXT, -- example: ['ohio', 'maryland', 'california']\n    country TEXT, -- example: ['united states']\n);\n\nCREATE TABLE cities_countries (\n    country_id INTEGER, -- example: [1, 2, 4]\n    country_name TEXT, -- example: ['afghanistan', 'albania', 'algeria']\n    country_code_2 TEXT, -- example: ['af', 'al', 'dz']\n    country_code_3 TEXT, -- example: ['afg', 'alb', 'dza']\n    region TEXT, -- example: ['asia', 'europe', 'africa']\n\nCREATE TABLE legislation_date_dim (\n    `date` TEXT, -- example: ['1917-01-01', '1917-01-02', '1917-01-03']\n    month_name TEXT, -- example: ['January']\n\nCREATE TABLE cities (\n    city_id INTEGER, -- example: [1, 2, 3]\n    city_name TEXT, -- example: ['tokyo', 'jakarta', 'delhi']\n    country_code_2 TEXT, -- example: ['jp', 'id', 'in']\n    capital INTEGER, -- example: [1, 0]\n    insert_date TEXT, -- example: ['2022-01-20']\n);\n\nCREATE TABLE aliens_location (\n    state TEXT, -- example: ['Ohio', 'Maryland', 'California']\n    country TEXT, -- example: ['United States']\n\nCREATE TABLE aliens (\n    id INTEGER, -- example: [1, 2, 3]\n    last_name TEXT, -- example: ['January', 'Day']\n    gender TEXT, -- example: ['Agender', 'Female', 'Male']\n\nCREATE TABLE cities_languages (\n    `language` TEXT, -- example: ['pashto', 'persian', 'uzbek']\n    country_code_2 TEXT, -- example: ['af', 'al', 'dz']\n);\n\nCREATE TABLE job_company (\n    ",
        "question": "Identify the country with data inserted on nine different days in January 2022. Then, find the longest consecutive period with data insertions for this country during January 2022, and calculate the proportion of entries that are from its capital city within this longest consecutive insertion period.",
        "instance_id": "local072",
        "db_id": "city_legislation"
    },
    {
        "db_desc": "CREATE TABLE aliens_details (\n    feeding_frequency TEXT, -- example: ['Yearly', 'Monthly']\n\nCREATE TABLE skills_dim (\n    type TEXT, -- example: ['analyst_tools', 'webframeworks', 'programming']\n);\n\nCREATE TABLE legislators_terms (\n    term_number INTEGER, -- example: [0, 1, 2]\n    url TEXT, -- example: ['http://casey.senate.gov/', 'https://fulcher.house.gov', 'http://klobuchar.senate.gov/']\n    phone TEXT, -- example: ['202-224-6324', '202-225-6611', '202-224-3244']\n    office TEXT, -- example: ['393 Russell Senate Office Building', '1520 Longworth House Office Building', '302 Hart Senate Office Building']\n\nCREATE TABLE cities_currencies (\n    \n\nCREATE TABLE legislators (\n    first_name TEXT, -- example: ['June']\n    last_name TEXT, -- example: ['Towns', 'May']\n    middle_name TEXT, -- example: ['May', 'June']\n    other_names_middle REAL,\n    other_names_last TEXT, -- example: ['Menendez', 'Levy', 'Long']\n    birthday TEXT, -- example: ['1952-11-09', '1958-10-13', '1943-10-05']\n\nCREATE TABLE skills_job_dim (\n    \n\nCREATE TABLE job_postings_fact (\n    salary_rate TEXT, -- example: ['year', 'month']\n\nCREATE TABLE alien_data (\n    id INTEGER, -- example: [1, 2, 3]\n    first_name TEXT, -- example: ['may', 'june', 'april']\n    last_name TEXT, -- example: ['may', 'june', 'count', 'april']\n    type TEXT, -- example: ['reptile', 'flatwoods', 'nordic']\n    age INTEGER, -- example: [307, 351, 349]\n    feeding_frequency TEXT, -- example: ['yearly', 'monthly']\n    country TEXT, -- example: ['united states']\n);\n\nCREATE TABLE cities_countries (\n    region TEXT, -- example: ['asia', 'europe', 'africa']\n\nCREATE TABLE legislation_date_dim (\n    `date` TEXT, -- example: ['1917-01-01', '1917-01-02', '1917-01-03']\n    month_name TEXT, -- example: ['May', 'June', 'April']\n    day_of_month INTEGER, -- example: [1, 2, 3]\n);\n\nCREATE TABLE cities (\n    city_id INTEGER, -- example: [1, 2, 3]\n    city_name TEXT, -- example: ['tokyo', 'jakarta', 'delhi']\n    population REAL, -- example: [37732000.0, 33756000.0, 32226000.0]\n    insert_date TEXT, -- example: ['2022-01-12', '2021-08-22', '2021-03-11']\n);\n\nCREATE TABLE aliens_location (\n    country TEXT, -- example: ['United States']\n\nCREATE TABLE aliens (\n    id INTEGER, -- example: [1, 2, 3]\n    first_name TEXT, -- example: ['May', 'June', 'April']\n    last_name TEXT, -- example: ['May', 'June', 'Count', 'April']\n    type TEXT, -- example: ['Reptile', 'Flatwoods', 'Nordic']\n\nCREATE TABLE cities_languages (\n    `language` TEXT, -- example: ['pashto', 'persian', 'uzbek']\n\nCREATE TABLE job_company (\n    name TEXT, -- example: ['TOTAL', 'HM Growth', 'Digit']\n    link TEXT, -- example: ['http://www.bitplane.com/', 'http://www.face2face.eu/', 'http://www.electriccapital.com/']",
        "question": "Calculate the number of new cities inserted in April, May, and June for each year from 2021 to 2023. For each month, compute the cumulative running total of cities added for that specific month across the years up to and including the given year (i.e., sum the counts of that month over the years). Additionally, calculate the year-over-year growth percentages for both the monthly total and the running total for each month, comparing each year to the previous year. Present the results only for 2022 and 2023, listing the year, the month, the total number of cities added in that month, the cumulative running total for that month, and the year-over-year growth percentages for both the monthly total and the running total. Use the data from 2021 solely as a baseline for calculating growth rates, and exclude it from the final output.",
        "instance_id": "local068",
        "db_id": "city_legislation"
    },
    {
        "db_desc": "CREATE TABLE pizza_names (\n    pizza_id INTEGER, -- example: [1, 2]\n    pizza_name TEXT, -- example: ['Vegetarian', 'Meatlovers']\n);\n\nCREATE TABLE companies_funding (\n    company_id INTEGER, -- example: [548, 645, 615]\n\nCREATE TABLE pizza_customer_orders (\n    order_id INTEGER, -- example: [1, 2, 3]\n    customer_id INTEGER, -- example: [101, 102, 103]\n    pizza_id INTEGER, -- example: [1, 2]\n    exclusions TEXT, -- example: ['4', '2,6']\n    extras TEXT, -- example: ['1', '1,5', '1,4']\n    order_time TEXT, -- example: ['2021-01-01 18:05:02', '2021-01-01 19:00:52', '2021-01-02 23:51:23']\n);\n\nCREATE TABLE pizza_toppings (\n    topping_id INTEGER, -- example: [1, 2, 3]\n    topping_name TEXT, -- example: ['Pepperoni']\n);\n\nCREATE TABLE trees (\n    idx INTEGER, -- example: [199121, 32277, 164564]\n    address TEXT, -- example: ['1301 RYAWA AVENUE', '506 BEACH 69 STREET', '2312 WESTERVELT AVENUE']\n\nCREATE TABLE pizza_recipes (\n    pizza_id INTEGER, -- example: [1, 2]\n    toppings TEXT, -- example: ['1, 2, 3, 4, 5, 6, 8, 10', '4, 6, 7, 9, 11, 12']\n);\n\nCREATE TABLE statistics (\n    `date` TEXT, -- example: ['2020-05-27 00:00:00', '2020-06-26 00:00:00', '2020-09-05 00:00:00']\n\nCREATE TABLE income_trees (\n    \n\nCREATE TABLE pizza_clean_runner_orders (\n    order_id INTEGER, -- example: [1, 2, 3]\n    pickup_time TEXT, -- example: ['2021-01-01 18:15:34', '2021-01-01 19:10:54', '2021-01-03 00:12:37']\n    distance REAL, -- example: [20.0, 13.4, 23.4]\n    duration REAL, -- example: [32.0, 27.0, 20.0]\n    cancellation TEXT, -- example: ['Restaurant Cancellation', 'Customer Cancellation']\n);\n\nCREATE TABLE pizza_runner_orders (\n    order_id INTEGER, -- example: [1, 2, 3]\n    pickup_time TEXT, -- example: ['2021-01-01 18:15:34', '2021-01-01 19:10:54', '2021-01-03 00:12:37']\n    distance TEXT, -- example: ['20km', '13.4km', '23.4']\n    duration TEXT, -- example: ['32 minutes', '27 minutes', '20 mins']\n    cancellation TEXT, -- example: ['Restaurant Cancellation', 'Customer Cancellation']\n);\n\nCREATE TABLE word_list (\n    words TEXT, -- example: ['vegetarian', 'toppings', 'time', 'string', 'standard', 'set', 'row', 'resulting', 'result', 'pizzas', 'pizza', 'orders', 'order', 'of', 'name', 'listing', 'ingredients', 'ingredient', 'id', 'finale', 'final', 'extras', 'exclusions', 'customer', 'alphabetically', 'alphabetical']\n);\n\nCREATE TABLE companies_dates (\n    company_id INTEGER, -- example: [109, 821, 153]\n\nCREATE TABLE pizza_get_extras (\n    row_id INTEGER, -- example: [1, 2]\n    order_id INTEGER, -- example: [5, 7, 9]\n    extras INTEGER, -- example: [1, 5, 4]\n    extras_count INTEGER, -- example: [1, 2]\n);\n\nCREATE TABLE pizza_get_exclusions (\n    row_id INTEGER, -- example: [1, 2]\n    order_id INTEGER, -- example: [4, 9, 10]\n    exclusions INTEGER, -- example: [4, 2, 6]\n    total_exclusions INTEGER, -- example: [3, 1, 2]\n);\n\nCREATE TABLE pizza_clean_customer_orders (\n    order_id INTEGER, -- example: [1, 2, 3]\n    customer_id INTEGER, -- example: [101, 102, 103]\n    pizza_id INTEGER, -- example: [1, 2]\n    exclusions TEXT, -- example: ['4', '2,6']\n    extras TEXT, -- example: ['1', '1,5', '1,4']\n    order_time TEXT, -- example: ['2021-01-01 18:05:02', '2021-01-01 19:00:52', '2021-01-02 23:51:23']\n);\n\nCREATE TABLE companies_industries (\n    company_id INTEGER, -- example: [316, 162, 803]\n\nCREATE TABLE pizza_runners (\n    ",
        "question": "For each pizza order, please list a single result row containing the row ID, order ID, customer ID, pizza name, and the final set of ingredients. The final set of ingredients should be determined by taking the standard toppings from the pizza\u2019s recipe, removing any toppings specified as exclusions, then adding any toppings specified as extras. The resulting ingredients must be presented in alphabetical order, prefixed by \u20182x\u2019 if the same ingredient appears multiple times (for example, if both standard and extra or added multiple times), and concatenated into a string that begins with the pizza name followed by \u2018: \u2019. Group by row ID, order ID, pizza name, and order time so that each order appears once, and return the listing of toppings in ascending order by row ID, ensuring that \u2018Meatlovers\u2019 pizzas receive a pizza_id of 1 while all others receive a pizza_id of 2.",
        "instance_id": "local073",
        "db_id": "modern_data"
    },
    {
        "db_desc": "CREATE TABLE pizza_names (\n    pizza_id INTEGER, -- example: [1, 2]\n    pizza_name TEXT, -- example: ['Meatlovers', 'Vegetarian']\n);\n\nCREATE TABLE companies_funding (\n    \n\nCREATE TABLE pizza_customer_orders (\n    order_id INTEGER, -- example: [1, 2, 3]\n    customer_id INTEGER, -- example: [101, 102, 103]\n    pizza_id INTEGER, -- example: [1, 2]\n    order_time TEXT, -- example: ['2021-01-01 18:05:02', '2021-01-01 19:00:52', '2021-01-02 23:51:23']\n);\n\nCREATE TABLE pizza_toppings (\n    topping_name TEXT, -- example: ['Bacon', 'BBQ Sauce', 'Beef']\n);\n\nCREATE TABLE trees (\n    address TEXT, -- example: ['1301 RYAWA AVENUE', '506 BEACH 69 STREET', '2312 WESTERVELT AVENUE']\n\nCREATE TABLE pizza_recipes (\n    pizza_id INTEGER, -- example: [1, 2]\n    toppings TEXT, -- example: ['1, 2, 3, 4, 5, 6, 8, 10', '4, 6, 7, 9, 11, 12']\n);\n\nCREATE TABLE statistics (\n    total_cases INTEGER, -- example: [24628, 58818, 58989]\n    total_deaths INTEGER, -- example: [794, 1303, 1971]\n);\n\nCREATE TABLE income_trees (\n    Estimate_Total INTEGER, -- example: [15198, 24909, 18140]\n\nCREATE TABLE pizza_clean_runner_orders (\n    order_id INTEGER, -- example: [1, 2, 3]\n    cancellation TEXT, -- example: ['Restaurant Cancellation', 'Customer Cancellation']\n);\n\nCREATE TABLE pizza_runner_orders (\n    order_id INTEGER, -- example: [1, 2, 3]\n    cancellation TEXT, -- example: ['Restaurant Cancellation', 'Customer Cancellation']\n);\n\nCREATE TABLE word_list (\n    words TEXT, -- example: ['total', 'quantity', 'pizzas', 'pizza', 'order', 'name', 'ingredient', 'information', 'delivered', 'customer']\n);\n\nCREATE TABLE companies_dates (\n    \n\nCREATE TABLE pizza_get_extras (\n    order_id INTEGER, -- example: [5, 7, 9]\n\nCREATE TABLE pizza_get_exclusions (\n    order_id INTEGER, -- example: [4, 9, 10]\n    total_exclusions INTEGER, -- example: [3, 1, 2]\n);\n\nCREATE TABLE pizza_clean_customer_orders (\n    order_id INTEGER, -- example: [1, 2, 3]\n    customer_id INTEGER, -- example: [101, 102, 103]\n    pizza_id INTEGER, -- example: [1, 2]\n    order_time TEXT, -- example: ['2021-01-01 18:05:02', '2021-01-01 19:00:52', '2021-01-02 23:51:23']\n);\n\nCREATE TABLE companies_industries (\n    \n\nCREATE TABLE pizza_runners (\n    ",
        "question": "Based on our customer pizza order information, summarize the total quantity of each ingredient used in the pizzas we delivered. Output the name and quantity for each ingredient.",
        "instance_id": "local066",
        "db_id": "modern_data"
    },
    {
        "db_desc": "CREATE TABLE pizza_names (\n    pizza_id INTEGER, -- example: [1, 2]\n    pizza_name TEXT, -- example: ['Vegetarian', 'Meatlovers']\n);\n\nCREATE TABLE companies_funding (\n    valuation INTEGER, -- example: [2000000000, 1000000000, 10000000000]\n    funding INTEGER, -- example: [449000000, 188000000, 2000000000]\n\nCREATE TABLE pizza_customer_orders (\n    order_id INTEGER, -- example: [1, 2, 3]\n    pizza_id INTEGER, -- example: [1, 2]\n    extras TEXT, -- example: ['1', '1,5', '1,4']\n    order_time TEXT, -- example: ['2021-01-01 18:05:02', '2021-01-01 19:00:52', '2021-01-02 23:51:23']\n);\n\nCREATE TABLE pizza_toppings (\n    topping_id INTEGER, -- example: [1, 2, 3]\n    topping_name TEXT, -- example: ['Bacon', 'BBQ Sauce', 'Beef']\n);\n\nCREATE TABLE trees (\n    state TEXT, -- example: ['New York']\n\nCREATE TABLE pizza_recipes (\n    pizza_id INTEGER, -- example: [1, 2]\n    toppings TEXT, -- example: ['1, 2, 3, 4, 5, 6, 8, 10', '4, 6, 7, 9, 11, 12']\n);\n\nCREATE TABLE statistics (\n    state TEXT, -- example: ['NC', 'CO', 'MA']\n    total_cases INTEGER, -- example: [24628, 58818, 58989]\n    total_deaths INTEGER, -- example: [794, 1303, 1971]\n);\n\nCREATE TABLE income_trees (\n    Estimate_Total INTEGER, -- example: [15198, 24909, 18140]\n    Estimate_Median_income INTEGER, -- example: [47575, 56120, 26048]\n    Estimate_Mean_income INTEGER, -- example: [73353, 78208, 40836]\n\nCREATE TABLE pizza_clean_runner_orders (\n    order_id INTEGER, -- example: [1, 2, 3]\n    runner_id INTEGER, -- example: [1, 2, 3]\n    distance REAL, -- example: [20.0, 13.4, 23.4]\n    cancellation TEXT, -- example: ['Customer Cancellation']\n);\n\nCREATE TABLE pizza_runner_orders (\n    order_id INTEGER, -- example: [1, 2, 3]\n    runner_id INTEGER, -- example: [1, 2, 3]\n    distance TEXT, -- example: ['20km', '13.4km', '23.4']\n    cancellation TEXT, -- example: ['Customer Cancellation']\n);\n\nCREATE TABLE word_list (\n    words TEXT, -- example: ['vegetarian', 'total', 'toppings', 'runner', 'pizzas', 'pizza', 'orders', 'money', 'meat', 'lovers', 'income', 'extra', 'cancellations', 'canceled']\n);\n\nCREATE TABLE companies_dates (\n    \n\nCREATE TABLE pizza_get_extras (\n    order_id INTEGER, -- example: [5, 7, 9]\n    extras INTEGER, -- example: [1, 5, 4]\n    extras_count INTEGER, -- example: [1, 2]\n);\n\nCREATE TABLE pizza_get_exclusions (\n    order_id INTEGER, -- example: [4, 9, 10]\n    total_exclusions INTEGER, -- example: [3, 1, 2]\n);\n\nCREATE TABLE pizza_clean_customer_orders (\n    order_id INTEGER, -- example: [1, 2, 3]\n    pizza_id INTEGER, -- example: [1, 2]\n    extras TEXT, -- example: ['1', '1,5', '1,4']\n    order_time TEXT, -- example: ['2021-01-01 18:05:02', '2021-01-01 19:00:52', '2021-01-02 23:51:23']\n);\n\nCREATE TABLE companies_industries (\n    \n\nCREATE TABLE pizza_runners (\n    runner_id INTEGER, -- example: [1, 2, 3]",
        "question": "Calculate the total income from Meat Lovers pizzas priced at $12 and Vegetarian pizzas at $10. Include any extra toppings charged at $1 each. Ensure that canceled orders are filtered out. How much money has Pizza Runner earned in total?",
        "instance_id": "local065",
        "db_id": "modern_data"
    },
    {
        "db_desc": "CREATE TABLE all_star (\n    player_id TEXT, -- example: ['gomezle01', 'ferreri01', 'gehrilo01']\n    game_num INTEGER, -- example: [0, 2, 1]\n    game_id TEXT, -- example: ['ALS193307060', 'NLS193407100', 'ALS193507080']\n\nCREATE TABLE appearances (\n    player_id TEXT, -- example: ['barnero01', 'barrofr01', 'birdsda01']\n    g_batting INTEGER, -- example: [31, 18, 29]\n    g_of INTEGER, -- example: [0, 17, 27]\n\nCREATE TABLE manager_award (\n    player_id TEXT, -- example: ['larusto01', 'lasorto01', 'andersp01']\n    notes NUMERIC\n);\n\nCREATE TABLE player_award (\n    player_id TEXT, -- example: ['bondto01', 'hinespa01', 'heckegu01']\n\nCREATE TABLE manager_award_vote (\n    player_id TEXT, -- example: ['altobjo01', 'coxbo01', 'larusto01']\n    points_won INTEGER, -- example: [7, 4, 17]\n    points_max INTEGER, -- example: [28, 24, 140]\n\nCREATE TABLE player_award_vote (\n    player_id TEXT, -- example: ['fordwh01', 'maglisa01', 'newcodo01']\n    points_won NUMERIC, -- example: [1, 4, 10]\n    points_max INTEGER, -- example: [16, 18, 20]\n\nCREATE TABLE batting (\n    player_id TEXT, -- example: ['abercda01', 'addybo01', 'allisar01']\n    g INTEGER, -- example: [1, 25, 29]\n    r NUMERIC, -- example: [0, 30, 28]\n    h NUMERIC, -- example: [0, 32, 40]\n    hr NUMERIC, -- example: [0, 2, 3]\n    so NUMERIC, -- example: [0, 5, 2]\n\nCREATE TABLE batting_postseason (\n    player_id TEXT, -- example: ['becanbu01', 'bradyst01', 'esterdu01']\n    g INTEGER, -- example: [1, 3, 2]\n    r INTEGER, -- example: [0, 1, 2]\n    h INTEGER, -- example: [1, 0, 3]\n    hr INTEGER, -- example: [0, 1, 2]\n    so INTEGER, -- example: [0, 1, 3]\n\nCREATE TABLE player_college (\n    player_id TEXT, -- example: ['aardsda01', 'abadan01', 'abbeybe01']\n\nCREATE TABLE fielding (\n    player_id TEXT, -- example: ['abercda01', 'addybo01', 'allisar01']\n    g INTEGER, -- example: [1, 22, 3]\n    a NUMERIC, -- example: [3, 72, 14]\n\nCREATE TABLE fielding_outfield (\n    player_id TEXT, -- example: ['allisar01', 'ansonca01', 'armstbo01']\n\nCREATE TABLE fielding_postseason (\n    player_id TEXT, -- example: ['colliji01', 'crigelo01', 'dinnebi01']\n    g INTEGER, -- example: [8, 4, 1]\n    a INTEGER, -- example: [18, 7, 9]\n\nCREATE TABLE hall_of_fame (\n    player_id TEXT, -- example: ['cobbty01', 'ruthba01', 'wagneho01']\n    needed NUMERIC, -- example: [170, 59, 151]\n\nCREATE TABLE home_game (\n    games INTEGER, -- example: [16, 1, 2]\n\nCREATE TABLE manager (\n    player_id TEXT, -- example: ['wrighha01', 'woodji01', 'paborch01']\n    g INTEGER, -- example: [31, 28, 29]\n    l INTEGER, -- example: [10, 9, 19]\n    rank NUMERIC, -- example: [3, 2, 8]\n\nCREATE TABLE manager_half (\n    player_id TEXT, -- example: ['hanlone01', 'vanhage01', 'waltzjo99']\n    g INTEGER, -- example: [56, 77, 11]\n    l INTEGER, -- example: [39, 46, 10]\n    rank INTEGER, -- example: [12, 10, 2]\n);\n\nCREATE TABLE player (\n    player_id TEXT, -- example: ['aardsda01', 'aaronha01', 'aaronto01']\n    death_city TEXT, -- example: ['Worth']\n    name_first TEXT, -- example: ['Home Run']\n    name_last TEXT, -- example: ['Worth', 'Score']\n    name_given TEXT, -- example: ['David Allan', 'Henry Louis', 'Tommie Lee']\n    weight NUMERIC, -- example: [220, 180, 190]\n    bats TEXT, -- example: ['R', 'L', 'B']\n    throws TEXT, -- example: ['R', 'L']\n\nCREATE TABLE park (\n    \n\nCREATE TABLE pitching (\n    player_id TEXT, -- example: ['bechtge01', 'brainas01', 'fergubo01']\n    l INTEGER, -- example: [2, 15, 0]\n    g INTEGER, -- example: [3, 30, 1]\n    sv INTEGER, -- example: [0, 1, 3]\n    h INTEGER, -- example: [43, 361, 8]\n    hr INTEGER, -- example: [0, 4, 3]\n    so INTEGER, -- example: [1, 13, 0]\n    r INTEGER, -- example: [42, 292, 9]\n\nCREATE TABLE pitching_postseason (\n    player_id TEXT, -- example: ['becanbu01', 'keefeti01', 'radboch01']\n    l INTEGER, -- example: [1, 2, 0]\n    g INTEGER, -- example: [1, 2, 3]\n    sv INTEGER, -- example: [0, 1, 2]\n    h INTEGER, -- example: [9, 10, 11]\n    hr INTEGER, -- example: [0, 1, 3]\n    so INTEGER, -- example: [1, 12, 17]\n    r INTEGER, -- example: [12, 9, 3]\n\nCREATE TABLE salary (\n    player_id TEXT, -- example: ['barkele01', 'bedrost01', 'benedbr01']\n\nCREATE TABLE college (\n    name_full TEXT, -- example: ['Abilene Christian University', 'Adelphi University', 'Adrian College']\n\nCREATE TABLE postseason (\n    wins INTEGER, -- example: [3, 4, 10]\n\nCREATE TABLE team (\n    rank INTEGER, -- example: [3, 2, 8]\n    g INTEGER, -- example: [31, 28, 29]\n    l INTEGER, -- example: [10, 9, 19]\n    wc_win TEXT, -- example: ['N', 'Y']\n    r INTEGER, -- example: [401, 302, 249]\n    h INTEGER, -- example: [426, 323, 328]\n    hr INTEGER, -- example: [3, 10, 7]\n    so NUMERIC, -- example: [19, 22, 25]\n    sv INTEGER, -- example: [3, 1, 0]\n    name TEXT, -- example: ['Boston Red Stockings', 'Chicago White Stockings', 'Cleveland Forest Citys']\n\nCREATE TABLE team_franchise (\n    \n\nCREATE TABLE team_half (\n    rank INTEGER, -- example: [4, 5, 2]\n    g INTEGER, -- example: [54, 52, 51]\n    l INTEGER, -- example: [29, 27, 23]\n);",
        "question": "I would like to know the given names of baseball players who have achieved the highest value of games played, runs, hits, and home runs, with their corresponding score values.",
        "instance_id": "local008",
        "db_id": "Baseball"
    },
    {
        "db_desc": "CREATE TABLE weekly_sales (\n    region TEXT, -- example: ['ASIA', 'USA', 'EUROPE']\n    customer_type TEXT, -- example: ['New', 'Guest', 'Existing']\n    transactions INTEGER, -- example: [120631, 31574, 529151]\n    sales INTEGER, -- example: [3656163, 996575, 16509610]\n);\n\nCREATE TABLE shopping_cart_users (\n    \n\nCREATE TABLE bitcoin_members (\n    region TEXT, -- example: ['Australia', 'United States', 'Africa']\n);\n\nCREATE TABLE interest_metrics (\n    _month REAL, -- example: [7.0, 8.0, 9.0]\n    month_year TEXT, -- example: ['07-2018', '08-2018', '09-2018']\n\nCREATE TABLE customer_regions (\n    \n\nCREATE TABLE customer_transactions (\n    customer_id INTEGER, -- example: [429, 155, 398]\n\nCREATE TABLE bitcoin_transactions (\n    quantity REAL, -- example: [50.0, 9.562185136, 8.842987018]\n\nCREATE TABLE customer_nodes (\n    customer_id INTEGER, -- example: [1, 2, 3]\n    end_date TEXT, -- example: ['2020-01-03', '2020-01-17', '2020-02-18']\n);\n\nCREATE TABLE cleaned_weekly_sales (\n    region TEXT, -- example: ['ASIA', 'USA', 'EUROPE']\n    customer_type TEXT, -- example: ['New', 'Guest', 'Existing']\n    transactions INTEGER, -- example: [120631, 31574, 529151]\n    sales INTEGER, -- example: [3656163, 996575, 16509610]\n    month_number INTEGER, -- example: [8, 7, 6]\n    avg_transaction REAL, -- example: [30.31, 31.56, 31.2]\n);\n\nCREATE TABLE veg_txn_df (\n    \n\nCREATE TABLE shopping_cart_events (\n    \n\nCREATE TABLE shopping_cart_page_hierarchy (\n    \n\nCREATE TABLE bitcoin_prices (\n    `open` REAL, -- example: [3243.96, 3273.78, 3093.78]\n    change TEXT, -- example: ['-2.04%', '-0.91%', '5.82%']\n);\n\nCREATE TABLE interest_map (\n    interest_summary TEXT, -- example: ['Consumers using fitness tracking apps an', 'Consumers researching game reviews and c', 'Readers of automotive news and car revie']\n    created_at TEXT, -- example: ['2016-05-26 14:57:59', '2016-06-09 16:28:11', '2016-08-11 12:08:56']\n\nCREATE TABLE veg_loss_rate_df (\n    \n\nCREATE TABLE shopping_cart_campaign_identifier (\n    end_date TEXT, -- example: ['2020-01-14', '2020-01-28', '2020-03-31']\n);\n\nCREATE TABLE veg_cat (\n    \n\nCREATE TABLE veg_whsle_df (\n    \n\nCREATE TABLE shopping_cart_event_identifier (\n    ",
        "question": "Please generate a summary of the closing balances at the end of each month for each customer transactions, show the monthly changes and monthly cumulative bank account balances. Ensure that even if a customer has no account activity in a given month, the balance for that month is still included in the output.",
        "instance_id": "local074",
        "db_id": "bank_sales_trading"
    },
    {
        "db_desc": "CREATE TABLE weekly_sales (\n    week_date TEXT, -- example: ['31/8/20', '24/8/20', '17/8/20']\n    region TEXT, -- example: ['ASIA', 'USA', 'EUROPE']\n    customer_type TEXT, -- example: ['New', 'Guest', 'Existing']\n    transactions INTEGER, -- example: [120631, 31574, 529151]\n    sales INTEGER, -- example: [3656163, 996575, 16509610]\n);\n\nCREATE TABLE shopping_cart_users (\n    start_date TEXT, -- example: ['2020-02-04', '2020-01-18', '2020-02-21']\n);\n\nCREATE TABLE bitcoin_members (\n    member_id TEXT, -- example: ['c4ca42', 'c81e72', 'eccbc8']\n    first_name TEXT, -- example: ['Danny', 'Vipul', 'Charlie']\n    region TEXT, -- example: ['Australia', 'United States', 'Africa']\n);\n\nCREATE TABLE interest_metrics (\n    _month REAL, -- example: [7.0, 8.0, 9.0]\n    month_year TEXT, -- example: ['07-2018', '08-2018', '09-2018']\n\nCREATE TABLE customer_regions (\n    \n\nCREATE TABLE customer_transactions (\n    customer_id INTEGER, -- example: [429, 155, 398]\n    txn_date TEXT, -- example: ['2020-01-21', '2020-01-10', '2020-01-01']\n    txn_type TEXT, -- example: ['withdrawal', 'deposit']\n    txn_amount INTEGER, -- example: [82, 712, 196]\n);\n\nCREATE TABLE bitcoin_transactions (\n    member_id TEXT, -- example: ['c81e72', 'eccbc8', 'a87ff6']\n    txn_date TEXT, -- example: ['01-01-2017', '02-01-2017', '03-01-2017']\n    txn_type TEXT, -- example: ['BUY', 'SELL']\n    quantity REAL, -- example: [50.0, 9.562185136, 8.842987018]\n\nCREATE TABLE customer_nodes (\n    customer_id INTEGER, -- example: [1, 2, 3]\n    node_id INTEGER, -- example: [4, 5, 3]\n    start_date TEXT, -- example: ['2020-01-02', '2020-01-03', '2020-01-27']\n    end_date TEXT, -- example: ['2020-01-03', '2020-01-17', '2020-02-18']\n);\n\nCREATE TABLE cleaned_weekly_sales (\n    week_date TEXT, -- example: ['2020-08-31', '2020-08-24', '2020-08-17']\n    region TEXT, -- example: ['ASIA', 'USA', 'EUROPE']\n    customer_type TEXT, -- example: ['New', 'Guest', 'Existing']\n    transactions INTEGER, -- example: [120631, 31574, 529151]\n    sales INTEGER, -- example: [3656163, 996575, 16509610]\n    month_number INTEGER, -- example: [8, 7, 6]\n\nCREATE TABLE veg_txn_df (\n    txn_date TEXT, -- example: ['2020-07-01 00:00:00', '2020-07-02 00:00:00', '2020-07-03 00:00:00']\n    day_of_week TEXT, -- example: ['Wednesday', 'Thursday', 'Friday']\n);\n\nCREATE TABLE shopping_cart_events (\n    event_time TEXT, -- example: ['2020-02-04 19:16:09.182546', '2020-02-04 19:16:17.358191', '2020-02-04 19:16:58.454669']\n);\n\nCREATE TABLE shopping_cart_page_hierarchy (\n    page_name TEXT, -- example: ['Home Page', 'All Products', 'Salmon']\n    product_id REAL, -- example: [1.0, 2.0, 3.0]\n);\n\nCREATE TABLE bitcoin_prices (\n    market_date TEXT, -- example: ['29-08-2021', '28-08-2021', '27-08-2021']\n    `open` REAL, -- example: [3243.96, 3273.78, 3093.78]\n    high REAL, -- example: [3282.21, 3284.58, 3279.93]\n    low REAL, -- example: [3162.79, 3212.24, 3063.37]\n    volume TEXT, -- example: ['582.04K', '466.21K', '839.54K']\n    change TEXT, -- example: ['-2.04%', '-0.91%', '5.82%']\n);\n\nCREATE TABLE interest_map (\n    id INTEGER, -- example: [1, 2, 3]\n\nCREATE TABLE veg_loss_rate_df (\n    \n\nCREATE TABLE shopping_cart_campaign_identifier (\n    start_date TEXT, -- example: ['2020-01-01', '2020-01-15', '2020-02-01']\n    end_date TEXT, -- example: ['2020-01-14', '2020-01-28', '2020-03-31']\n);\n\nCREATE TABLE veg_cat (\n    \n\nCREATE TABLE veg_whsle_df (\n    whsle_date TEXT, -- example: ['2020-07-01 00:00:00', '2020-07-02 00:00:00', '2020-07-03 00:00:00']\n\nCREATE TABLE shopping_cart_event_identifier (\n    ",
        "question": "For each customer and each month of 2020, first calculate the month-end balance by adding all deposit amounts and subtracting all withdrawal amounts that occurred during that specific month. Then determine which month in 2020 has the highest count of customers with a positive month-end balance and which month has the lowest count. For each of these two months, compute the average month-end balance across all customers and provide the difference between these two averages",
        "instance_id": "local064",
        "db_id": "bank_sales_trading"
    },
    {
        "db_desc": "CREATE TABLE weekly_sales (\n    region TEXT, -- example: ['ASIA', 'USA', 'EUROPE']\n    customer_type TEXT, -- example: ['New', 'Guest', 'Existing']\n    transactions INTEGER, -- example: [120631, 31574, 529151]\n    sales INTEGER, -- example: [3656163, 996575, 16509610]\n);\n\nCREATE TABLE shopping_cart_users (\n    \n\nCREATE TABLE bitcoin_members (\n    first_name TEXT, -- example: ['Danny', 'Vipul', 'Charlie']\n    region TEXT, -- example: ['Australia', 'United States', 'Africa']\n);\n\nCREATE TABLE interest_metrics (\n    _month REAL, -- example: [7.0, 8.0, 9.0]\n    month_year TEXT, -- example: ['07-2018', '08-2018', '09-2018']\n    ranking INTEGER, -- example: [1, 2, 3]\n\nCREATE TABLE customer_regions (\n    \n\nCREATE TABLE customer_transactions (\n    customer_id INTEGER, -- example: [429, 155, 398]\n    txn_date TEXT, -- example: ['2020-01-21', '2020-01-10', '2020-01-01']\n    txn_type TEXT, -- example: ['withdrawal', 'deposit']\n    txn_amount INTEGER, -- example: [82, 712, 196]\n);\n\nCREATE TABLE bitcoin_transactions (\n    ticker TEXT, -- example: ['BTC', 'ETH']\n    txn_date TEXT, -- example: ['01-01-2017', '02-01-2017', '03-01-2017']\n    txn_type TEXT, -- example: ['BUY', 'SELL']\n    quantity REAL, -- example: [50.0, 9.562185136, 8.842987018]\n    percentage_fee REAL, -- example: [0.3, 0.0, 0.02]\n\nCREATE TABLE customer_nodes (\n    customer_id INTEGER, -- example: [1, 2, 3]\n\nCREATE TABLE cleaned_weekly_sales (\n    region TEXT, -- example: ['ASIA', 'USA', 'EUROPE']\n    customer_type TEXT, -- example: ['New', 'Guest', 'Existing']\n    transactions INTEGER, -- example: [120631, 31574, 529151]\n    sales INTEGER, -- example: [3656163, 996575, 16509610]\n    month_number INTEGER, -- example: [8, 7, 6]\n\nCREATE TABLE veg_txn_df (\n    txn_date TEXT, -- example: ['2020-07-01 00:00:00', '2020-07-02 00:00:00', '2020-07-03 00:00:00']\n    `discount(%)` INTEGER, -- example: [1]\n    day_of_week TEXT, -- example: ['Wednesday', 'Thursday', 'Friday']\n);\n\nCREATE TABLE shopping_cart_events (\n    \n\nCREATE TABLE shopping_cart_page_hierarchy (\n    page_name TEXT, -- example: ['Home Page', 'All Products', 'Salmon']\n\nCREATE TABLE bitcoin_prices (\n    ticker TEXT, -- example: ['ETH', 'BTC']\n    price REAL, -- example: [3177.84, 3243.9, 3273.58]\n    low REAL, -- example: [3162.79, 3212.24, 3063.37]\n    volume TEXT, -- example: ['582.04K', '466.21K', '839.54K']\n    change TEXT, -- example: ['5.00%', '0.90%']\n);\n\nCREATE TABLE interest_map (\n    last_modified TEXT, -- example: ['2018-05-23 11:30:12', '2018-05-23 11:30:13', '2018-03-16 13:14:00']\n);\n\nCREATE TABLE veg_loss_rate_df (\n    `loss_rate_%` REAL, -- example: [4.39, 10.46, 10.8]\n);\n\nCREATE TABLE shopping_cart_campaign_identifier (\n    \n\nCREATE TABLE veg_cat (\n    \n\nCREATE TABLE veg_whsle_df (\n    \n\nCREATE TABLE shopping_cart_event_identifier (\n    ",
        "question": "For each customer, group all deposits and withdrawals by the first day of each month to obtain a monthly net amount, then calculate each month\u2019s closing balance by cumulatively summing these monthly nets. Next, determine the most recent month\u2019s growth rate by comparing its closing balance to the prior month\u2019s balance, treating deposits as positive and withdrawals as negative, and if the previous month\u2019s balance is zero, the growth rate should be the current month\u2019s balance multiplied by 100. Finally, compute the percentage of customers whose most recent month shows a growth rate of more than 5%.",
        "instance_id": "local297",
        "db_id": "bank_sales_trading"
    },
    {
        "db_desc": "CREATE TABLE weekly_sales (\n    region TEXT, -- example: ['ASIA', 'USA', 'EUROPE']\n    transactions INTEGER, -- example: [120631, 31574, 529151]\n    sales INTEGER, -- example: [3656163, 996575, 16509610]\n);\n\nCREATE TABLE shopping_cart_users (\n    user_id INTEGER, -- example: [1, 2, 3]\n\nCREATE TABLE bitcoin_members (\n    first_name TEXT, -- example: ['Danny', 'Vipul', 'Charlie']\n    region TEXT, -- example: ['Australia', 'United States', 'Africa']\n);\n\nCREATE TABLE interest_metrics (\n    _month REAL, -- example: [7.0, 8.0, 9.0]\n    month_year TEXT, -- example: ['07-2018', '08-2018', '09-2018']\n    ranking INTEGER, -- example: [1, 2, 3]\n\nCREATE TABLE customer_regions (\n    \n\nCREATE TABLE customer_transactions (\n    txn_date TEXT, -- example: ['2020-01-21', '2020-01-10', '2020-01-01']\n    txn_amount INTEGER, -- example: [82, 712, 196]\n);\n\nCREATE TABLE bitcoin_transactions (\n    txn_date TEXT, -- example: ['01-01-2017', '02-01-2017', '03-01-2017']\n    quantity REAL, -- example: [50.0, 9.562185136, 8.842987018]\n\nCREATE TABLE customer_nodes (\n    \n\nCREATE TABLE cleaned_weekly_sales (\n    region TEXT, -- example: ['ASIA', 'USA', 'EUROPE']\n    transactions INTEGER, -- example: [120631, 31574, 529151]\n    sales INTEGER, -- example: [3656163, 996575, 16509610]\n    month_number INTEGER, -- example: [8, 7, 6]\n\nCREATE TABLE veg_txn_df (\n    txn_date TEXT, -- example: ['2020-07-01 00:00:00', '2020-07-02 00:00:00', '2020-07-03 00:00:00']\n    `sale/return` TEXT, -- example: ['sale', 'return']\n\nCREATE TABLE shopping_cart_events (\n    \n\nCREATE TABLE shopping_cart_page_hierarchy (\n    \n\nCREATE TABLE bitcoin_prices (\n    `open` REAL, -- example: [3243.96, 3273.78, 3093.78]\n    high REAL, -- example: [3282.21, 3284.58, 3279.93]\n    low REAL, -- example: [3162.79, 3212.24, 3063.37]\n    volume TEXT, -- example: ['582.04K', '466.21K', '839.54K']\n    change TEXT, -- example: ['-2.04%', '-0.91%', '5.82%']\n);\n\nCREATE TABLE interest_map (\n    id INTEGER, -- example: [1, 2, 3]\n    interest_name TEXT, -- example: ['GIS Users']\n\nCREATE TABLE veg_loss_rate_df (\n    \n\nCREATE TABLE shopping_cart_campaign_identifier (\n    \n\nCREATE TABLE veg_cat (\n    \n\nCREATE TABLE veg_whsle_df (\n    \n\nCREATE TABLE shopping_cart_event_identifier (\n    ",
        "question": "For each month, calculate the total balance from all users for the previous month (measured as of the 1st of each month), replacing any negative balances with zero. Ensure that data from the first month is used only as a baseline for calculating previous total balance, and exclude it from the final output. Sort the results in ascending order by month. ",
        "instance_id": "local298",
        "db_id": "bank_sales_trading"
    },
    {
        "db_desc": "CREATE TABLE weekly_sales (\n    region TEXT, -- example: ['ASIA', 'USA', 'EUROPE']\n    transactions INTEGER, -- example: [120631, 31574, 529151]\n\nCREATE TABLE shopping_cart_users (\n    user_id INTEGER, -- example: [1, 2, 3]\n\nCREATE TABLE bitcoin_members (\n    first_name TEXT, -- example: ['Danny', 'Vipul', 'Charlie']\n    region TEXT, -- example: ['Australia', 'United States', 'Africa']\n);\n\nCREATE TABLE interest_metrics (\n    _month REAL, -- example: [7.0, 8.0, 9.0]\n    month_year TEXT, -- example: ['07-2018', '08-2018', '09-2018']\n    ranking INTEGER, -- example: [1, 2, 3]\n\nCREATE TABLE customer_regions (\n    \n\nCREATE TABLE customer_transactions (\n    customer_id INTEGER, -- example: [429, 155, 398]\n    txn_date TEXT, -- example: ['2020-01-21', '2020-01-10', '2020-01-01']\n    txn_amount INTEGER, -- example: [82, 712, 196]\n);\n\nCREATE TABLE bitcoin_transactions (\n    txn_date TEXT, -- example: ['01-01-2017', '02-01-2017', '03-01-2017']\n    quantity REAL, -- example: [50.0, 9.562185136, 8.842987018]\n\nCREATE TABLE customer_nodes (\n    customer_id INTEGER, -- example: [1, 2, 3]\n\nCREATE TABLE cleaned_weekly_sales (\n    region TEXT, -- example: ['ASIA', 'USA', 'EUROPE']\n    transactions INTEGER, -- example: [120631, 31574, 529151]\n    month_number INTEGER, -- example: [8, 7, 6]\n    avg_transaction REAL, -- example: [30.31, 31.56, 31.2]\n);\n\nCREATE TABLE veg_txn_df (\n    txn_date TEXT, -- example: ['2020-07-01 00:00:00', '2020-07-02 00:00:00', '2020-07-03 00:00:00']\n    day_of_week TEXT, -- example: ['Wednesday', 'Thursday', 'Friday']\n);\n\nCREATE TABLE shopping_cart_events (\n    \n\nCREATE TABLE shopping_cart_page_hierarchy (\n    \n\nCREATE TABLE bitcoin_prices (\n    `open` REAL, -- example: [3243.96, 3273.78, 3093.78]\n    high REAL, -- example: [3282.21, 3284.58, 3279.93]\n    change TEXT, -- example: ['-2.04%', '-0.91%', '5.82%']\n);\n\nCREATE TABLE interest_map (\n    interest_name TEXT, -- example: ['GIS Users']\n\nCREATE TABLE veg_loss_rate_df (\n    \n\nCREATE TABLE shopping_cart_campaign_identifier (\n    \n\nCREATE TABLE veg_cat (\n    \n\nCREATE TABLE veg_whsle_df (\n    \n\nCREATE TABLE shopping_cart_event_identifier (\n    ",
        "question": "Could you calculate each user\u2019s average balance over the past 30 days, computed daily? Then, for each month (based on the 1st of each month), find the highest of these daily averages for each user. Add up these maximum values across all users for each month as the final result. Please use the first month as a baseline for previous balances and exclude it from the output.",
        "instance_id": "local299",
        "db_id": "bank_sales_trading"
    },
    {
        "db_desc": "CREATE TABLE weekly_sales (\n    week_date TEXT, -- example: ['31/8/20', '24/8/20', '17/8/20']\n    region TEXT, -- example: ['ASIA', 'USA', 'EUROPE']\n    customer_type TEXT, -- example: ['New', 'Guest', 'Existing']\n    transactions INTEGER, -- example: [120631, 31574, 529151]\n    sales INTEGER, -- example: [3656163, 996575, 16509610]\n);\n\nCREATE TABLE shopping_cart_users (\n    \n\nCREATE TABLE bitcoin_members (\n    region TEXT, -- example: ['Australia', 'United States', 'Africa']\n);\n\nCREATE TABLE interest_metrics (\n    _month REAL, -- example: [7.0, 8.0, 9.0]\n    month_year TEXT, -- example: ['07-2018', '08-2018', '09-2018']\n    composition REAL, -- example: [11.89, 9.93, 10.85]\n\nCREATE TABLE customer_regions (\n    \n\nCREATE TABLE customer_transactions (\n    customer_id INTEGER, -- example: [429, 155, 398]\n    txn_date TEXT, -- example: ['2020-01-21', '2020-01-10', '2020-01-01']\n    txn_amount INTEGER, -- example: [82, 712, 196]\n);\n\nCREATE TABLE bitcoin_transactions (\n    txn_date TEXT, -- example: ['01-01-2017', '02-01-2017', '03-01-2017']\n    quantity REAL, -- example: [50.0, 9.562185136, 8.842987018]\n\nCREATE TABLE customer_nodes (\n    customer_id INTEGER, -- example: [1, 2, 3]\n\nCREATE TABLE cleaned_weekly_sales (\n    week_date TEXT, -- example: ['2020-08-31', '2020-08-24', '2020-08-17']\n    region TEXT, -- example: ['ASIA', 'USA', 'EUROPE']\n    customer_type TEXT, -- example: ['New', 'Guest', 'Existing']\n    transactions INTEGER, -- example: [120631, 31574, 529151]\n    sales INTEGER, -- example: [3656163, 996575, 16509610]\n    month_number INTEGER, -- example: [8, 7, 6]\n    avg_transaction REAL, -- example: [30.31, 31.56, 31.2]\n);\n\nCREATE TABLE veg_txn_df (\n    txn_date TEXT, -- example: ['2020-07-01 00:00:00', '2020-07-02 00:00:00', '2020-07-03 00:00:00']\n    `sale/return` TEXT, -- example: ['sale', 'return']\n    day_of_week TEXT, -- example: ['Wednesday', 'Thursday', 'Friday']\n);\n\nCREATE TABLE shopping_cart_events (\n    \n\nCREATE TABLE shopping_cart_page_hierarchy (\n    \n\nCREATE TABLE bitcoin_prices (\n    market_date TEXT, -- example: ['29-08-2021', '28-08-2021', '27-08-2021']\n    `open` REAL, -- example: [3243.96, 3273.78, 3093.78]\n    high REAL, -- example: [3282.21, 3284.58, 3279.93]\n    low REAL, -- example: [3162.79, 3212.24, 3063.37]\n    volume TEXT, -- example: ['582.04K', '466.21K', '839.54K']\n    change TEXT, -- example: ['-2.04%', '-0.91%', '5.82%']\n);\n\nCREATE TABLE interest_map (\n    \n\nCREATE TABLE veg_loss_rate_df (\n    \n\nCREATE TABLE shopping_cart_campaign_identifier (\n    \n\nCREATE TABLE veg_cat (\n    \n\nCREATE TABLE veg_whsle_df (\n    whsle_date TEXT, -- example: ['2020-07-01 00:00:00', '2020-07-02 00:00:00', '2020-07-03 00:00:00']\n\nCREATE TABLE shopping_cart_event_identifier (\n    ",
        "question": "For each customer, calculate their daily balances for every day between their earliest and latest transaction dates, including days without transactions by carrying forward the previous day's balance. Treat any negative daily balances as zero. Then, for each month, determine the highest daily balance each customer had during that month. Finally, for each month, sum these maximum daily balances across all customers to obtain a monthly total.",
        "instance_id": "local300",
        "db_id": "bank_sales_trading"
    },
    {
        "db_desc": "CREATE TABLE weekly_sales (\n    transactions INTEGER, -- example: [120631, 31574, 529151]\n    sales INTEGER, -- example: [3656163, 996575, 16509610]\n);\n\nCREATE TABLE shopping_cart_users (\n    \n\nCREATE TABLE bitcoin_members (\n    member_id TEXT, -- example: ['c4ca42', 'c81e72', 'eccbc8']\n\nCREATE TABLE interest_metrics (\n    \n\nCREATE TABLE customer_regions (\n    \n\nCREATE TABLE customer_transactions (\n    \n\nCREATE TABLE bitcoin_transactions (\n    member_id TEXT, -- example: ['c81e72', 'eccbc8', 'a87ff6']\n    quantity REAL, -- example: [50.0, 9.562185136, 8.842987018]\n\nCREATE TABLE customer_nodes (\n    node_id INTEGER, -- example: [4, 5, 3]\n\nCREATE TABLE cleaned_weekly_sales (\n    transactions INTEGER, -- example: [120631, 31574, 529151]\n    sales INTEGER, -- example: [3656163, 996575, 16509610]\n\nCREATE TABLE veg_txn_df (\n    `sale/return` TEXT, -- example: ['sale', 'return']\n\nCREATE TABLE shopping_cart_events (\n    visit_id TEXT, -- example: ['ccf365', 'd58cbd', '9a2f24']\n    page_id INTEGER, -- example: [1, 2, 6]\n    event_type INTEGER, -- example: [1, 2, 3]\n\nCREATE TABLE shopping_cart_page_hierarchy (\n    page_id INTEGER, -- example: [1, 2, 3]\n    page_name TEXT, -- example: ['Home Page', 'All Products', 'Salmon']\n    product_category TEXT, -- example: ['Fish', 'Luxury', 'Shellfish']\n    product_id REAL, -- example: [1.0, 2.0, 3.0]\n);\n\nCREATE TABLE bitcoin_prices (\n    price REAL, -- example: [3177.84, 3243.9, 3273.58]\n    `open` REAL, -- example: [3243.96, 3273.78, 3093.78]\n    change TEXT, -- example: ['-2.04%', '-0.91%', '5.82%']\n);\n\nCREATE TABLE interest_map (\n    id INTEGER, -- example: [1, 2, 3]\n\nCREATE TABLE veg_loss_rate_df (\n    \n\nCREATE TABLE shopping_cart_campaign_identifier (\n    products TEXT, -- example: ['1-3', '4-5', '6-8']\n\nCREATE TABLE veg_cat (\n    \n\nCREATE TABLE veg_whsle_df (\n    \n\nCREATE TABLE shopping_cart_event_identifier (\n    event_type INTEGER, -- example: [1, 2, 3]",
        "question": "Can you provide a breakdown of how many times each product was viewed, how many times they were added to the shopping cart, and how many times they were left in the cart without being purchased? Also, give me the count of actual purchases for each product. Ensure that products with a page id in (1, 2, 12, 13) are filtered out.",
        "instance_id": "local075",
        "db_id": "bank_sales_trading"
    },
    {
        "db_desc": "CREATE TABLE weekly_sales (\n    week_date TEXT, -- example: ['31/8/20', '24/8/20', '17/8/20']\n    region TEXT, -- example: ['ASIA', 'USA', 'EUROPE']\n\nCREATE TABLE shopping_cart_users (\n    start_date TEXT, -- example: ['2020-02-04', '2020-01-18', '2020-02-21']\n);\n\nCREATE TABLE bitcoin_members (\n    first_name TEXT, -- example: ['Danny', 'Vipul', 'Charlie']\n    region TEXT, -- example: ['Australia', 'United States', 'Africa']\n);\n\nCREATE TABLE interest_metrics (\n    _month REAL, -- example: [7.0, 8.0, 9.0]\n    month_year TEXT, -- example: ['09-2018', '08-2019']\n    interest_id REAL, -- example: [32486.0, 6106.0, 18923.0]\n    composition REAL, -- example: [11.89, 9.93, 10.85]\n    index_value REAL, -- example: [6.19, 5.31, 5.29]\n\nCREATE TABLE customer_regions (\n    \n\nCREATE TABLE customer_transactions (\n    txn_date TEXT, -- example: ['2020-01-21', '2020-01-10', '2020-01-01']\n\nCREATE TABLE bitcoin_transactions (\n    txn_date TEXT, -- example: ['01-01-2017', '02-01-2017', '03-01-2017']\n    quantity REAL, -- example: [50.0, 9.562185136, 8.842987018]\n\nCREATE TABLE customer_nodes (\n    start_date TEXT, -- example: ['2020-01-02', '2020-01-03', '2020-01-27']\n    end_date TEXT, -- example: ['2020-01-03', '2020-01-17', '2020-02-18']\n);\n\nCREATE TABLE cleaned_weekly_sales (\n    week_date TEXT, -- example: ['2020-08-31', '2020-08-24', '2020-08-17']\n    region TEXT, -- example: ['ASIA', 'USA', 'EUROPE']\n    month_number INTEGER, -- example: [8, 7, 6]\n    calendar_year INTEGER, -- example: [2020, 2019, 2018]\n\nCREATE TABLE veg_txn_df (\n    `index` INTEGER, -- example: [0, 1, 2]\n    txn_date TEXT, -- example: ['2020-07-01 00:00:00', '2020-07-02 00:00:00', '2020-07-03 00:00:00']\n\nCREATE TABLE shopping_cart_events (\n    \n\nCREATE TABLE shopping_cart_page_hierarchy (\n    page_name TEXT, -- example: ['Home Page', 'All Products', 'Salmon']\n\nCREATE TABLE bitcoin_prices (\n    market_date TEXT, -- example: ['29-08-2021', '28-08-2021', '27-08-2021']\n    price REAL, -- example: [3177.84, 3243.9, 3273.58]\n    `open` REAL, -- example: [3243.96, 3273.78, 3093.78]\n    high REAL, -- example: [3282.21, 3284.58, 3279.93]\n\nCREATE TABLE interest_map (\n    id INTEGER, -- example: [1, 2, 3]\n    interest_name TEXT, -- example: ['Fitness Enthusiasts', 'Gamers', 'Car Enthusiasts']\n    interest_summary TEXT, -- example: ['Consumers using fitness tracking apps an', 'Consumers researching game reviews and c', 'Readers of automotive news and car revie']\n\nCREATE TABLE veg_loss_rate_df (\n    `index` INTEGER, -- example: [0, 1, 2]\n    item_name TEXT, -- example: ['Niushou Shengcai', 'Sichuan Red Cedar', 'Xixia Black Mushroom (1)']\n\nCREATE TABLE shopping_cart_campaign_identifier (\n    products TEXT, -- example: ['1-3', '4-5', '6-8']\n    start_date TEXT, -- example: ['2020-01-01', '2020-01-15', '2020-02-01']\n    end_date TEXT, -- example: ['2020-01-14', '2020-01-28', '2020-03-31']\n);\n\nCREATE TABLE veg_cat (\n    `index` INTEGER, -- example: [0, 1, 2]\n    item_name TEXT, -- example: ['Niushou Shengcai', 'Sichuan Red Cedar', 'Local Xiaomao Cabbage']\n\nCREATE TABLE veg_whsle_df (\n    `index` INTEGER, -- example: [0, 1, 2]\n    whsle_date TEXT, -- example: ['2020-07-01 00:00:00', '2020-07-02 00:00:00', '2020-07-03 00:00:00']\n\nCREATE TABLE shopping_cart_event_identifier (\n    ",
        "question": "Please analyze our interest data from September 2018 to August 2019. For each month, calculate the average composition for each interest by dividing the composition by the index value. Identify the interest with the highest average composition value each month and report its average composition as the max index composition for that month. Compute the three-month rolling average of these monthly max index compositions. Ensure the output includes the date, the interest name, the max index composition for that month, the rolling average, and the names and max index compositions of the top interests from one month ago and two months ago.",
        "instance_id": "local077",
        "db_id": "bank_sales_trading"
    },
    {
        "db_desc": "CREATE TABLE weekly_sales (\n    platform TEXT, -- example: ['Retail', 'Shopify']\n\nCREATE TABLE shopping_cart_users (\n    \n\nCREATE TABLE bitcoin_members (\n    first_name TEXT, -- example: ['Danny', 'Vipul', 'Charlie']\n\nCREATE TABLE interest_metrics (\n    _month REAL, -- example: [7.0, 8.0, 9.0]\n    month_year TEXT, -- example: ['07-2018', '08-2018', '09-2018']\n    interest_id REAL, -- example: [32486.0, 6106.0, 18923.0]\n    composition REAL, -- example: [11.89, 9.93, 10.85]\n    ranking INTEGER, -- example: [1, 2, 3]\n\nCREATE TABLE customer_regions (\n    \n\nCREATE TABLE customer_transactions (\n    \n\nCREATE TABLE bitcoin_transactions (\n    quantity REAL, -- example: [50.0, 9.562185136, 8.842987018]\n    txn_time TEXT, -- example: ['2017-01-01T00:00:00.000Z', '2017-01-01T01:22:32.097Z', '2017-01-01T06:22:20.203Z']\n);\n\nCREATE TABLE customer_nodes (\n    \n\nCREATE TABLE cleaned_weekly_sales (\n    platform TEXT, -- example: ['Retail', 'Shopify']\n    month_number INTEGER, -- example: [8, 7, 6]\n\nCREATE TABLE veg_txn_df (\n    txn_time TEXT, -- example: ['09:15:07', '09:17:27', '09:17:33']\n\nCREATE TABLE shopping_cart_events (\n    event_time TEXT, -- example: ['2020-02-04 19:16:09.182546', '2020-02-04 19:16:17.358191', '2020-02-04 19:16:58.454669']\n);\n\nCREATE TABLE shopping_cart_page_hierarchy (\n    page_name TEXT, -- example: ['Home Page', 'All Products', 'Salmon']\n    product_category TEXT, -- example: ['Fish', 'Luxury', 'Shellfish']\n\nCREATE TABLE bitcoin_prices (\n    price REAL, -- example: [3177.84, 3243.9, 3273.58]\n    high REAL, -- example: [3282.21, 3284.58, 3279.93]\n    low REAL, -- example: [3162.79, 3212.24, 3063.37]\n\nCREATE TABLE interest_map (\n    id INTEGER, -- example: [1, 2, 3]\n    interest_name TEXT, -- example: ['Fitness Enthusiasts', 'Gamers', 'Car Enthusiasts']\n    interest_summary TEXT, -- example: ['Consumers using fitness tracking apps an', 'Consumers researching game reviews and c', 'Readers of automotive news and car revie']\n\nCREATE TABLE veg_loss_rate_df (\n    item_name TEXT, -- example: ['Niushou Shengcai', 'Sichuan Red Cedar', 'Xixia Black Mushroom (1)']\n\nCREATE TABLE shopping_cart_campaign_identifier (\n    products TEXT, -- example: ['1-3', '4-5', '6-8']\n\nCREATE TABLE veg_cat (\n    item_name TEXT, -- example: ['Niushou Shengcai', 'Sichuan Red Cedar', 'Local Xiaomao Cabbage']\n    category_code INTEGER, -- example: [1011010101, 1011010201, 1011010402]\n    category_name TEXT, -- example: ['Flower/Leaf\\xa0Vegetables', 'Cabbage', 'Aquatic Tuberous Vegetables']\n);\n\nCREATE TABLE veg_whsle_df (\n    \n\nCREATE TABLE shopping_cart_event_identifier (\n    event_name TEXT, -- example: ['Page View', 'Add to Cart', 'Purchase']\n);",
        "question": "Identify the top 10 and bottom 10 interest categories based on their highest composition values across all months. For each category, display the time(MM-YYYY), interest name, and the composition value",
        "instance_id": "local078",
        "db_id": "bank_sales_trading"
    },
    {
        "db_desc": "CREATE TABLE categories (\n    picture BLOB, -- example: ['\\\\x']\n);\n\nCREATE TABLE customercustomerdemo (\n    customerid TEXT,\n    customertypeid TEXT\n);\n\nCREATE TABLE customerdemographics (\n    customertypeid TEXT,\n    customerdesc TEXT\n);\n\nCREATE TABLE customers (\n    customerid TEXT, -- example: ['ALFKI', 'ANATR', 'ANTON']\n    companyname TEXT, -- example: ['Alfreds Futterkiste', 'Ana Trujillo Emparedados y helados', 'Antonio Moreno Taquer\u00eda']\n    contactname TEXT, -- example: ['Maria Anders', 'Ana Trujillo', 'Antonio Moreno']\n    contacttitle TEXT, -- example: ['Sales Representative', 'Owner', 'Order Administrator']\n    city TEXT, -- example: ['Berlin', 'M\u00e9xico D.F.', 'London']\n    phone TEXT, -- example: ['030-0074321', '(5) 555-4729', '(5) 555-3932']\n\nCREATE TABLE employees (\n    lastname TEXT, -- example: ['Davolio', 'Fuller', 'Leverling']\n    firstname TEXT, -- example: ['Nancy', 'Andrew', 'Janet']\n    birthdate DATE, -- example: ['1948-12-08', '1952-02-19', '1963-08-30']\n    city TEXT, -- example: ['Seattle', 'Tacoma', 'Kirkland']\n    reportsto INTEGER, -- example: [2, 5]\n\nCREATE TABLE employeeterritories (\n    \n\nCREATE TABLE order_details (\n    orderid INTEGER, -- example: [10248, 10249, 10250]\n    unitprice REAL, -- example: [14.0, 9.80000019, 34.7999992]\n    quantity INTEGER, -- example: [12, 10, 5]\n    discount REAL, -- example: [0.0, 0.150000006, 0.0500000007]\n);\n\nCREATE TABLE orders (\n    orderid INTEGER, -- example: [10248, 10249, 10250]\n    customerid TEXT, -- example: ['VINET', 'TOMSP', 'HANAR']\n    orderdate DATE, -- example: ['1996-07-04', '1996-07-05', '1996-07-08']\n\nCREATE TABLE products (\n    productname TEXT, -- example: ['Chai', 'Chang', 'Aniseed Syrup']\n    quantityperunit TEXT, -- example: ['10 boxes x 30 bags', '24 - 12 oz bottles', '12 - 550 ml bottles']\n    unitprice REAL, -- example: [18.0, 19.0, 10.0]\n    unitsinstock INTEGER, -- example: [39, 17, 13]\n    unitsonorder INTEGER, -- example: [0, 40, 70]\n\nCREATE TABLE region (\n    \n\nCREATE TABLE shippers (\n    companyname TEXT, -- example: ['Speedy Express', 'United Package', 'Federal Shipping']\n    phone TEXT, -- example: ['(503) 555-9831', '(503) 555-3199', '(503) 555-9931']\n);\n\nCREATE TABLE suppliers (\n    companyname TEXT, -- example: ['Exotic Liquids', 'New Orleans Cajun Delights', \"Grandma Kelly's Homestead\"]\n    contactname TEXT, -- example: ['Charlotte Cooper', 'Shelley Burke', 'Regina Murphy']\n    contacttitle TEXT, -- example: ['Purchasing Manager', 'Order Administrator', 'Sales Representative']\n    city TEXT, -- example: ['London', 'New Orleans', 'Ann Arbor']\n    phone TEXT, -- example: ['(171) 555-2222', '(100) 555-4822', '(313) 555-5735']\n\nCREATE TABLE territories (\n    \n\nCREATE TABLE usstates (\n    \n\nCREATE TABLE customergroupthreshold (\n    groupname TEXT, -- example: ['Low', 'Medium', 'High']\n    rangebottom DECIMAL, -- example: [0, 1000, 5000]\n    rangetop DECIMAL, -- example: [999.9999, 4999.9999, 9999.9999]\n);",
        "question": "Considering only the customers who placed orders in 1998, calculate the total amount each customer spent by summing the unit price multiplied by the quantity of all products in their orders, excluding any discounts. Assign each customer to a spending group based on the customer group thresholds, and determine how many customers are in each spending group and what percentage of the total number of customers who placed orders in 1998 each group represents.",
        "instance_id": "local081",
        "db_id": "northwind"
    },
    {
        "db_desc": "CREATE TABLE aircrafts_data (\n    `range` integer, -- example: [11100, 7900, 3000]\n);\n\nCREATE TABLE airports_data (\n    city jsonb, -- example: ['{\"en\": \"Yakutsk\", \"ru\": \"\u042f\u043a\u0443\u0442\u0441\u043a\"}', '{\"en\": \"Mirnyj\", \"ru\": \"\u041c\u0438\u0440\u043d\u044b\u0439\"}', '{\"en\": \"Khabarovsk\", \"ru\": \"\u0425\u0430\u0431\u0430\u0440\u043e\u0432\u0441\u043a\"}']\n    coordinates point, -- example: ['(129.77099609375,62.0932998657226562)', '(114.03900146484375,62.534698486328125)', '(135.18800354004,48.5279998779300001)']\n\nCREATE TABLE boarding_passes (\n    \n\nCREATE TABLE bookings (\n    \n\nCREATE TABLE flights (\n    scheduled_departure timestamp with time zone, -- example: ['2017-09-10 09:50:00+03', '2017-08-25 14:50:00+03', '2017-09-05 12:30:00+03']\n    departure_airport character(3), -- example: ['DME', 'VKO', 'SVO']\n    actual_departure timestamp with time zone, -- example: ['\\\\N', '2017-07-16 09:44:00+03', '2017-08-05 19:06:00+03']\n    actual_arrival timestamp with time zone, -- example: ['\\\\N', '2017-07-16 10:39:00+03', '2017-08-05 20:01:00+03']\n);\n\nCREATE TABLE seats (\n    \n\nCREATE TABLE ticket_flights (\n    \n\nCREATE TABLE tickets (\n    ",
        "question": "What is the distance of the longest route where Abakan is either the departure or destination city (in kilometers)?",
        "instance_id": "local009",
        "db_id": "Airlines"
    },
    {
        "db_desc": "CREATE TABLE categories (\n    categoryid INTEGER, -- example: [1, 2, 3]\n\nCREATE TABLE customercustomerdemo (\n    customerid TEXT,\n    customertypeid TEXT\n);\n\nCREATE TABLE customerdemographics (\n    customertypeid TEXT,\n    customerdesc TEXT\n);\n\nCREATE TABLE customers (\n    customerid TEXT, -- example: ['ALFKI', 'ANATR', 'ANTON']\n    companyname TEXT, -- example: ['Alfreds Futterkiste', 'Ana Trujillo Emparedados y helados', 'Antonio Moreno Taquer\u00eda']\n    contactname TEXT, -- example: ['Maria Anders', 'Ana Trujillo', 'Antonio Moreno']\n    contacttitle TEXT, -- example: ['Sales Representative', 'Owner', 'Order Administrator']\n    address TEXT, -- example: ['Obere Str. 57', 'Avda. de la Constituci\u00f3n 2222', 'Mataderos  2312']\n    city TEXT, -- example: ['Berlin', 'M\u00e9xico D.F.', 'London']\n    region TEXT, -- example: ['ID']\n    country TEXT, -- example: ['Germany', 'Mexico', 'UK']\n    phone TEXT, -- example: ['030-0074321', '(5) 555-4729', '(5) 555-3932']\n\nCREATE TABLE employees (\n    employeeid INTEGER, -- example: [1, 2, 3]\n    lastname TEXT, -- example: ['Davolio', 'Fuller', 'Leverling']\n    firstname TEXT, -- example: ['Nancy', 'Andrew', 'Janet']\n    birthdate DATE, -- example: ['1948-12-08', '1952-02-19', '1963-08-30']\n    hiredate DATE, -- example: ['1992-05-01', '1992-08-14', '1992-04-01']\n    address TEXT, -- example: ['507 - 20th Ave. E.\\\\nApt. 2A', '908 W. Capital Way', '722 Moss Bay Blvd.']\n    city TEXT, -- example: ['Seattle', 'Tacoma', 'Kirkland']\n    region TEXT, -- example: ['WA']\n    country TEXT, -- example: ['USA', 'UK']\n    photo BLOB, -- example: ['\\\\x']\n\nCREATE TABLE employeeterritories (\n    employeeid INTEGER, -- example: [1, 2, 3]\n\nCREATE TABLE order_details (\n    orderid INTEGER, -- example: [10248, 10249, 10250]\n    productid INTEGER, -- example: [11, 42, 72]\n    quantity INTEGER, -- example: [12, 10, 5]\n\nCREATE TABLE orders (\n    orderid INTEGER, -- example: [10248, 10249, 10250]\n    customerid TEXT, -- example: ['VINET', 'TOMSP', 'HANAR']\n    employeeid INTEGER, -- example: [5, 6, 4]\n    orderdate DATE, -- example: ['1996-07-04', '1996-07-05', '1996-07-08']\n    requireddate DATE, -- example: ['1996-08-01', '1996-08-16', '1996-08-05']\n    shippeddate DATE, -- example: ['1996-07-16', '1996-07-10', '1996-07-12']\n    freight REAL, -- example: [32.3800011, 11.6099997, 65.8300018]\n    shipcity TEXT, -- example: ['Reims', 'M\u00fcnster', 'Rio de Janeiro']\n    shipregion TEXT, -- example: ['ID']\n\nCREATE TABLE products (\n    productid INTEGER, -- example: [1, 2, 3]\n    productname TEXT, -- example: ['Chai', 'Chang', 'Aniseed Syrup']\n    categoryid INTEGER, -- example: [1, 2, 7]\n\nCREATE TABLE region (\n    regionid INTEGER, -- example: [1, 2, 3]\n\nCREATE TABLE shippers (\n    shipperid INTEGER, -- example: [1, 2, 3]\n    companyname TEXT, -- example: ['Speedy Express', 'United Package', 'Federal Shipping']\n    phone TEXT, -- example: ['(503) 555-9831', '(503) 555-3199', '(503) 555-9931']\n);\n\nCREATE TABLE suppliers (\n    companyname TEXT, -- example: ['Exotic Liquids', 'New Orleans Cajun Delights', \"Grandma Kelly's Homestead\"]\n    contactname TEXT, -- example: ['Charlotte Cooper', 'Shelley Burke', 'Regina Murphy']\n    contacttitle TEXT, -- example: ['Purchasing Manager', 'Order Administrator', 'Sales Representative']\n    address TEXT, -- example: ['49 Gilbert St.', 'P.O. Box 78934', '707 Oxford Rd.']\n    city TEXT, -- example: ['London', 'New Orleans', 'Ann Arbor']\n    region TEXT, -- example: ['LA', 'MI', 'Asturias']\n    country TEXT, -- example: ['UK', 'USA', 'Japan']\n    phone TEXT, -- example: ['(171) 555-2222', '(100) 555-4822', '(313) 555-5735']\n\nCREATE TABLE territories (\n    regionid INTEGER, -- example: [1, 3, 4]\n);\n\nCREATE TABLE usstates (\n    stateid INTEGER, -- example: [1, 2, 3]\n    stateabbr TEXT, -- example: ['ID']\n\nCREATE TABLE customergroupthreshold (\n    ",
        "question": "Among employees who have more than 50 total orders, which three have the highest percentage of late orders, where an order is considered late if the shipped date is on or after its required date? Please list each employee's ID, the number of late orders, and the corresponding late-order percentage.",
        "instance_id": "local085",
        "db_id": "northwind"
    },
    {
        "db_desc": "CREATE TABLE Movie (\n    `year` TEXT, -- example: ['2018', '2012', '2016']\n    rating REAL, -- example: [6.6, 6.2, 6.4]\n\nCREATE TABLE Genre (\n    \n\nCREATE TABLE `Language` (\n    LAID INTEGER, -- example: [0, 1, 2]\n);\n\nCREATE TABLE Country (\n    \n\nCREATE TABLE Location (\n    \n\nCREATE TABLE M_Location (\n    ID INTEGER, -- example: [0, 1, 2]\n);\n\nCREATE TABLE M_Country (\n    ID INTEGER, -- example: [0, 1, 2]\n);\n\nCREATE TABLE M_Language (\n    LAID INTEGER, -- example: [0, 1, 2]\n    ID INTEGER, -- example: [0, 1, 2]\n);\n\nCREATE TABLE M_Genre (\n    ID INTEGER, -- example: [0, 1, 2]\n);\n\nCREATE TABLE Person (\n    Gender TEXT, -- example: ['Male', 'Female']\n);\n\nCREATE TABLE M_Producer (\n    ID INTEGER, -- example: [0, 1, 2]\n);\n\nCREATE TABLE M_Director (\n    ID INTEGER, -- example: [0, 1, 2]\n);\n\nCREATE TABLE M_Cast (\n    ID INTEGER, -- example: [0, 1, 2]\n);",
        "question": "For each year, calculate the proportion of films that had exclusively female actors, considering actors with gender 'Male' or 'None' (i.e., unknown or unspecified gender) as non-female. Show the proportion of female-actor-only films and the total number of all films for each year.",
        "instance_id": "local096",
        "db_id": "Db-IMDB"
    },
    {
        "db_desc": "CREATE TABLE Movie (\n    `index` INTEGER, -- example: [0, 1, 2]\n    MID TEXT, -- example: ['tt2388771', 'tt5164214', 'tt1365519']\n    `year` TEXT, -- example: ['2018', '2012', '2016']\n    rating REAL, -- example: [6.6, 6.2, 6.4]\n    num_votes INTEGER, -- example: [21967, 110861, 142585]\n);\n\nCREATE TABLE Genre (\n    `index` INTEGER, -- example: [0, 1, 2]\n    Name TEXT, -- example: ['Adventure, Drama, Fantasy            ', 'Action, Comedy, Crime            ', 'Action, Adventure, Fantasy            ']\n    GID INTEGER, -- example: [0, 1, 2]\n);\n\nCREATE TABLE `Language` (\n    `index` INTEGER, -- example: [0, 1, 2]\n    Name TEXT, -- example: ['English', 'Marathi', 'Hindi']\n    LAID INTEGER, -- example: [0, 1, 2]\n);\n\nCREATE TABLE Country (\n    `index` INTEGER, -- example: [0, 1, 2]\n    Name TEXT, -- example: ['UK', 'USA', 'India']\n\nCREATE TABLE Location (\n    `index` INTEGER, -- example: [0, 1, 2]\n    Name TEXT, -- example: ['Durban, South Africa', 'New York City, New York, USA', 'Cape Town Film Studios, Cape Town, Weste']\n\nCREATE TABLE M_Location (\n    `index` INTEGER, -- example: [0, 1, 2]\n    MID TEXT, -- example: ['tt2388771', 'tt5164214', 'tt1365519']\n    ID INTEGER, -- example: [0, 1, 2]\n);\n\nCREATE TABLE M_Country (\n    `index` INTEGER, -- example: [0, 1, 2]\n    MID TEXT, -- example: ['tt2388771', 'tt5164214', 'tt1365519']\n    ID INTEGER, -- example: [0, 1, 2]\n);\n\nCREATE TABLE M_Language (\n    `index` INTEGER, -- example: [0, 1, 2]\n    MID TEXT, -- example: ['tt2388771', 'tt5164214', 'tt1365519']\n    LAID INTEGER, -- example: [0, 1, 2]\n    ID INTEGER, -- example: [0, 1, 2]\n);\n\nCREATE TABLE M_Genre (\n    `index` INTEGER, -- example: [0, 1, 2]\n    MID TEXT, -- example: ['tt2388771', 'tt5164214', 'tt1365519']\n    GID INTEGER, -- example: [0, 1, 2]\n    ID INTEGER, -- example: [0, 1, 2]\n);\n\nCREATE TABLE Person (\n    `index` INTEGER, -- example: [0, 1, 2]\n    PID TEXT, -- example: ['nm0000288', 'nm0000949', 'nm1212722']\n    Name TEXT, -- example: [' Christian Bale', ' Cate Blanchett', ' Benedict Cumberbatch']\n    Gender TEXT, -- example: ['Male', 'Female']\n);\n\nCREATE TABLE M_Producer (\n    `index` INTEGER, -- example: [0, 1, 2]\n    MID TEXT, -- example: ['tt2388771', 'tt5164214', 'tt1365519']\n    PID TEXT, -- example: [' nm0057655', ' nm0147080', ' nm0389414']\n    ID INTEGER, -- example: [0, 1, 2]\n);\n\nCREATE TABLE M_Director (\n    `index` INTEGER, -- example: [0, 1, 2]\n    MID TEXT, -- example: ['tt2388771', 'tt5164214', 'tt1365519']\n    PID TEXT, -- example: ['nm0785227', 'nm0002657', 'nm1012385']\n    ID INTEGER, -- example: [0, 1, 2]\n);\n\nCREATE TABLE M_Cast (\n    `index` INTEGER, -- example: [0, 1, 2]\n    MID TEXT, -- example: ['tt2388771', 'tt5164214', 'tt1365519']\n    PID TEXT, -- example: [' nm0000288', ' nm0000949', ' nm1212722']\n    ID INTEGER, -- example: [0, 1, 2]\n);",
        "question": "Could you analyze our data and identify which ten-year period starting from any movie release year present in the data had the largest number of films, considering consecutive ten-year periods beginning at each unique year? Only output the start year and the total count for that specific period.",
        "instance_id": "local097",
        "db_id": "Db-IMDB"
    },
    {
        "db_desc": "CREATE TABLE Movie (\n    MID TEXT, -- example: ['tt2388771', 'tt5164214', 'tt1365519']\n    title TEXT, -- example: ['The Film']\n    `year` TEXT, -- example: ['2018', '2012', '2016']\n    rating REAL, -- example: [6.6, 6.2, 6.4]\n\nCREATE TABLE Genre (\n    Name TEXT, -- example: ['Adventure, Drama, Fantasy            ', 'Action, Comedy, Crime            ', 'Action, Adventure, Fantasy            ']\n\nCREATE TABLE `Language` (\n    Name TEXT, -- example: ['English', 'Marathi', 'Hindi']\n    LAID INTEGER, -- example: [0, 1, 2]\n);\n\nCREATE TABLE Country (\n    Name TEXT, -- example: ['UK', 'USA', 'India']\n\nCREATE TABLE Location (\n    Name TEXT, -- example: ['Durban, South Africa', 'New York City, New York, USA', 'Cape Town Film Studios, Cape Town, Weste']\n\nCREATE TABLE M_Location (\n    MID TEXT, -- example: ['tt2388771', 'tt5164214', 'tt1365519']\n\nCREATE TABLE M_Country (\n    MID TEXT, -- example: ['tt2388771', 'tt5164214', 'tt1365519']\n\nCREATE TABLE M_Language (\n    MID TEXT, -- example: ['tt2388771', 'tt5164214', 'tt1365519']\n    LAID INTEGER, -- example: [0, 1, 2]\n\nCREATE TABLE M_Genre (\n    MID TEXT, -- example: ['tt2388771', 'tt5164214', 'tt1365519']\n\nCREATE TABLE Person (\n    PID TEXT, -- example: ['nm0000288', 'nm0000949', 'nm1212722']\n    Name TEXT, -- example: [' Christian Bale', ' Cate Blanchett', ' Benedict Cumberbatch']\n\nCREATE TABLE M_Producer (\n    MID TEXT, -- example: ['tt2388771', 'tt5164214', 'tt1365519']\n    PID TEXT, -- example: [' nm0057655', ' nm0147080', ' nm0389414']\n\nCREATE TABLE M_Director (\n    MID TEXT, -- example: ['tt2388771', 'tt5164214', 'tt1365519']\n    PID TEXT, -- example: ['nm0785227', 'nm0002657', 'nm1012385']\n\nCREATE TABLE M_Cast (\n    MID TEXT, -- example: ['tt2388771', 'tt5164214', 'tt1365519']\n    PID TEXT, -- example: [' nm0000288', ' nm0000949', ' nm1212722']",
        "question": "From the first year each actor appeared in a film to the last, how many actors in the database never had a gap longer than three consecutive years without at least one new movie appearance, meaning there is no four-year span anywhere in their active career without at least a single film credit?",
        "instance_id": "local098",
        "db_id": "Db-IMDB"
    },
    {
        "db_desc": "CREATE TABLE Movie (\n    MID TEXT, -- example: ['tt2388771', 'tt5164214', 'tt1365519']\n\nCREATE TABLE Genre (\n    Name TEXT, -- example: ['Adventure, Drama, Fantasy            ', 'Action, Comedy, Crime            ', 'Action, Adventure, Fantasy            ']\n\nCREATE TABLE `Language` (\n    Name TEXT, -- example: ['English', 'Marathi', 'Hindi']\n    LAID INTEGER, -- example: [0, 1, 2]\n);\n\nCREATE TABLE Country (\n    Name TEXT, -- example: ['UK', 'USA', 'India']\n\nCREATE TABLE Location (\n    Name TEXT, -- example: ['Durban, South Africa', 'New York City, New York, USA', 'Cape Town Film Studios, Cape Town, Weste']\n\nCREATE TABLE M_Location (\n    MID TEXT, -- example: ['tt2388771', 'tt5164214', 'tt1365519']\n\nCREATE TABLE M_Country (\n    MID TEXT, -- example: ['tt2388771', 'tt5164214', 'tt1365519']\n\nCREATE TABLE M_Language (\n    MID TEXT, -- example: ['tt2388771', 'tt5164214', 'tt1365519']\n    LAID INTEGER, -- example: [0, 1, 2]\n\nCREATE TABLE M_Genre (\n    MID TEXT, -- example: ['tt2388771', 'tt5164214', 'tt1365519']\n\nCREATE TABLE Person (\n    PID TEXT, -- example: ['nm0000288', 'nm0000949', 'nm1212722']\n    Name TEXT, -- example: [' Yash Chopra', ' Yash', ' Chopra']\n\nCREATE TABLE M_Producer (\n    MID TEXT, -- example: ['tt2388771', 'tt5164214', 'tt1365519']\n    PID TEXT, -- example: [' nm0057655', ' nm0147080', ' nm0389414']\n\nCREATE TABLE M_Director (\n    MID TEXT, -- example: ['tt2388771', 'tt5164214', 'tt1365519']\n    PID TEXT, -- example: ['nm0785227', 'nm0002657', 'nm1012385']\n\nCREATE TABLE M_Cast (\n    MID TEXT, -- example: ['tt2388771', 'tt5164214', 'tt1365519']\n    PID TEXT, -- example: [' nm0000288', ' nm0000949', ' nm1212722']",
        "question": "I need you to look into the actor collaborations and tell me how many actors have made more films with Yash Chopra than with any other director. This will help us understand his influence on the industry better.",
        "instance_id": "local099",
        "db_id": "Db-IMDB"
    },
    {
        "db_desc": "CREATE TABLE Movie (\n    MID TEXT, -- example: ['tt2388771', 'tt5164214', 'tt1365519']\n    rating REAL, -- example: [6.6, 6.2, 6.4]\n\nCREATE TABLE Genre (\n    Name TEXT, -- example: ['Adventure, Drama, Fantasy            ', 'Action, Comedy, Crime            ', 'Action, Adventure, Fantasy            ']\n\nCREATE TABLE `Language` (\n    Name TEXT, -- example: ['English', 'Marathi', 'Hindi']\n    LAID INTEGER, -- example: [0, 1, 2]\n);\n\nCREATE TABLE Country (\n    Name TEXT, -- example: ['UK', 'USA', 'India']\n\nCREATE TABLE Location (\n    Name TEXT, -- example: ['Durban, South Africa', 'New York City, New York, USA', 'Cape Town Film Studios, Cape Town, Weste']\n\nCREATE TABLE M_Location (\n    MID TEXT, -- example: ['tt2388771', 'tt5164214', 'tt1365519']\n    ID INTEGER, -- example: [0, 1, 2]\n);\n\nCREATE TABLE M_Country (\n    MID TEXT, -- example: ['tt2388771', 'tt5164214', 'tt1365519']\n    ID INTEGER, -- example: [0, 1, 2]\n);\n\nCREATE TABLE M_Language (\n    MID TEXT, -- example: ['tt2388771', 'tt5164214', 'tt1365519']\n    LAID INTEGER, -- example: [0, 1, 2]\n    ID INTEGER, -- example: [0, 1, 2]\n);\n\nCREATE TABLE M_Genre (\n    MID TEXT, -- example: ['tt2388771', 'tt5164214', 'tt1365519']\n    ID INTEGER, -- example: [0, 1, 2]\n);\n\nCREATE TABLE Person (\n    PID TEXT, -- example: ['nm0000288', 'nm0000949', 'nm1212722']\n    Name TEXT, -- example: [' Shah Rukh Khan', ' Master Shahrukh']\n\nCREATE TABLE M_Producer (\n    MID TEXT, -- example: ['tt2388771', 'tt5164214', 'tt1365519']\n    PID TEXT, -- example: [' nm0057655', ' nm0147080', ' nm0389414']\n    ID INTEGER, -- example: [0, 1, 2]\n);\n\nCREATE TABLE M_Director (\n    MID TEXT, -- example: ['tt2388771', 'tt5164214', 'tt1365519']\n    PID TEXT, -- example: ['nm0785227', 'nm0002657', 'nm1012385']\n    ID INTEGER, -- example: [0, 1, 2]\n);\n\nCREATE TABLE M_Cast (\n    MID TEXT, -- example: ['tt2388771', 'tt5164214', 'tt1365519']\n    PID TEXT, -- example: [' nm0000288', ' nm0000949', ' nm1212722']\n    ID INTEGER, -- example: [0, 1, 2]\n);",
        "question": "Find out how many actors have a 'Shahrukh number' of 2? This means they acted in a film with someone who acted with Shahrukh Khan, but not directly with him.",
        "instance_id": "local100",
        "db_id": "Db-IMDB"
    },
    {
        "db_desc": "CREATE TABLE hardware_dim_customer (\n    customer TEXT, -- example: ['Atliq Exclusive', 'Atliq e Store', 'Neptune']\n    market TEXT, -- example: ['India', 'Indonesia', 'Japan']\n    region TEXT, -- example: ['APAC', 'EU', 'LATAM']\n);\n\nCREATE TABLE hardware_fact_pre_invoice_deductions (\n    \n\nCREATE TABLE web_sales_reps (\n    id INTEGER, -- example: [321500, 321510, 321520]\n    name TEXT, -- example: ['Samuel Racine', 'Eugena Esser', 'Michel Averette']\n    region_id INTEGER, -- example: [1, 2, 3]\n);\n\nCREATE TABLE hardware_dim_product (\n    division TEXT, -- example: ['P & A', 'PC', 'N & S']\n    segment TEXT, -- example: ['Peripherals', 'Accessories', 'Notebook']\n    product TEXT, -- example: ['AQ Dracula HDD \u2013 3.5 Inch SATA 6 Gb/s 54', 'AQ WereWolf NAS Internal Hard Drive HDD ', 'AQ Zion Saga']\n\nCREATE TABLE web_orders (\n    id INTEGER, -- example: [1, 2, 3]\n    total INTEGER, -- example: [169, 288, 132]\n    total_amt_usd REAL, -- example: [973.43, 1718.03, 776.18]\n);\n\nCREATE TABLE StaffHours (\n    \n\nCREATE TABLE university_enrollment (\n    \n\nCREATE TABLE university_faculty (\n    \n\nCREATE TABLE university_student (\n    \n\nCREATE TABLE university_offering (\n    \n\nCREATE TABLE web_accounts (\n    id INTEGER, -- example: [1001, 1011, 1021]\n    name TEXT, -- example: ['Walmart', 'Exxon Mobil', 'Apple']\n    website TEXT, -- example: ['www.walmart.com', 'www.exxonmobil.com', 'www.apple.com']\n    sales_rep_id INTEGER, -- example: [321500, 321510, 321520]\n);\n\nCREATE TABLE web_events (\n    id INTEGER, -- example: [1, 2, 3]\n\nCREATE TABLE SalaryDataset (\n    CompanyName TEXT, -- example: ['TietoEVRY']\n    SalariesReported REAL, -- example: [105.0, 95.0, 66.0]\n\nCREATE TABLE web_region (\n    id INTEGER, -- example: [1, 2, 3]\n    name TEXT, -- example: ['Northeast', 'Midwest', 'Southeast']\n);\n\nCREATE TABLE hardware_fact_gross_price (\n    \n\nCREATE TABLE hardware_fact_manufacturing_cost (\n    \n\nCREATE TABLE university_course (\n    \n\nCREATE TABLE hardware_fact_sales_monthly (\n    sold_quantity INTEGER, -- example: [137, 47, 57]",
        "question": "Provide a detailed web sales report for each region, including the number of orders, total sales amount, and the name and sales amount of all sales representatives who achieved the highest total sales amount in that region (include all representatives in case of a tie).",
        "instance_id": "local114",
        "db_id": "education_business"
    },
    {
        "db_desc": "CREATE TABLE Bowler_Scores (\n    MatchID int, -- example: [1, 2, 3]\n    GameNumber smallint, -- example: [1, 2, 3]\n    BowlerID int, -- example: [1, 2, 3]\n    RawScore smallint, -- example: [146, 166, 140]\n    HandiCapScore smallint, -- example: [192, 205, 171]\n    WonGame BOOLEAN, -- example: [0, 1]\n    PRIMARY KEY (MatchID),\n    CONSTRAINT fk_bowler_scores_matchid FOREIGN KEY (MatchID) REFERENCES Match_Games (MatchID),\n    CONSTRAINT fk_bowler_scores_gamenumber FOREIGN KEY (GameNumber) REFERENCES Match_Games (GameNumber),\n    CONSTRAINT fk_bowler_scores_bowlerid FOREIGN KEY (BowlerID) REFERENCES Bowlers (BowlerID)\n);\n\nCREATE TABLE Bowler_Scores_Archive (\n    MatchID int,\n    GameNumber smallint,\n    BowlerID int,\n    RawScore smallint,\n    HandiCapScore smallint,\n    WonGame BOOLEAN,\n    PRIMARY KEY (MatchID),\n    CONSTRAINT fk_bowler_scores_archive_matchid FOREIGN KEY (MatchID) REFERENCES Match_Games_Archive (MatchID),\n    CONSTRAINT fk_bowler_scores_archive_gamenumber FOREIGN KEY (GameNumber) REFERENCES Match_Games_Archive (GameNumber)\n);\n\nCREATE TABLE Bowlers (\n    BowlerID INTEGER, -- example: [1, 2, 3]\n    BowlerLastName TEXT, -- example: ['Black', 'Clothier', 'Cunningham']\n    BowlerMiddleInit TEXT, -- example: ['A', 'J', 'K']\n    BowlerState TEXT, -- example: ['WA']\n    BowlerPhoneNumber TEXT, -- example: ['(206) 555-9876', '(206) 555-7854', '(206) 555-9893']\n    TeamID int, -- example: [1, 2, 3]\n    BowlerTotalPins int, -- example: [5790, 6152, 6435]\n    BowlerGamesBowled int, -- example: [39, 0]\n    BowlerCurrentAverage smallint, -- example: [148, 158, 165]\n    BowlerCurrentHcp smallint, -- example: [47, 38, 32]\n    PRIMARY KEY (BowlerID),\n    CONSTRAINT fk_bowlers_teamid FOREIGN KEY (TeamID) REFERENCES Teams (TeamID)\n);\n\nCREATE TABLE sqlite_sequence (\n    \n\nCREATE TABLE Match_Games (\n    MatchID int, -- example: [1, 2, 3]\n    GameNumber smallint, -- example: [1, 2, 3]\n    WinningTeamID int, -- example: [1, 2, 3]\n    PRIMARY KEY (MatchID)\n);\n\nCREATE TABLE Match_Games_Archive (\n    MatchID int,\n    GameNumber smallint,\n    WinningTeamID int,\n    PRIMARY KEY (MatchID)\n);\n\nCREATE TABLE Teams (\n    TeamID INTEGER, -- example: [1, 2, 3]\n    TeamName TEXT, -- example: ['Marlins', 'Sharks', 'Terrapins']\n    PRIMARY KEY (TeamID)\n);\n\nCREATE TABLE Tournaments (\n    TourneyID INTEGER, -- example: [1, 2, 3]\n    TourneyDate DATE, -- example: ['2017-09-04', '2017-09-11', '2017-09-18']\n    TourneyLocation TEXT, -- example: ['Totem Lanes', 'Thunderbird Lanes', 'Bolero Lanes']\n    PRIMARY KEY (TourneyID)\n);\n\nCREATE TABLE Tournaments_Archive (\n    TourneyID int,\n    TourneyDate DATE,\n    TourneyLocation TEXT,\n    PRIMARY KEY (TourneyID)\n);\n\nCREATE TABLE Tourney_Matches (\n    MatchID INTEGER, -- example: [1, 2, 3]\n    TourneyID int, -- example: [1, 2, 3]\n    Lanes TEXT, -- example: ['01-02', '03-04', '05-06']\n    OddLaneTeamID int, -- example: [1, 2, 3]\n    EvenLaneTeamID int, -- example: [1, 2, 3]\n    PRIMARY KEY (MatchID),\n    CONSTRAINT fk_tourney_matches_tourneyid FOREIGN KEY (TourneyID) REFERENCES Tournaments (TourneyID),\n    CONSTRAINT fk_tourney_matches_oddlaneteamid FOREIGN KEY (OddLaneTeamID) REFERENCES Teams (TeamID),\n    CONSTRAINT fk_tourney_matches_evenlaneteamid FOREIGN KEY (EvenLaneTeamID) REFERENCES Teams (TeamID)\n);\n\nCREATE TABLE Tourney_Matches_Archive (\n    MatchID int,\n    TourneyID int,\n    Lanes TEXT,\n    OddLaneTeamID int,\n    EvenLaneTeamID int,\n    PRIMARY KEY (MatchID),\n    CONSTRAINT fk_tourney_matches_archive_tourneyid FOREIGN KEY (TourneyID) REFERENCES Tournaments_Archive (TourneyID)\n);\n\nCREATE TABLE WAZips (\n    City TEXT, -- example: ['Auburn', 'Federal Way', 'Bellevue']\n    PRIMARY KEY (ZIP)\n);",
        "question": "List the bowlers, match number, game number, handicap score, tournament date, and location for only those bowlers who won their game with a handicap score of 190 or less at Thunderbird Lanes, Totem Lanes, and Bolero Lanes.",
        "instance_id": "local128",
        "db_id": "BowlingLeague"
    },
    {
        "db_desc": "CREATE TABLE Buildings (\n    BuildingCode TEXT, -- example: ['AS', 'CC', 'GYM']\n    BuildingName TEXT, -- example: ['Arts and Sciences', 'College Center', 'PE and Wellness']\n    NumberOfFloors INTEGER, -- example: [1, 2, 3]\n    PRIMARY KEY (BuildingCode)\n);\n\nCREATE TABLE Categories (\n    CategoryID TEXT, -- example: ['ACC', 'ART', 'BIO']\n    CategoryDescription TEXT, -- example: ['English']\n    PRIMARY KEY (CategoryID)\n);\n\nCREATE TABLE Class_Rooms (\n    ClassRoomID INTEGER, -- example: [1514, 1515, 1519]\n    BuildingCode TEXT, -- example: ['AS', 'CC', 'IB']\n    PRIMARY KEY (ClassRoomID),\n    CONSTRAINT fk_class_rooms_buildingcode FOREIGN KEY (BuildingCode) REFERENCES Buildings (BuildingCode)\n);\n\nCREATE TABLE sqlite_sequence (\n    \n\nCREATE TABLE Classes (\n    ClassID INTEGER, -- example: [2015, 5015, 1500]\n    ClassRoomID INTEGER, -- example: [1131, 1142, 1231]\n    Credits INTEGER, -- example: [5, 4, 3]\n    PRIMARY KEY (ClassID),\n    CONSTRAINT fk_classes_subjectid FOREIGN KEY (SubjectID) REFERENCES Subjects (SubjectID),\n    CONSTRAINT fk_classes_classroomid FOREIGN KEY (ClassRoomID) REFERENCES Class_Rooms (ClassRoomID)\n);\n\nCREATE TABLE Departments (\n    PRIMARY KEY (DepartmentID),\n    CONSTRAINT fk_departments_deptchair FOREIGN KEY (DeptChair) REFERENCES Staff (StaffID)\n);\n\nCREATE TABLE Faculty (\n    StaffID INTEGER, -- example: [98005, 98007, 98010]\n    Status TEXT, -- example: ['Full Time', 'On Leave', 'Part Time']\n    PRIMARY KEY (StaffID),\n    CONSTRAINT fk_faculty_staffid FOREIGN KEY (StaffID) REFERENCES Staff (StaffID)\n);\n\nCREATE TABLE Faculty_Categories (\n    StaffID INTEGER, -- example: [98005, 98007, 98010]\n    CategoryID TEXT, -- example: ['ACC', 'ART', 'BIO']\n    PRIMARY KEY (StaffID),\n    CONSTRAINT fk_faculty_categories_staffid FOREIGN KEY (StaffID) REFERENCES Faculty (StaffID),\n    CONSTRAINT fk_faculty_categories_categoryid FOREIGN KEY (CategoryID) REFERENCES Categories (CategoryID)\n);\n\nCREATE TABLE Faculty_Classes (\n    ClassID INTEGER, -- example: [1000, 1002, 1004]\n    StaffID INTEGER, -- example: [98005, 98007, 98011]\n    PRIMARY KEY (ClassID),\n    CONSTRAINT fk_faculty_classes_classid FOREIGN KEY (ClassID) REFERENCES Classes (ClassID),\n    CONSTRAINT fk_faculty_classes_staffid FOREIGN KEY (StaffID) REFERENCES Staff (StaffID)\n);\n\nCREATE TABLE Faculty_Subjects (\n    StaffID INTEGER, -- example: [98005, 98007, 98010]\n    ProficiencyRating REAL, -- example: [10.0, 9.0, 8.0]\n    PRIMARY KEY (StaffID),\n    CONSTRAINT fk_faculty_subjects_staffid FOREIGN KEY (StaffID) REFERENCES Faculty (StaffID),\n    CONSTRAINT fk_faculty_subjects_subjectid FOREIGN KEY (SubjectID) REFERENCES Subjects (SubjectID)\n);\n\nCREATE TABLE Majors (\n    MajorID INTEGER, -- example: [1, 2, 3]\n    Major TEXT, -- example: ['English']\n    PRIMARY KEY (MajorID)\n);\n\nCREATE TABLE Staff (\n    StaffID INTEGER, -- example: [98012, 98063, 98059]\n    StfFirstName TEXT, -- example: ['Suzanne', 'Gary', 'Jeffrey']\n    StfPhoneNumber TEXT, -- example: ['555-2686', '555-2676', '555-2596']\n    `Position` TEXT, -- example: ['Faculty', 'Registrar', 'Secretary']\n    PRIMARY KEY (StaffID)\n);\n\nCREATE TABLE Student_Class_Status (\n    ClassStatus INTEGER, -- example: [1, 2, 3]\n    ClassStatusDescription TEXT, -- example: ['Completed']\n    PRIMARY KEY (ClassStatus)\n);\n\nCREATE TABLE Student_Schedules (\n    ClassID INTEGER, -- example: [1000, 1168, 2907]\n    ClassStatus INTEGER, -- example: [2, 1, 3]\n    Grade REAL, -- example: [99.83, 70.0, 67.33]\n    PRIMARY KEY (StudentID),\n    CONSTRAINT fk_student_schedules_studentid FOREIGN KEY (StudentID) REFERENCES Students (StudentID),\n    CONSTRAINT fk_student_schedules_classid FOREIGN KEY (ClassID) REFERENCES Classes (ClassID),\n    CONSTRAINT fk_student_schedules_classstatus FOREIGN KEY (ClassStatus) REFERENCES Student_Class_Status (ClassStatus)\n);\n\nCREATE TABLE Students (\n    StudLastName TEXT, -- example: ['Patterson', 'Hamilton', 'Stadick']\n    StudPhoneNumber TEXT, -- example: ['555-2706', '555-2701', '555-2696']\n    StudMajor INTEGER, -- example: [1, 2, 3]\n    PRIMARY KEY (StudentID),\n    CONSTRAINT fk_students_studmajor FOREIGN KEY (StudMajor) REFERENCES Majors (MajorID)\n);\n\nCREATE TABLE Subjects (\n    CategoryID TEXT, -- example: ['ACC', 'ART', 'BIO']\n    SubjectCode TEXT, -- example: ['ACC 210', 'ACC 220', 'ACC 230']\n    SubjectName TEXT, -- example: ['Financial Accounting Fundamentals I', 'Financial Accounting Fundamentals II', 'Fundamentals of Managerial Accounting']\n    SubjectPreReq TEXT, -- example: ['ACC 210', 'ACC 220', 'BUS 170']\n    PRIMARY KEY (SubjectID),\n    CONSTRAINT fk_subjects_categoryid FOREIGN KEY (CategoryID) REFERENCES Categories (CategoryID),\n    CONSTRAINT fk_subjects_subjectprereq FOREIGN KEY (SubjectPreReq) REFERENCES Subjects (SubjectCode)\n);",
        "question": "Could you provide a list of last names for all students who have completed English courses, including their quintile ranks based on their individual grades in those courses (without averaging), where the quintiles are determined by ranking students according to the number of students who have grades greater than or equal to theirs, and sorted from the highest to the lowest grade quintile?",
        "instance_id": "local130",
        "db_id": "school_scheduling"
    },
    {
        "db_desc": "CREATE TABLE Agents (\n    AgentID int, -- example: [1, 2, 3]\n    PRIMARY KEY (AgentID)\n);\n\nCREATE TABLE Customers (\n    CustomerID int, -- example: [10001, 10002, 10003]\n    CustFirstName nvarchar (25), -- example: ['Doris', 'Deb', 'Peter']\n    CustPhoneNumber nvarchar (15), -- example: ['555-2671', '555-2496', '555-2501']\n    PRIMARY KEY (CustomerID)\n);\n\nCREATE TABLE Engagements (\n    EngagementNumber int, -- example: [2, 3, 4]\n    CustomerID int, -- example: [10001, 10002, 10003]\n    AgentID int, -- example: [1, 2, 3]\n    PRIMARY KEY (EngagementNumber),\n    CONSTRAINT fk_engagements_customerid FOREIGN KEY (CustomerID) REFERENCES Customers (CustomerID),\n    CONSTRAINT fk_engagements_agentid FOREIGN KEY (AgentID) REFERENCES Agents (AgentID),\n    CONSTRAINT fk_engagements_entertainerid FOREIGN KEY (EntertainerID) REFERENCES Entertainers (EntertainerID)\n);\n\nCREATE TABLE Entertainer_Members (\n    PRIMARY KEY (EntertainerID),\n    CONSTRAINT fk_entertainer_members_entertainerid FOREIGN KEY (EntertainerID) REFERENCES Entertainers (EntertainerID),\n    CONSTRAINT fk_entertainer_members_memberid FOREIGN KEY (MemberID) REFERENCES Members (MemberID)\n);\n\nCREATE TABLE Entertainer_Styles (\n    StyleID smallint, -- example: [3, 4, 6]\n    StyleStrength smallint, -- example: [2, 1, 3]\n    PRIMARY KEY (EntertainerID),\n    CONSTRAINT fk_entertainer_styles_entertainerid FOREIGN KEY (EntertainerID) REFERENCES Entertainers (EntertainerID),\n    CONSTRAINT fk_entertainer_styles_styleid FOREIGN KEY (StyleID) REFERENCES Musical_Styles (StyleID)\n);\n\nCREATE TABLE Entertainers (\n    EntPhoneNumber nvarchar (15), -- example: ['555-2691', '555-2591', '555-2511']\n    PRIMARY KEY (EntertainerID)\n);\n\nCREATE TABLE Members (\n    PRIMARY KEY (MemberID)\n);\n\nCREATE TABLE Musical_Preferences (\n    CustomerID int, -- example: [10001, 10002, 10003]\n    StyleID smallint, -- example: [1, 3, 4]\n    PreferenceSeq smallint, -- example: [2, 1, 3]\n    PRIMARY KEY (CustomerID),\n    CONSTRAINT fk_musical_preferences_customerid FOREIGN KEY (CustomerID) REFERENCES Customers (CustomerID),\n    CONSTRAINT fk_musical_preferences_styleid FOREIGN KEY (StyleID) REFERENCES Musical_Styles (StyleID)\n);\n\nCREATE TABLE Musical_Styles (\n    StyleID smallint, -- example: [1, 2, 3]\n    StyleName nvarchar (75), -- example: [\"40's Ballroom Music\", \"50's Music\", \"60's Music\"]\n    PRIMARY KEY (StyleID)\n);\n\nCREATE TABLE ztblDays (\n    PRIMARY KEY (DateField)\n);\n\nCREATE TABLE ztblMonths (\n    YearNumber smallint, -- example: [2017, 2018, 2019]\n    September smallint, -- example: [0, 1]\n    PRIMARY KEY (YearNumber)\n);\n\nCREATE TABLE ztblSkipLabels (\n    PRIMARY KEY (LabelCount)\n);\n\nCREATE TABLE ztblWeeks (\n    PRIMARY KEY (WeekStart)\n);",
        "question": "Could you list each musical style with the number of times it appears as a 1st, 2nd, or 3rd preference in a single row per style?",
        "instance_id": "local131",
        "db_id": "EntertainmentAgency"
    },
    {
        "db_desc": "CREATE TABLE aircrafts_data (\n    `range` integer, -- example: [11100, 7900, 3000]\n);\n\nCREATE TABLE airports_data (\n    city jsonb, -- example: ['{\"en\": \"Yakutsk\", \"ru\": \"\u042f\u043a\u0443\u0442\u0441\u043a\"}', '{\"en\": \"Mirnyj\", \"ru\": \"\u041c\u0438\u0440\u043d\u044b\u0439\"}', '{\"en\": \"Khabarovsk\", \"ru\": \"\u0425\u0430\u0431\u0430\u0440\u043e\u0432\u0441\u043a\"}']\n    coordinates point, -- example: ['(129.77099609375,62.0932998657226562)', '(114.03900146484375,62.534698486328125)', '(135.18800354004,48.5279998779300001)']\n\nCREATE TABLE boarding_passes (\n    seat_no character varying(4), -- example: ['3K']\n);\n\nCREATE TABLE bookings (\n    book_ref character(6), -- example: ['600EDD', '4AF500', '0EA000']\n\nCREATE TABLE flights (\n    \n\nCREATE TABLE seats (\n    seat_no character varying(4), -- example: ['3K']\n\nCREATE TABLE ticket_flights (\n    amount numeric(10,2), -- example: [42100, 23900, 14000]\n);\n\nCREATE TABLE tickets (\n    book_ref character(6), -- example: ['600EDD', '4AF500', '0EA000']\n    passenger_id character varying(20), -- example: ['3000 486432']\n);",
        "question": "Distribute all the unique city pairs into the distance ranges 0, 1000, 2000, 3000, 4000, 5000, and 6000+, based on their average distance of all routes between them. Then how many pairs are there in the distance range with the fewest unique city paires?",
        "instance_id": "local010",
        "db_id": "Airlines"
    },
    {
        "db_desc": "CREATE TABLE Agents (\n    AgentID int, -- example: [1, 2, 3]\n    PRIMARY KEY (AgentID)\n);\n\nCREATE TABLE Customers (\n    CustomerID int, -- example: [10001, 10002, 10003]\n    CustFirstName nvarchar (25), -- example: ['Doris', 'Deb', 'Peter']\n    CustCity nvarchar (30), -- example: ['Seattle', 'Tacoma', 'Kirkland']\n    CustState nvarchar (2), -- example: ['WA']\n    PRIMARY KEY (CustomerID)\n);\n\nCREATE TABLE Engagements (\n    CustomerID int, -- example: [10001, 10002, 10003]\n    AgentID int, -- example: [1, 2, 3]\n    PRIMARY KEY (EngagementNumber),\n    CONSTRAINT fk_engagements_customerid FOREIGN KEY (CustomerID) REFERENCES Customers (CustomerID),\n    CONSTRAINT fk_engagements_agentid FOREIGN KEY (AgentID) REFERENCES Agents (AgentID),\n    CONSTRAINT fk_engagements_entertainerid FOREIGN KEY (EntertainerID) REFERENCES Entertainers (EntertainerID)\n);\n\nCREATE TABLE Entertainer_Members (\n    Status smallint, -- example: [1, 2]\n    PRIMARY KEY (EntertainerID),\n    CONSTRAINT fk_entertainer_members_entertainerid FOREIGN KEY (EntertainerID) REFERENCES Entertainers (EntertainerID),\n    CONSTRAINT fk_entertainer_members_memberid FOREIGN KEY (MemberID) REFERENCES Members (MemberID)\n);\n\nCREATE TABLE Entertainer_Styles (\n    StyleID smallint, -- example: [3, 4, 6]\n    StyleStrength smallint, -- example: [2, 1, 3]\n    PRIMARY KEY (EntertainerID),\n    CONSTRAINT fk_entertainer_styles_entertainerid FOREIGN KEY (EntertainerID) REFERENCES Entertainers (EntertainerID),\n    CONSTRAINT fk_entertainer_styles_styleid FOREIGN KEY (StyleID) REFERENCES Musical_Styles (StyleID)\n);\n\nCREATE TABLE Entertainers (\n    EntSSN nvarchar (12), -- example: ['888-90-1121', '888-50-1061', '888-18-1013']\n    PRIMARY KEY (EntertainerID)\n);\n\nCREATE TABLE Members (\n    PRIMARY KEY (MemberID)\n);\n\nCREATE TABLE Musical_Preferences (\n    CustomerID int, -- example: [10001, 10002, 10003]\n    StyleID smallint, -- example: [1, 3, 4]\n    PreferenceSeq smallint, -- example: [2, 1, 3]\n    PRIMARY KEY (CustomerID),\n    CONSTRAINT fk_musical_preferences_customerid FOREIGN KEY (CustomerID) REFERENCES Customers (CustomerID),\n    CONSTRAINT fk_musical_preferences_styleid FOREIGN KEY (StyleID) REFERENCES Musical_Styles (StyleID)\n);\n\nCREATE TABLE Musical_Styles (\n    StyleID smallint, -- example: [1, 2, 3]\n    StyleName nvarchar (75), -- example: [\"40's Ballroom Music\", \"50's Music\", \"60's Music\"]\n    PRIMARY KEY (StyleID)\n);\n\nCREATE TABLE ztblDays (\n    PRIMARY KEY (DateField)\n);\n\nCREATE TABLE ztblMonths (\n    August smallint, -- example: [0, 1]\n    September smallint, -- example: [0, 1]\n    November smallint, -- example: [0, 1]\n    PRIMARY KEY (YearNumber)\n);\n\nCREATE TABLE ztblSkipLabels (\n    PRIMARY KEY (LabelCount)\n);\n\nCREATE TABLE ztblWeeks (\n    PRIMARY KEY (WeekStart)\n);",
        "question": "Given a database of musical styles and user preferences, where each user ranks up to three preferred styles as their first, second, and third choices, assign 3 points for each first-choice ranking, 2 points for each second-choice ranking, and 1 point for each third-choice ranking. Calculate the total weighted score for each musical style that has been ranked by at least one user. Then, compute the absolute difference between each style's total weighted score and the average total weighted score across all such styles.",
        "instance_id": "local133",
        "db_id": "EntertainmentAgency"
    },
    {
        "db_desc": "CREATE TABLE Agents (\n    AgentID int, -- example: [1, 2, 3]\n    DateHired date, -- example: ['1997-05-15', '1998-02-05', '1997-11-19']\n    PRIMARY KEY (AgentID)\n);\n\nCREATE TABLE Customers (\n    CustomerID int, -- example: [10001, 10002, 10003]\n    CustFirstName nvarchar (25), -- example: ['Doris', 'Deb', 'Peter']\n    CustLastName nvarchar (25), -- example: ['Hartwig', 'Waldal', 'Brehm']\n    CustCity nvarchar (30), -- example: ['Seattle', 'Tacoma', 'Kirkland']\n    CustState nvarchar (2), -- example: ['WA']\n    PRIMARY KEY (CustomerID)\n);\n\nCREATE TABLE Engagements (\n    CustomerID int, -- example: [10001, 10002, 10003]\n    AgentID int, -- example: [1, 2, 3]\n    EntertainerID int, -- example: [1001, 1002, 1003]\n    PRIMARY KEY (EngagementNumber),\n    CONSTRAINT fk_engagements_customerid FOREIGN KEY (CustomerID) REFERENCES Customers (CustomerID),\n    CONSTRAINT fk_engagements_agentid FOREIGN KEY (AgentID) REFERENCES Agents (AgentID),\n    CONSTRAINT fk_engagements_entertainerid FOREIGN KEY (EntertainerID) REFERENCES Entertainers (EntertainerID)\n);\n\nCREATE TABLE Entertainer_Members (\n    EntertainerID int, -- example: [1001, 1002, 1003]\n    PRIMARY KEY (EntertainerID),\n    CONSTRAINT fk_entertainer_members_entertainerid FOREIGN KEY (EntertainerID) REFERENCES Entertainers (EntertainerID),\n    CONSTRAINT fk_entertainer_members_memberid FOREIGN KEY (MemberID) REFERENCES Members (MemberID)\n);\n\nCREATE TABLE Entertainer_Styles (\n    EntertainerID int, -- example: [1001, 1002, 1003]\n    StyleID smallint, -- example: [3, 4, 6]\n    StyleStrength smallint, -- example: [2, 1, 3]\n    PRIMARY KEY (EntertainerID),\n    CONSTRAINT fk_entertainer_styles_entertainerid FOREIGN KEY (EntertainerID) REFERENCES Entertainers (EntertainerID),\n    CONSTRAINT fk_entertainer_styles_styleid FOREIGN KEY (StyleID) REFERENCES Musical_Styles (StyleID)\n);\n\nCREATE TABLE Entertainers (\n    EntertainerID int, -- example: [1001, 1002, 1003]\n    EntStageName nvarchar (50), -- example: ['Carol Peacock Trio', 'Topazz', 'JV & the Deep Six']\n    EntSSN nvarchar (12), -- example: ['888-90-1121', '888-50-1061', '888-18-1013']\n    PRIMARY KEY (EntertainerID)\n);\n\nCREATE TABLE Members (\n    PRIMARY KEY (MemberID)\n);\n\nCREATE TABLE Musical_Preferences (\n    CustomerID int, -- example: [10001, 10002, 10003]\n    StyleID smallint, -- example: [1, 3, 4]\n    PreferenceSeq smallint, -- example: [2, 1, 3]\n    PRIMARY KEY (CustomerID),\n    CONSTRAINT fk_musical_preferences_customerid FOREIGN KEY (CustomerID) REFERENCES Customers (CustomerID),\n    CONSTRAINT fk_musical_preferences_styleid FOREIGN KEY (StyleID) REFERENCES Musical_Styles (StyleID)\n);\n\nCREATE TABLE Musical_Styles (\n    StyleID smallint, -- example: [1, 2, 3]\n    StyleName nvarchar (75), -- example: [\"40's Ballroom Music\", \"50's Music\", \"60's Music\"]\n    PRIMARY KEY (StyleID)\n);\n\nCREATE TABLE ztblDays (\n    PRIMARY KEY (DateField)\n);\n\nCREATE TABLE ztblMonths (\n    August smallint, -- example: [0, 1]\n    September smallint, -- example: [0, 1]\n    PRIMARY KEY (YearNumber)\n);\n\nCREATE TABLE ztblSkipLabels (\n    PRIMARY KEY (LabelCount)\n);\n\nCREATE TABLE ztblWeeks (\n    PRIMARY KEY (WeekStart)\n);",
        "question": "Show all pairs of entertainers and customers who each have up to three style strengths or preferences, where the first and second style preferences of the customers match the first and second style strengths of the entertainers (or in reverse order). Only return the entertainer\u2019s stage name and the customer\u2019s last name",
        "instance_id": "local132",
        "db_id": "EntertainmentAgency"
    },
    {
        "db_desc": "CREATE TABLE salesperson (\n    businessentityid INTEGER, -- example: [274, 275, 276]\n    salesquota INTEGER, -- example: [300000, 250000]\n    salesytd FLOAT, -- example: [559697.5639, 3763178.1787, 4251368.5497]\n    saleslastyear FLOAT, -- example: [0.0, 1750406.4785, 1439156.0291]\n\nCREATE TABLE product (\n    sellstartdate DATE, -- example: ['2008-04-30 00:00:00', '2011-05-31 00:00:00', '2012-05-30 00:00:00']\n    sellenddate DATE, -- example: ['2012-05-29 00:00:00', '2013-05-29 00:00:00']\n    discontinueddate DATE,\n\nCREATE TABLE productmodelproductdescriptionculture (\n    \n\nCREATE TABLE productdescription (\n    \n\nCREATE TABLE productreview (\n    rating INTEGER, -- example: [5, 4, 2]\n    modifeddate DATE,\n\nCREATE TABLE productcategory (\n    \n\nCREATE TABLE productsubcategory (\n    \n\nCREATE TABLE salesorderdetail (\n    salesorderid INTEGER, -- example: [43659, 43660, 43661]\n\nCREATE TABLE salesorderheader (\n    salesorderid INTEGER, -- example: [43659, 43660, 43661]\n    salespersonid INTEGER, -- example: [279, 282, 276]\n    shiptoaddressid INTEGER, -- example: [985, 921, 517]\n    subtotal FLOAT, -- example: [20565.6206, 1294.2529, 32726.4786]\n    totaldue FLOAT, -- example: [23153.2339, 1457.3288, 36865.8012]\n    `comment` TEXT,\n\nCREATE TABLE salesterritory (\n    salesytd FLOAT, -- example: [7887186.7882, 2402176.8476, 3072175.118]\n    saleslastyear FLOAT, -- example: [3298694.4938, 3607148.9371, 3205014.0767]\n\nCREATE TABLE countryregioncurrency (\n    \n\nCREATE TABLE currencyrate (\n    \n\nCREATE TABLE SalesPersonQuotaHistory (\n    SalesQuota REAL, -- example: [28000.0, 7000.0, 91000.0]",
        "question": "How did each salesperson's annual total sales compare to their annual sales quota? Provide the difference between their total sales and the quota for each year, organized by salesperson and year.",
        "instance_id": "local141",
        "db_id": "AdventureWorks"
    },
    {
        "db_desc": "CREATE TABLE ERD (\n    `table` TEXT, -- example: ['ratings', 'movie']\n    `column` TEXT, -- example: ['total_votes', 'name', 'id', 'duration', 'avg_rating']\n    `Unnamed: 2` REAL,\n    `Unnamed: 3` REAL,\n    `Unnamed: 4` REAL,\n    `Unnamed: 5` REAL,\n    `Unnamed: 7` REAL,\n    `Unnamed: 8` REAL,\n    `Unnamed: 10` REAL,\n    `Unnamed: 11` REAL,\n\nCREATE TABLE movies (\n    id TEXT, -- example: ['tt0012494', 'tt0038733', 'tt0361953']\n    duration INTEGER, -- example: [97, 104, 81]\n    country TEXT, -- example: ['Germany', 'UK', 'USA']\n\nCREATE TABLE genre (\n    movie_id TEXT, -- example: ['tt0012494', 'tt0038733', 'tt0060908']\n    genre TEXT, -- example: ['Thriller', 'Fantasy', 'Drama']\n);\n\nCREATE TABLE director_mapping (\n    movie_id TEXT, -- example: ['tt0038733', 'tt0060908', 'tt0069049']\n    name_id TEXT, -- example: ['nm0003836', 'nm0696247', 'nm0003606']\n);\n\nCREATE TABLE role_mapping (\n    movie_id TEXT, -- example: ['tt0038733', 'tt0060908', 'tt0069049']\n    name_id TEXT, -- example: ['nm0000057', 'nm0001375', 'nm0178509']\n\nCREATE TABLE names (\n    id TEXT, -- example: ['nm0000002', 'nm0000110', 'nm0000009']\n    name TEXT, -- example: ['You', 'Lauren Bacall', 'Kenneth Branagh', 'Richard Burton']\n    known_for_movies TEXT, -- example: ['tt3402236', 'tt4686844', 'tt1502407']\n);\n\nCREATE TABLE ratings (\n    movie_id TEXT, -- example: ['tt0012494', 'tt0038733', 'tt0060908']\n    avg_rating REAL, -- example: [7.7, 8.1, 7.5]\n    total_votes INTEGER, -- example: [4695, 17693, 3392]\n    median_rating REAL, -- example: [8.0, 7.0, 3.0]\n);",
        "question": "Can you provide the top 9 directors by movie count, including their ID, name, number of movies, average inter-movie duration (rounded to the nearest integer), average rating (rounded to 2 decimals), total votes, minimum and maximum ratings, and total movie duration? Sort the output first by movie count in descending order and then by total movie duration in descending order.",
        "instance_id": "local152",
        "db_id": "imdb_movies"
    },
    {
        "db_desc": "CREATE TABLE ERD (\n    `table` TEXT, -- example: ['movie', 'genre']\n    `column` TEXT, -- example: ['genre']\n    `Unnamed: 2` REAL,\n    `Unnamed: 3` REAL,\n    `Unnamed: 4` REAL,\n    `Unnamed: 5` REAL,\n    `Unnamed: 7` REAL,\n    `Unnamed: 8` REAL,\n    `Unnamed: 10` REAL,\n    `Unnamed: 11` REAL,\n\nCREATE TABLE movies (\n    id TEXT, -- example: ['tt0012494', 'tt0038733', 'tt0361953']\n    country TEXT, -- example: ['Germany', 'UK', 'USA']\n    languages TEXT, -- example: ['German', 'English, French, Russian', 'English']\n\nCREATE TABLE genre (\n    movie_id TEXT, -- example: ['tt0012494', 'tt0038733', 'tt0060908']\n    genre TEXT, -- example: ['Thriller', 'Fantasy', 'Drama']\n);\n\nCREATE TABLE director_mapping (\n    movie_id TEXT, -- example: ['tt0038733', 'tt0060908', 'tt0069049']\n    name_id TEXT, -- example: ['nm0003836', 'nm0696247', 'nm0003606']\n);\n\nCREATE TABLE role_mapping (\n    movie_id TEXT, -- example: ['tt0038733', 'tt0060908', 'tt0069049']\n    name_id TEXT, -- example: ['nm0000057', 'nm0001375', 'nm0178509']\n    category TEXT, -- example: ['actor', 'actress']\n);\n\nCREATE TABLE names (\n    id TEXT, -- example: ['nm0000002', 'nm0000110', 'nm0000009']\n    name TEXT, -- example: ['Lauren Bacall', 'Kenneth Branagh', 'Richard Burton']\n\nCREATE TABLE ratings (\n    movie_id TEXT, -- example: ['tt0012494', 'tt0038733', 'tt0060908']\n    avg_rating REAL, -- example: [7.7, 8.1, 7.5]\n    median_rating REAL, -- example: [8.0, 7.0, 3.0]\n);",
        "question": "Determine the top three genres with the most movies rated above 8, and then identify the top four directors who have directed the most films rated above 8 within those genres. List these directors and their respective movie counts.",
        "instance_id": "local230",
        "db_id": "imdb_movies"
    },
    {
        "db_desc": "CREATE TABLE weekly_sales (\n    region TEXT, -- example: ['ASIA', 'USA', 'EUROPE']\n    segment TEXT, -- example: ['C3', 'F1', 'C1']\n    transactions INTEGER, -- example: [120631, 31574, 529151]\n    sales INTEGER, -- example: [3656163, 996575, 16509610]\n);\n\nCREATE TABLE shopping_cart_users (\n    \n\nCREATE TABLE bitcoin_members (\n    region TEXT, -- example: ['Australia', 'United States', 'Africa']\n);\n\nCREATE TABLE interest_metrics (\n    _year REAL, -- example: [2018.0, 2019.0]\n    month_year TEXT, -- example: ['07-2018', '08-2018', '09-2018']\n    ranking INTEGER, -- example: [1, 2, 3]\n\nCREATE TABLE customer_regions (\n    region_id INTEGER, -- example: [1, 2, 3]\n    region_name TEXT, -- example: ['Australia', 'America', 'Africa']\n);\n\nCREATE TABLE customer_transactions (\n    txn_date TEXT, -- example: ['2020-01-21', '2020-01-10', '2020-01-01']\n    txn_type TEXT, -- example: ['purchase']\n    txn_amount INTEGER, -- example: [82, 712, 196]\n);\n\nCREATE TABLE bitcoin_transactions (\n    ticker TEXT, -- example: ['BTC']\n    txn_date TEXT, -- example: ['01-01-2017', '02-01-2017', '03-01-2017']\n    txn_type TEXT, -- example: ['BUY']\n    quantity REAL, -- example: [50.0, 9.562185136, 8.842987018]\n    percentage_fee REAL, -- example: [0.3, 0.0, 0.02]\n\nCREATE TABLE customer_nodes (\n    region_id INTEGER, -- example: [3, 5, 1]\n\nCREATE TABLE cleaned_weekly_sales (\n    region TEXT, -- example: ['ASIA', 'USA', 'EUROPE']\n    segment TEXT, -- example: ['C3', 'F1', 'unknown']\n    transactions INTEGER, -- example: [120631, 31574, 529151]\n    sales INTEGER, -- example: [3656163, 996575, 16509610]\n    calendar_year INTEGER, -- example: [2020, 2019, 2018]\n\nCREATE TABLE veg_txn_df (\n    txn_date TEXT, -- example: ['2020-07-01 00:00:00', '2020-07-02 00:00:00', '2020-07-03 00:00:00']\n    `qty_sold(kg)` REAL, -- example: [0.396, 0.849, 0.409]\n    `sale/return` TEXT, -- example: ['sale', 'return']\n    `discount(%)` INTEGER, -- example: [1]\n\nCREATE TABLE shopping_cart_events (\n    \n\nCREATE TABLE shopping_cart_page_hierarchy (\n    \n\nCREATE TABLE bitcoin_prices (\n    ticker TEXT, -- example: ['BTC']\n    price REAL, -- example: [3177.84, 3243.9, 3273.58]\n    volume TEXT, -- example: ['582.04K', '466.21K', '839.54K']\n    change TEXT, -- example: ['-2.04%', '-0.91%', '5.82%']\n);\n\nCREATE TABLE interest_map (\n    id INTEGER, -- example: [1, 2, 3]\n\nCREATE TABLE veg_loss_rate_df (\n    `loss_rate_%` REAL, -- example: [4.39, 10.46, 10.8]\n);\n\nCREATE TABLE shopping_cart_campaign_identifier (\n    \n\nCREATE TABLE veg_cat (\n    \n\nCREATE TABLE veg_whsle_df (\n    \n\nCREATE TABLE shopping_cart_event_identifier (\n    event_name TEXT, -- example: ['Purchase']\n);",
        "question": "Analyze the annual average purchase price per Bitcoin by region, computed as the total dollar amount spent divided by the total quantity purchased each year, excluding the first year's data for each region. Then, for each year, rank the regions based on these average purchase prices, and calculate the annual percentage change in cost for each region compared to the previous year.",
        "instance_id": "local156",
        "db_id": "bank_sales_trading"
    },
    {
        "db_desc": "CREATE TABLE weekly_sales (\n    week_date TEXT, -- example: ['31/8/20', '24/8/20', '17/8/20']\n    transactions INTEGER, -- example: [120631, 31574, 529151]\n    sales INTEGER, -- example: [3656163, 996575, 16509610]\n);\n\nCREATE TABLE shopping_cart_users (\n    start_date TEXT, -- example: ['2020-02-04', '2020-01-18', '2020-02-21']\n);\n\nCREATE TABLE bitcoin_members (\n    \n\nCREATE TABLE interest_metrics (\n    _month REAL, -- example: [7.0, 8.0, 9.0]\n    ranking INTEGER, -- example: [1, 2, 3]\n\nCREATE TABLE customer_regions (\n    \n\nCREATE TABLE customer_transactions (\n    txn_date TEXT, -- example: ['2020-01-21', '2020-01-10', '2020-01-01']\n\nCREATE TABLE bitcoin_transactions (\n    ticker TEXT, -- example: ['BTC', 'ETH']\n    txn_date TEXT, -- example: ['01-01-2017', '02-01-2017', '03-01-2017']\n    quantity REAL, -- example: [50.0, 9.562185136, 8.842987018]\n    percentage_fee REAL, -- example: [0.3, 0.0, 0.02]\n\nCREATE TABLE customer_nodes (\n    start_date TEXT, -- example: ['2020-01-02', '2020-01-03', '2020-01-27']\n\nCREATE TABLE cleaned_weekly_sales (\n    week_date TEXT, -- example: ['2020-08-31', '2020-08-24', '2020-08-17']\n    transactions INTEGER, -- example: [120631, 31574, 529151]\n    sales INTEGER, -- example: [3656163, 996575, 16509610]\n\nCREATE TABLE veg_txn_df (\n    txn_date TEXT, -- example: ['2020-07-01 00:00:00', '2020-07-02 00:00:00', '2020-07-03 00:00:00']\n    `sale/return` TEXT, -- example: ['sale', 'return']\n    `discount(%)` INTEGER, -- example: [1]\n    day_of_week TEXT, -- example: ['Wednesday', 'Thursday', 'Friday']\n);\n\nCREATE TABLE shopping_cart_events (\n    \n\nCREATE TABLE shopping_cart_page_hierarchy (\n    \n\nCREATE TABLE bitcoin_prices (\n    ticker TEXT, -- example: ['ETH', 'BTC']\n    market_date TEXT, -- example: ['29-08-2021', '28-08-2021', '27-08-2021']\n    `open` REAL, -- example: [3243.96, 3273.78, 3093.78]\n    low REAL, -- example: [3162.79, 3212.24, 3063.37]\n    volume TEXT, -- example: ['-']\n    change TEXT, -- example: ['-2.04%', '-0.91%', '5.82%']\n);\n\nCREATE TABLE interest_map (\n    \n\nCREATE TABLE veg_loss_rate_df (\n    `loss_rate_%` REAL, -- example: [4.39, 10.46, 10.8]\n);\n\nCREATE TABLE shopping_cart_campaign_identifier (\n    start_date TEXT, -- example: ['2020-01-01', '2020-01-15', '2020-02-01']\n\nCREATE TABLE veg_cat (\n    \n\nCREATE TABLE veg_whsle_df (\n    whsle_date TEXT, -- example: ['2020-07-01 00:00:00', '2020-07-02 00:00:00', '2020-07-03 00:00:00']\n\nCREATE TABLE shopping_cart_event_identifier (\n    ",
        "question": "Using the \"bitcoin_prices\" table, please calculate the daily percentage change in trading volume for each ticker from August 1 to August 10, 2021, ensuring that any volume ending in \"K\" or \"M\" is accurately converted to thousands or millions, any \"-\" volume is treated as zero, only non-zero volumes are used to determine the previous day's volume, and the results are ordered by ticker and date.",
        "instance_id": "local157",
        "db_id": "bank_sales_trading"
    },
    {
        "db_desc": "CREATE TABLE hardware_dim_customer (\n    \n\nCREATE TABLE hardware_fact_pre_invoice_deductions (\n    \n\nCREATE TABLE web_sales_reps (\n    id INTEGER, -- example: [321500, 321510, 321520]\n    name TEXT, -- example: ['Samuel Racine', 'Eugena Esser', 'Michel Averette']\n\nCREATE TABLE hardware_dim_product (\n    product TEXT, -- example: ['AQ Dracula HDD \u2013 3.5 Inch SATA 6 Gb/s 54', 'AQ WereWolf NAS Internal Hard Drive HDD ', 'AQ Zion Saga']\n\nCREATE TABLE web_orders (\n    id INTEGER, -- example: [1, 2, 3]\n    account_id INTEGER, -- example: [1001, 1011, 1021]\n\nCREATE TABLE StaffHours (\n    StaffMember TEXT, -- example: ['B', 'A', 'C']\n    EventDate TEXT, -- example: ['2013-02-01', '2013-01-15', '2013-03-01']\n    EventTime TEXT, -- example: ['09:00', '08:00', '07:45']\n\nCREATE TABLE university_enrollment (\n    \n\nCREATE TABLE university_faculty (\n    FacFirstName TEXT, -- example: ['LEONARD', 'VICTORIA', 'NICKI']\n    FacLastName TEXT, -- example: ['VINCE', 'EMMANUEL', 'FIBON']\n    FacRank TEXT, -- example: ['ASST', 'PROF', 'ASSC']\n    FacSalary INTEGER, -- example: [35000, 120000, 70000]\n\nCREATE TABLE university_student (\n    \n\nCREATE TABLE university_offering (\n    OffTime TEXT, -- example: ['10:30 AM', '1:30 PM', '8:30 AM']\n\nCREATE TABLE web_accounts (\n    id INTEGER, -- example: [1001, 1011, 1021]\n    name TEXT, -- example: ['Walmart', 'Exxon Mobil', 'Apple']\n    website TEXT, -- example: ['www.walmart.com', 'www.exxonmobil.com', 'www.apple.com']\n\nCREATE TABLE web_events (\n    id INTEGER, -- example: [1, 2, 3]\n    account_id INTEGER, -- example: [1001, 1011, 1021]\n\nCREATE TABLE SalaryDataset (\n    CompanyName TEXT, -- example: ['Mu Sigma', 'IBM', 'Tata Consultancy Services']\n    JobTitle TEXT, -- example: ['Data Scientist', 'Data Science Associate', 'Data Science Consultant']\n    SalariesReported REAL, -- example: [105.0, 95.0, 66.0]\n    Location TEXT, -- example: ['Bangalore', 'Pune', 'Hyderabad']\n    Salary TEXT, -- example: ['\u20b96,48,573/yr', '\u20b911,91,950/yr', '\u20b98,36,874/yr']\n);\n\nCREATE TABLE web_region (\n    id INTEGER, -- example: [1, 2, 3]\n    name TEXT, -- example: ['Northeast', 'Midwest', 'Southeast']\n);\n\nCREATE TABLE hardware_fact_gross_price (\n    \n\nCREATE TABLE hardware_fact_manufacturing_cost (\n    \n\nCREATE TABLE university_course (\n    \n\nCREATE TABLE hardware_fact_sales_monthly (\n    `date` TEXT, -- example: ['2019-09-01', '2019-10-01', '2019-11-01']",
        "question": "Which university faculty members' salaries are closest to the average salary for their respective ranks? Please provide the ranks, first names, last names, and salaries.university",
        "instance_id": "local163",
        "db_id": "education_business"
    },
    {
        "db_desc": "CREATE TABLE aliens_details (\n    \n\nCREATE TABLE skills_dim (\n    skill_id INTEGER, -- example: [195, 201, 164]\n    skills TEXT, -- example: ['sharepoint', 'alteryx', 'asp.netcore']\n\nCREATE TABLE legislators_terms (\n    how TEXT, -- example: ['appointment']\n    url TEXT, -- example: ['http://casey.senate.gov/', 'https://fulcher.house.gov', 'http://klobuchar.senate.gov/']\n    phone TEXT, -- example: ['202-224-6324', '202-225-6611', '202-224-3244']\n    office TEXT, -- example: ['393 Russell Senate Office Building', '1520 Longworth House Office Building', '302 Hart Senate Office Building']\n\nCREATE TABLE cities_currencies (\n    currency_code TEXT, -- example: ['top']\n);\n\nCREATE TABLE legislators (\n    first_name TEXT, -- example: ['Job']\n    middle_name TEXT, -- example: ['Job']\n    other_names_middle REAL,\n    birthday TEXT, -- example: ['1952-11-09', '1958-10-13', '1943-10-05']\n\nCREATE TABLE skills_job_dim (\n    job_id INTEGER, -- example: [310991, 471015, 159380]\n    skill_id INTEGER, -- example: [1, 0, 169]\n);\n\nCREATE TABLE job_postings_fact (\n    job_id INTEGER, -- example: [1422666, 399976, 1541644]\n    job_title_short TEXT, -- example: ['Data Analyst']\n    job_title TEXT, -- example: ['Job vacancy', 'Data Analyst', 'Data', 'Analyst']\n    job_location TEXT, -- example: ['Durban, South Africa', 'Oulu, Finland', 'Lyon, France']\n    job_via TEXT, -- example: ['via Jobposting']\n    job_work_from_home INTEGER, -- example: [0, 1]\n    job_posted_date TEXT, -- example: ['2023-01-09 12:31:15', '2023-03-02 08:32:37', '2023-02-15 10:36:53']\n    job_country TEXT, -- example: ['South Africa', 'Finland', 'France']\n    salary_rate TEXT, -- example: ['year', 'hour', 'month']\n    salary_year_avg REAL, -- example: [300000.0, 120000.0, 99150.0]\n    salary_hour_avg REAL, -- example: [77.5, 27.979999542236328, 27.5]\n);\n\nCREATE TABLE alien_data (\n    first_name TEXT, -- example: ['job']\n    last_name TEXT, -- example: ['top', 'roles', 'job']\n    age INTEGER, -- example: [307, 351, 349]\n    occupation TEXT, -- example: ['senior cost accountant', 'senior sales associate', 'registered nurse']\n\nCREATE TABLE cities_countries (\n    \n\nCREATE TABLE legislation_date_dim (\n    `date` TEXT, -- example: ['1917-01-01', '1917-01-02', '1917-01-03']\n    day_of_month INTEGER, -- example: [1, 2, 3]\n);\n\nCREATE TABLE cities (\n    \n\nCREATE TABLE aliens_location (\n    occupation TEXT, -- example: ['Senior Cost Accountant', 'Senior Sales Associate', 'Registered Nurse']\n);\n\nCREATE TABLE aliens (\n    first_name TEXT, -- example: ['Job']\n    last_name TEXT, -- example: ['Top', 'Roles', 'Job']\n\nCREATE TABLE cities_languages (\n    `language` TEXT, -- example: ['pashto', 'persian', 'uzbek']\n\nCREATE TABLE job_company (\n    ",
        "question": "Among job postings that specifically have the Data Analyst, require a non-null annual average salary, and are remote, what is the overall average salary when considering only the top three most frequently demanded skills for these positions?",
        "instance_id": "local168",
        "db_id": "city_legislation"
    },
    {
        "db_desc": "CREATE TABLE aliens_details (\n    feeding_frequency TEXT, -- example: ['Yearly']\n\nCREATE TABLE skills_dim (\n    \n\nCREATE TABLE legislators_terms (\n    term_number INTEGER, -- example: [0, 1, 2]\n    term_id TEXT, -- example: ['B000944-0', 'C000127-0', 'C000141-0']\n    term_start TEXT, -- example: ['1993-01-05', '1987-01-06', '1983-01-03']\n    term_end TEXT, -- example: ['1995-01-03', '1989-01-03', '1985-01-03']\n    how TEXT, -- example: ['appointment']\n    address TEXT, -- example: ['393 RUSSELL SENATE OFFICE BUILDING WASHI', '1520 Longworth House Office Building; Wa', '302 HART SENATE OFFICE BUILDING WASHINGT']\n    phone TEXT, -- example: ['202-224-6324', '202-225-6611', '202-224-3244']\n    office TEXT, -- example: ['393 Russell Senate Office Building', '1520 Longworth House Office Building', '302 Hart Senate Office Building']\n\nCREATE TABLE cities_currencies (\n    \n\nCREATE TABLE legislators (\n    first_name TEXT, -- example: ['Sherrod', 'Maria', 'Benjamin']\n    last_name TEXT, -- example: ['Colorado', 'Brown', 'Cantwell', 'Cardin']\n    other_names_middle REAL,\n    birthday TEXT, -- example: ['1952-11-09', '1958-10-13', '1943-10-05']\n\nCREATE TABLE skills_job_dim (\n    \n\nCREATE TABLE job_postings_fact (\n    salary_rate TEXT, -- example: ['year']\n\nCREATE TABLE alien_data (\n    id INTEGER, -- example: [1, 2, 3]\n    first_name TEXT, -- example: ['tyrus', 'ealasaid', 'violette']\n    last_name TEXT, -- example: ['starte', 'start', 'wrey', 'st louis', 'sawood']\n    age INTEGER, -- example: [307, 351, 349]\n    feeding_frequency TEXT, -- example: ['yearly']\n    country TEXT, -- example: ['united states']\n);\n\nCREATE TABLE cities_countries (\n    country_name TEXT, -- example: ['afghanistan', 'albania', 'algeria']\n\nCREATE TABLE legislation_date_dim (\n    `date` TEXT, -- example: ['1999-12-31', '1917-01-01']\n\nCREATE TABLE cities (\n    capital INTEGER, -- example: [1, 0]\n    insert_date TEXT, -- example: ['2022-12-31']\n);\n\nCREATE TABLE aliens_location (\n    country TEXT, -- example: ['United States']\n\nCREATE TABLE aliens (\n    id INTEGER, -- example: [1, 2, 3]\n    first_name TEXT, -- example: ['Tyrus', 'Ealasaid', 'Violette']\n    last_name TEXT, -- example: ['Starte', 'Start', 'Wrey', 'St Louis', 'Sawood']\n\nCREATE TABLE cities_languages (\n    \n\nCREATE TABLE job_company (\n    name TEXT, -- example: ['Between', 'Kaderabotim.bg', 'acalerate', 'Group S']",
        "question": "What is the proportion of legislators who started their first term between 1917 and 1999 that remained in office on December 31st of each year, tracked annually for up to 20 years following their initial term start?",
        "instance_id": "local169",
        "db_id": "city_legislation"
    },
    {
        "db_desc": "CREATE TABLE victims (\n    id INTEGER, -- example: [1087998, 952544, 2227500]\n    party_number INTEGER, -- example: [2, 1, 3]\n    victim_safety_equipment_1 TEXT, -- example: ['shoulder harness not used']\n    victim_safety_equipment_2 TEXT, -- example: ['shoulder harness not used']\n\nCREATE TABLE collisions (\n    beat_number TEXT, -- example: ['077', '089', '012']\n    primary_road TEXT, -- example: ['RIDER']\n    collision_severity TEXT, -- example: ['fatal', 'property damage only', 'pain', 'severe injury']\n    killed_victims REAL, -- example: [0.0, 1.0, 2.0]\n    primary_collision_factor TEXT, -- example: ['vehicle code violation', 'other than driver', 'other improper driving']\n    type_of_collision TEXT, -- example: ['hit object']\n    motor_vehicle_involved_with TEXT, -- example: ['non-collision']\n    pedestrian_collision INTEGER, -- example: [0, 1]\n    bicycle_collision INTEGER, -- example: [0, 1]\n    motorcycle_collision INTEGER, -- example: [0, 1]\n    truck_collision INTEGER, -- example: [0, 1]\n    alcohol_involved REAL, -- example: [1.0]\n    chp_vehicle_type_at_fault TEXT, -- example: ['motorcycle']\n    pedestrian_killed_count INTEGER, -- example: [0, 1, 3]\n    bicyclist_killed_count INTEGER, -- example: [0, 1]\n    motorcyclist_killed_count INTEGER, -- example: [0, 1, 2]\n    motorcyclist_injured_count REAL, -- example: [0.0, 1.0, 2.0]\n    collision_date TEXT, -- example: ['2011-11-22', '2014-07-25', '2011-01-19']\n    collision_time TEXT, -- example: ['13:27:00', '14:00:00', '08:19:00']\n\nCREATE TABLE case_ids (\n    \n\nCREATE TABLE parties (\n    id INTEGER, -- example: [138356, 4145454, 1198510]\n    party_number INTEGER, -- example: [1, 2, 3]\n    party_type TEXT, -- example: ['driver', 'parked vehicle', 'pedestrian']\n    party_safety_equipment_1 TEXT, -- example: ['unknown', 'lap belt not used', 'lap/shoulder harness used']\n    party_safety_equipment_2 TEXT, -- example: ['lap/shoulder harness used', 'unknown', 'driver, motorcycle helmet used']\n    other_associate_factor_1 TEXT, -- example: ['previous collision']\n    other_associate_factor_2 TEXT, -- example: ['previous collision']\n    chp_vehicle_type_towing TEXT, -- example: ['motorcycle']\n    chp_vehicle_type_towed TEXT, -- example: ['motorcycle']",
        "question": "Please calculate, separately for motorcycle collisions involving riders who were wearing helmets and those who were not wearing helmets, the percentage of motorcyclist fatalities per collision. For each group, compute this by dividing the total number of motorcyclist fatalities by the total number of collisions involving that group.",
        "instance_id": "local015",
        "db_id": "California_Traffic_Collision"
    },
    {
        "db_desc": "CREATE TABLE aliens_details (\n    feeding_frequency TEXT, -- example: ['Yearly']\n    aggressive INTEGER, -- example: [1, 0]\n);\n\nCREATE TABLE skills_dim (\n    \n\nCREATE TABLE legislators_terms (\n    term_number INTEGER, -- example: [0, 1, 2]\n    term_id TEXT, -- example: ['B000944-0', 'C000127-0', 'C000141-0']\n    term_start TEXT, -- example: ['1993-01-05', '1987-01-06', '1983-01-03']\n    term_end TEXT, -- example: ['1995-01-03', '1989-01-03', '1985-01-03']\n    state TEXT, -- example: ['OH', 'WA', 'MD']\n    how TEXT, -- example: ['appointment']\n    phone TEXT, -- example: ['202-224-6324', '202-225-6611', '202-224-3244']\n\nCREATE TABLE cities_currencies (\n    \n\nCREATE TABLE legislators (\n    suffix TEXT, -- example: ['Jr.', 'III', 'II']\n    other_names_middle REAL,\n    birthday TEXT, -- example: ['1952-11-09', '1958-10-13', '1943-10-05']\n    gender TEXT, -- example: ['M']\n\nCREATE TABLE skills_job_dim (\n    \n\nCREATE TABLE job_postings_fact (\n    job_location TEXT, -- example: ['Louisiana']\n    salary_rate TEXT, -- example: ['year']\n\nCREATE TABLE alien_data (\n    id INTEGER, -- example: [1, 2, 3]\n    last_name TEXT, -- example: ['male']\n    gender TEXT, -- example: ['male']\n    age INTEGER, -- example: [307, 351, 349]\n    feeding_frequency TEXT, -- example: ['yearly']\n    aggressive INTEGER, -- example: [1, 0]\n    occupation TEXT, -- example: ['senior cost accountant', 'senior sales associate', 'registered nurse']\n    state TEXT, -- example: ['louisiana']\n    country TEXT, -- example: ['united states']\n);\n\nCREATE TABLE cities_countries (\n    \n\nCREATE TABLE legislation_date_dim (\n    \n\nCREATE TABLE cities (\n    city_name TEXT, -- example: ['male']\n    insert_date TEXT, -- example: ['2022-12-31']\n);\n\nCREATE TABLE aliens_location (\n    state TEXT, -- example: ['Louisiana']\n    country TEXT, -- example: ['United States']\n    occupation TEXT, -- example: ['Senior Cost Accountant', 'Senior Sales Associate', 'Registered Nurse']\n);\n\nCREATE TABLE aliens (\n    id INTEGER, -- example: [1, 2, 3]\n    last_name TEXT, -- example: ['Male']\n    gender TEXT, -- example: ['Male']\n\nCREATE TABLE cities_languages (\n    \n\nCREATE TABLE job_company (\n    ",
        "question": "For male legislators from Louisiana, how many distinct legislators were actively serving on December 31 of each year from more than 30 years since their first term up to less than 50 years, grouping the results by the exact number of years elapsed since their first term?",
        "instance_id": "local171",
        "db_id": "city_legislation"
    },
    {
        "db_desc": "CREATE TABLE aliens_details (\n    \n\nCREATE TABLE skills_dim (\n    \n\nCREATE TABLE legislators_terms (\n    id_bioguide TEXT, -- example: ['B000944', 'C000127', 'C000141']\n    term_number INTEGER, -- example: [0, 1, 2]\n    term_start TEXT, -- example: ['1993-01-05', '1987-01-06', '1983-01-03']\n    term_end TEXT, -- example: ['1995-01-03', '1989-01-03', '1985-01-03']\n    state TEXT, -- example: ['OH', 'WA', 'MD']\n    how TEXT, -- example: ['appointment']\n    address TEXT, -- example: ['393 RUSSELL SENATE OFFICE BUILDING WASHI', '1520 Longworth House Office Building; Wa', '302 HART SENATE OFFICE BUILDING WASHINGT']\n    phone TEXT, -- example: ['202-224-6324', '202-225-6611', '202-224-3244']\n    state_rank TEXT, -- example: ['senior', 'junior']\n\nCREATE TABLE cities_currencies (\n    \n\nCREATE TABLE legislators (\n    first_name TEXT, -- example: ['Sherrod', 'Maria', 'Benjamin']\n    last_name TEXT, -- example: ['Fall', 'Brown', 'Cantwell', 'Cardin']\n    nickname TEXT, -- example: ['Bob', 'Bernie', 'Jim']\n    suffix TEXT, -- example: ['Jr.', 'III', 'II']\n    other_names_middle REAL,\n    birthday TEXT, -- example: ['1952-11-09', '1958-10-13', '1943-10-05']\n    gender TEXT, -- example: ['F']\n    id_bioguide TEXT, -- example: ['B000944', 'C000127', 'C000141']\n    id_wikipedia TEXT, -- example: ['Sherrod Brown', 'Maria Cantwell', 'Ben Cardin']\n\nCREATE TABLE skills_job_dim (\n    \n\nCREATE TABLE job_postings_fact (\n    \n\nCREATE TABLE alien_data (\n    id INTEGER, -- example: [1, 2, 3]\n    first_name TEXT, -- example: ['tyrus', 'ealasaid', 'violette']\n    last_name TEXT, -- example: ['state', 'point', 'count']\n    gender TEXT, -- example: ['female']\n    age INTEGER, -- example: [307, 351, 349]\n    state TEXT, -- example: ['ohio', 'maryland', 'california']\n    country TEXT, -- example: ['united states']\n);\n\nCREATE TABLE cities_countries (\n    country_name TEXT, -- example: ['afghanistan', 'albania', 'algeria']\n    region TEXT, -- example: ['asia', 'europe', 'africa']\n\nCREATE TABLE legislation_date_dim (\n    `date` TEXT, -- example: ['1917-01-01', '1917-01-02', '1917-01-03']\n    day_of_month INTEGER, -- example: [1, 2, 3]\n);\n\nCREATE TABLE cities (\n    city_id INTEGER, -- example: [1, 2, 3]\n    latitude REAL, -- example: [139.6922, 106.8275, 77.23]\n    population REAL, -- example: [37732000.0, 33756000.0, 32226000.0]\n    insert_date TEXT, -- example: ['2022-12-31']\n);\n\nCREATE TABLE aliens_location (\n    state TEXT, -- example: ['Ohio', 'Maryland', 'California']\n    country TEXT, -- example: ['United States']\n\nCREATE TABLE aliens (\n    id INTEGER, -- example: [1, 2, 3]\n    first_name TEXT, -- example: ['Tyrus', 'Ealasaid', 'Violette']\n    last_name TEXT, -- example: ['State', 'Point', 'Count']\n    gender TEXT, -- example: ['Female']\n\nCREATE TABLE cities_languages (\n    `language` TEXT, -- example: ['pashto', 'persian', 'uzbek']\n\nCREATE TABLE job_company (\n    name TEXT, -- example: ['Digit']",
        "question": "Based on the state each female legislator first represented, which state has the highest number of female legislators whose terms included December 31st at any point, and what is that count? Please provide the state's abbreviation.",
        "instance_id": "local167",
        "db_id": "city_legislation"
    },
    {
        "db_desc": "CREATE TABLE aliens_details (\n    \n\nCREATE TABLE skills_dim (\n    \n\nCREATE TABLE legislators_terms (\n    term_number INTEGER, -- example: [0, 1, 2]\n    term_id TEXT, -- example: ['B000944-0', 'C000127-0', 'C000141-0']\n    term_start TEXT, -- example: ['1993-01-05', '1987-01-06', '1983-01-03']\n    term_end TEXT, -- example: ['1995-01-03', '1989-01-03', '1985-01-03']\n    state TEXT, -- example: ['OH', 'WA', 'MD']\n    class REAL, -- example: [1.0, 2.0, 3.0]\n    how TEXT, -- example: ['appointment']\n    address TEXT, -- example: ['393 RUSSELL SENATE OFFICE BUILDING WASHI', '1520 Longworth House Office Building; Wa', '302 HART SENATE OFFICE BUILDING WASHINGT']\n    phone TEXT, -- example: ['202-224-6324', '202-225-6611', '202-224-3244']\n    office TEXT, -- example: ['393 Russell Senate Office Building', '1520 Longworth House Office Building', '302 Hart Senate Office Building']\n    state_rank TEXT, -- example: ['senior', 'junior']\n\nCREATE TABLE cities_currencies (\n    \n\nCREATE TABLE legislators (\n    first_name TEXT, -- example: ['Sherrod', 'Maria', 'Benjamin']\n    last_name TEXT, -- example: ['Brown', 'Cantwell', 'Cardin']\n    nickname TEXT, -- example: ['Bob', 'Bernie', 'Jim']\n    other_names_middle REAL,\n    birthday TEXT, -- example: ['1952-11-09', '1958-10-13', '1943-10-05']\n    gender TEXT, -- example: ['M', 'F']\n\nCREATE TABLE skills_job_dim (\n    \n\nCREATE TABLE job_postings_fact (\n    salary_rate TEXT, -- example: ['year', 'hour', 'month']\n\nCREATE TABLE alien_data (\n    id INTEGER, -- example: [1, 2, 3]\n    first_name TEXT, -- example: ['tyrus', 'ealasaid', 'violette']\n    last_name TEXT, -- example: ['state', 'service', 'male']\n    gender TEXT, -- example: ['male', 'female']\n    age INTEGER, -- example: [307, 351, 349]\n    occupation TEXT, -- example: ['senior cost accountant', 'senior sales associate', 'registered nurse']\n    state TEXT, -- example: ['ohio', 'maryland', 'california']\n    country TEXT, -- example: ['united states']\n);\n\nCREATE TABLE cities_countries (\n    country_name TEXT, -- example: ['afghanistan', 'albania', 'algeria']\n    region TEXT, -- example: ['asia', 'europe', 'africa']\n\nCREATE TABLE legislation_date_dim (\n    `date` TEXT, -- example: ['1917-01-01', '1917-01-02', '1917-01-03']\n    day_of_month INTEGER, -- example: [1, 2, 3]\n);\n\nCREATE TABLE cities (\n    city_id INTEGER, -- example: [1, 2, 3]\n    city_name TEXT, -- example: ['male']\n\nCREATE TABLE aliens_location (\n    state TEXT, -- example: ['Ohio', 'Maryland', 'California']\n    country TEXT, -- example: ['United States']\n    occupation TEXT, -- example: ['Senior Cost Accountant', 'Senior Sales Associate', 'Registered Nurse']\n);\n\nCREATE TABLE aliens (\n    id INTEGER, -- example: [1, 2, 3]\n    first_name TEXT, -- example: ['Tyrus', 'Ealasaid', 'Violette']\n    last_name TEXT, -- example: ['State', 'Service', 'Male']\n    gender TEXT, -- example: ['Male', 'Female']\n\nCREATE TABLE cities_languages (\n    \n\nCREATE TABLE job_company (\n    name TEXT, -- example: ['Kaderabotim.bg', 'acalerate', 'Group S']",
        "question": "Identify the state abbreviations where, for both male and female legislators who began serving in that state, the retention rate of the initial cohort is greater than zero at each of the intervals 0, 2, 4, 6, 8, and 10 years after their initial term start date during the first 10 years of service.",
        "instance_id": "local170",
        "db_id": "city_legislation"
    },
    {
        "db_desc": "CREATE TABLE actor (\n    actor_id numeric, -- example: [1, 2, 3]\n    first_name VARCHAR(45), -- example: ['ZERO', 'PENELOPE', 'NICK', 'ED']\n    PRIMARY KEY (actor_id)\n);\n\nCREATE TABLE country (\n    country_id SMALLINT, -- example: [1, 2, 3]\n    PRIMARY KEY (country_id)\n);\n\nCREATE TABLE city (\n    city_id int, -- example: [1, 2, 3]\n    city VARCHAR(50), -- example: ['A Corua (La Corua)', 'Abha', 'Abu Dhabi']\n    country_id SMALLINT, -- example: [1, 2, 3]\n    PRIMARY KEY (city_id),\n    CONSTRAINT fk_city_country_id FOREIGN KEY (country_id) REFERENCES country (country_id)\n);\n\nCREATE TABLE address (\n    address_id int, -- example: [1, 2, 3]\n    address VARCHAR(50), -- example: ['47 MySakila Drive', '28 MySQL Boulevard', '23 Workhaven Lane']\n    address2 VARCHAR(50),\n    city_id INT, -- example: [1, 2, 3]\n    phone VARCHAR(20), -- example: [' ']\n    PRIMARY KEY (address_id),\n    CONSTRAINT fk_address_city_id FOREIGN KEY (city_id) REFERENCES city (city_id)\n);\n\nCREATE TABLE `language` (\n    language_id SMALLINT, -- example: [1, 2, 3]\n    PRIMARY KEY (language_id)\n);\n\nCREATE TABLE category (\n    category_id SMALLINT, -- example: [1, 2, 3]\n    PRIMARY KEY (category_id)\n);\n\nCREATE TABLE customer (\n    customer_id INT, -- example: [1, 2, 3]\n    first_name VARCHAR(45), -- example: ['MARY', 'PATRICIA', 'LINDA']\n    address_id INT, -- example: [5, 6, 7]\n    create_date TIMESTAMP, -- example: ['2006-02-14 22:04:36.000', '2006-02-14 22:04:37.000']\n    PRIMARY KEY (customer_id),\n    CONSTRAINT fk_customer_store_id FOREIGN KEY (store_id) REFERENCES store (store_id),\n    CONSTRAINT fk_customer_address_id FOREIGN KEY (address_id) REFERENCES address (address_id)\n);\n\nCREATE TABLE film (\n    film_id int, -- example: [1, 2, 3]\n    language_id SMALLINT, -- example: [1]\n    original_language_id SMALLINT,\n    length SMALLINT, -- example: [86, 48, 50]\n    rating VARCHAR(10), -- example: ['PG', 'G', 'NC-17']\n    PRIMARY KEY (film_id),\n    CONSTRAINT fk_film_language_id FOREIGN KEY (language_id) REFERENCES `language` (language_id),\n    CONSTRAINT fk_film_original_language_id FOREIGN KEY (original_language_id) REFERENCES `language` (language_id)\n);\n\nCREATE TABLE film_actor (\n    actor_id INT, -- example: [1, 2, 3]\n    film_id INT, -- example: [1, 2, 3]\n    PRIMARY KEY (actor_id),\n    CONSTRAINT fk_film_actor_actor_id FOREIGN KEY (actor_id) REFERENCES actor (actor_id),\n    CONSTRAINT fk_film_actor_film_id FOREIGN KEY (film_id) REFERENCES film (film_id)\n);\n\nCREATE TABLE film_category (\n    film_id INT, -- example: [1, 2, 3]\n    category_id SMALLINT, -- example: [1, 2, 3]\n    PRIMARY KEY (film_id),\n    CONSTRAINT fk_film_category_film_id FOREIGN KEY (film_id) REFERENCES film (film_id),\n    CONSTRAINT fk_film_category_category_id FOREIGN KEY (category_id) REFERENCES category (category_id)\n);\n\nCREATE TABLE film_text (\n    film_id SMALLINT,\n    title VARCHAR(255),\n    description BLOB SUB_TYPE TEXT,\n    PRIMARY KEY (film_id)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT, -- example: [1, 2, 3]\n    film_id INT, -- example: [1, 2, 3]\n    PRIMARY KEY (inventory_id),\n    CONSTRAINT fk_inventory_film_id FOREIGN KEY (film_id) REFERENCES film (film_id),\n    CONSTRAINT fk_inventory_store_id FOREIGN KEY (store_id) REFERENCES store (store_id)\n);\n\nCREATE TABLE staff (\n    staff_id SMALLINT, -- example: [1, 2]\n    first_name VARCHAR(45), -- example: ['Mike', 'Jon']\n    address_id INT, -- example: [3, 4]\n    picture BLOB,\n    PRIMARY KEY (staff_id),\n    CONSTRAINT fk_staff_address_id FOREIGN KEY (address_id) REFERENCES address (address_id),\n    CONSTRAINT fk_staff_store_id FOREIGN KEY (store_id) REFERENCES store (store_id)\n);\n\nCREATE TABLE store (\n    manager_staff_id SMALLINT, -- example: [1, 2]\n    address_id INT, -- example: [1, 2]\n    PRIMARY KEY (store_id),\n    CONSTRAINT fk_store_manager_staff_id FOREIGN KEY (manager_staff_id) REFERENCES staff (staff_id),\n    CONSTRAINT fk_store_address_id FOREIGN KEY (address_id) REFERENCES address (address_id)\n);\n\nCREATE TABLE payment (\n    customer_id INT, -- example: [1, 2, 3]\n    staff_id SMALLINT, -- example: [1, 2]\n    amount DECIMAL(5,2), -- example: [2.99, 0.99, 5.99]\n    payment_date TIMESTAMP, -- example: ['2005-05-25 11:30:37.000', '2005-05-28 10:35:23.000', '2005-06-15 00:54:12.000']\n    PRIMARY KEY (payment_id),\n    CONSTRAINT fk_payment_customer_id FOREIGN KEY (customer_id) REFERENCES customer (customer_id),\n    CONSTRAINT fk_payment_staff_id FOREIGN KEY (staff_id) REFERENCES staff (staff_id),\n    CONSTRAINT fk_payment_rental_id FOREIGN KEY (rental_id) REFERENCES rental (rental_id)\n);\n\nCREATE TABLE rental (\n    inventory_id INT, -- example: [1, 2, 3]\n    customer_id INT, -- example: [1, 2, 3]\n    staff_id SMALLINT, -- example: [1, 2]\n    PRIMARY KEY (rental_id),\n    CONSTRAINT fk_rental_inventory_id FOREIGN KEY (inventory_id) REFERENCES inventory (inventory_id),\n    CONSTRAINT fk_rental_customer_id FOREIGN KEY (customer_id) REFERENCES customer (customer_id),\n    CONSTRAINT fk_rental_staff_id FOREIGN KEY (staff_id) REFERENCES staff (staff_id)\n);",
        "question": "Could you find out the average percentage of the total lifetime sales (LTV) that occur in the first 7 and 30 days after a customer's initial purchase? Also, include the average total lifetime sales (LTV). Please exclude customers with zero lifetime sales. The 7- and 30-day periods should be based on the exact number of hours-minutes-seconds, not calendar days.",
        "instance_id": "local193",
        "db_id": "sqlite-sakila"
    },
    {
        "db_desc": "CREATE TABLE actor (\n    actor_id numeric, -- example: [1, 2, 3]\n    first_name VARCHAR(45), -- example: ['PENELOPE', 'NICK', 'ED']\n    last_name VARCHAR(45), -- example: ['AKROYD', 'ALLEN', 'ASTAIRE']\n    PRIMARY KEY (actor_id)\n);\n\nCREATE TABLE country (\n    country_id SMALLINT, -- example: [1, 2, 3]\n    PRIMARY KEY (country_id)\n);\n\nCREATE TABLE city (\n    city_id int, -- example: [1, 2, 3]\n    city VARCHAR(50), -- example: ['A Corua (La Corua)', 'Abha', 'Abu Dhabi']\n    country_id SMALLINT, -- example: [1, 2, 3]\n    PRIMARY KEY (city_id),\n    CONSTRAINT fk_city_country_id FOREIGN KEY (country_id) REFERENCES country (country_id)\n);\n\nCREATE TABLE address (\n    address_id int, -- example: [1, 2, 3]\n    address2 VARCHAR(50),\n    city_id INT, -- example: [1, 2, 3]\n    PRIMARY KEY (address_id),\n    CONSTRAINT fk_address_city_id FOREIGN KEY (city_id) REFERENCES city (city_id)\n);\n\nCREATE TABLE `language` (\n    language_id SMALLINT, -- example: [1, 2, 3]\n    PRIMARY KEY (language_id)\n);\n\nCREATE TABLE category (\n    category_id SMALLINT, -- example: [1, 2, 3]\n    PRIMARY KEY (category_id)\n);\n\nCREATE TABLE customer (\n    customer_id INT, -- example: [1, 2, 3]\n    first_name VARCHAR(45), -- example: ['MARY', 'PATRICIA', 'LINDA']\n    last_name VARCHAR(45), -- example: ['ABNEY', 'ADAM', 'ADAMS']\n    address_id INT, -- example: [5, 6, 7]\n    PRIMARY KEY (customer_id),\n    CONSTRAINT fk_customer_store_id FOREIGN KEY (store_id) REFERENCES store (store_id),\n    CONSTRAINT fk_customer_address_id FOREIGN KEY (address_id) REFERENCES address (address_id)\n);\n\nCREATE TABLE film (\n    film_id int, -- example: [1, 2, 3]\n    title VARCHAR(255), -- example: ['ACADEMY DINOSAUR', 'ACE GOLDFINGER', 'ADAPTATION HOLES']\n    language_id SMALLINT, -- example: [1]\n    original_language_id SMALLINT,\n    replacement_cost DECIMAL(5,2), -- example: [20.99, 12.99, 18.99]\n    rating VARCHAR(10), -- example: ['PG', 'G', 'NC-17']\n    PRIMARY KEY (film_id),\n    CONSTRAINT fk_film_language_id FOREIGN KEY (language_id) REFERENCES `language` (language_id),\n    CONSTRAINT fk_film_original_language_id FOREIGN KEY (original_language_id) REFERENCES `language` (language_id)\n);\n\nCREATE TABLE film_actor (\n    actor_id INT, -- example: [1, 2, 3]\n    film_id INT, -- example: [1, 2, 3]\n    PRIMARY KEY (actor_id),\n    CONSTRAINT fk_film_actor_actor_id FOREIGN KEY (actor_id) REFERENCES actor (actor_id),\n    CONSTRAINT fk_film_actor_film_id FOREIGN KEY (film_id) REFERENCES film (film_id)\n);\n\nCREATE TABLE film_category (\n    film_id INT, -- example: [1, 2, 3]\n    category_id SMALLINT, -- example: [1, 2, 3]\n    PRIMARY KEY (film_id),\n    CONSTRAINT fk_film_category_film_id FOREIGN KEY (film_id) REFERENCES film (film_id),\n    CONSTRAINT fk_film_category_category_id FOREIGN KEY (category_id) REFERENCES category (category_id)\n);\n\nCREATE TABLE film_text (\n    film_id SMALLINT,\n    title VARCHAR(255),\n    description BLOB SUB_TYPE TEXT,\n    PRIMARY KEY (film_id)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT, -- example: [1, 2, 3]\n    film_id INT, -- example: [1, 2, 3]\n    PRIMARY KEY (inventory_id),\n    CONSTRAINT fk_inventory_film_id FOREIGN KEY (film_id) REFERENCES film (film_id),\n    CONSTRAINT fk_inventory_store_id FOREIGN KEY (store_id) REFERENCES store (store_id)\n);\n\nCREATE TABLE staff (\n    staff_id SMALLINT, -- example: [1, 2]\n    first_name VARCHAR(45), -- example: ['Mike', 'Jon']\n    last_name VARCHAR(45), -- example: ['Hillyer', 'Stephens']\n    address_id INT, -- example: [3, 4]\n    picture BLOB,\n    PRIMARY KEY (staff_id),\n    CONSTRAINT fk_staff_address_id FOREIGN KEY (address_id) REFERENCES address (address_id),\n    CONSTRAINT fk_staff_store_id FOREIGN KEY (store_id) REFERENCES store (store_id)\n);\n\nCREATE TABLE store (\n    manager_staff_id SMALLINT, -- example: [1, 2]\n    address_id INT, -- example: [1, 2]\n    PRIMARY KEY (store_id),\n    CONSTRAINT fk_store_manager_staff_id FOREIGN KEY (manager_staff_id) REFERENCES staff (staff_id),\n    CONSTRAINT fk_store_address_id FOREIGN KEY (address_id) REFERENCES address (address_id)\n);\n\nCREATE TABLE payment (\n    customer_id INT, -- example: [1, 2, 3]\n    staff_id SMALLINT, -- example: [1, 2]\n    amount DECIMAL(5,2), -- example: [2.99, 0.99, 5.99]\n    PRIMARY KEY (payment_id),\n    CONSTRAINT fk_payment_customer_id FOREIGN KEY (customer_id) REFERENCES customer (customer_id),\n    CONSTRAINT fk_payment_staff_id FOREIGN KEY (staff_id) REFERENCES staff (staff_id),\n    CONSTRAINT fk_payment_rental_id FOREIGN KEY (rental_id) REFERENCES rental (rental_id)\n);\n\nCREATE TABLE rental (\n    inventory_id INT, -- example: [1, 2, 3]\n    customer_id INT, -- example: [1, 2, 3]\n    staff_id SMALLINT, -- example: [1, 2]\n    PRIMARY KEY (rental_id),\n    CONSTRAINT fk_rental_inventory_id FOREIGN KEY (inventory_id) REFERENCES inventory (inventory_id),\n    CONSTRAINT fk_rental_customer_id FOREIGN KEY (customer_id) REFERENCES customer (customer_id),\n    CONSTRAINT fk_rental_staff_id FOREIGN KEY (staff_id) REFERENCES staff (staff_id)\n);",
        "question": "Please provide a list of the top three revenue-generating films for each actor, along with the average revenue per actor in those films, calculated by dividing the total film revenue equally among the actors for each film.",
        "instance_id": "local194",
        "db_id": "sqlite-sakila"
    },
    {
        "db_desc": "CREATE TABLE actor (\n    actor_id numeric, -- example: [1, 2, 3]\n    first_name VARCHAR(45), -- example: ['PENELOPE', 'NICK', 'ED']\n    last_name VARCHAR(45), -- example: ['AKROYD', 'ALLEN', 'ASTAIRE']\n    PRIMARY KEY (actor_id)\n);\n\nCREATE TABLE country (\n    country_id SMALLINT, -- example: [1, 2, 3]\n    PRIMARY KEY (country_id)\n);\n\nCREATE TABLE city (\n    city_id int, -- example: [1, 2, 3]\n    country_id SMALLINT, -- example: [1, 2, 3]\n    PRIMARY KEY (city_id),\n    CONSTRAINT fk_city_country_id FOREIGN KEY (country_id) REFERENCES country (country_id)\n);\n\nCREATE TABLE address (\n    address_id int, -- example: [1, 2, 3]\n    address2 VARCHAR(50),\n    city_id INT, -- example: [1, 2, 3]\n    PRIMARY KEY (address_id),\n    CONSTRAINT fk_address_city_id FOREIGN KEY (city_id) REFERENCES city (city_id)\n);\n\nCREATE TABLE `language` (\n    language_id SMALLINT, -- example: [1, 2, 3]\n    PRIMARY KEY (language_id)\n);\n\nCREATE TABLE category (\n    category_id SMALLINT, -- example: [1, 2, 3]\n    PRIMARY KEY (category_id)\n);\n\nCREATE TABLE customer (\n    customer_id INT, -- example: [1, 2, 3]\n    first_name VARCHAR(45), -- example: ['MARY', 'PATRICIA', 'LINDA']\n    last_name VARCHAR(45), -- example: ['ABNEY', 'ADAM', 'ADAMS']\n    address_id INT, -- example: [5, 6, 7]\n    PRIMARY KEY (customer_id),\n    CONSTRAINT fk_customer_store_id FOREIGN KEY (store_id) REFERENCES store (store_id),\n    CONSTRAINT fk_customer_address_id FOREIGN KEY (address_id) REFERENCES address (address_id)\n);\n\nCREATE TABLE film (\n    film_id int, -- example: [1, 2, 3]\n    language_id SMALLINT, -- example: [1]\n    original_language_id SMALLINT,\n    rental_duration SMALLINT, -- example: [6, 3, 7]\n    rental_rate DECIMAL(4,2), -- example: [0.99, 4.99, 2.99]\n    PRIMARY KEY (film_id),\n    CONSTRAINT fk_film_language_id FOREIGN KEY (language_id) REFERENCES `language` (language_id),\n    CONSTRAINT fk_film_original_language_id FOREIGN KEY (original_language_id) REFERENCES `language` (language_id)\n);\n\nCREATE TABLE film_actor (\n    actor_id INT, -- example: [1, 2, 3]\n    film_id INT, -- example: [1, 2, 3]\n    PRIMARY KEY (actor_id),\n    CONSTRAINT fk_film_actor_actor_id FOREIGN KEY (actor_id) REFERENCES actor (actor_id),\n    CONSTRAINT fk_film_actor_film_id FOREIGN KEY (film_id) REFERENCES film (film_id)\n);\n\nCREATE TABLE film_category (\n    film_id INT, -- example: [1, 2, 3]\n    category_id SMALLINT, -- example: [1, 2, 3]\n    PRIMARY KEY (film_id),\n    CONSTRAINT fk_film_category_film_id FOREIGN KEY (film_id) REFERENCES film (film_id),\n    CONSTRAINT fk_film_category_category_id FOREIGN KEY (category_id) REFERENCES category (category_id)\n);\n\nCREATE TABLE film_text (\n    film_id SMALLINT,\n    title VARCHAR(255),\n    description BLOB SUB_TYPE TEXT,\n    PRIMARY KEY (film_id)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT, -- example: [1, 2, 3]\n    film_id INT, -- example: [1, 2, 3]\n    PRIMARY KEY (inventory_id),\n    CONSTRAINT fk_inventory_film_id FOREIGN KEY (film_id) REFERENCES film (film_id),\n    CONSTRAINT fk_inventory_store_id FOREIGN KEY (store_id) REFERENCES store (store_id)\n);\n\nCREATE TABLE staff (\n    staff_id SMALLINT, -- example: [1, 2]\n    first_name VARCHAR(45), -- example: ['Mike', 'Jon']\n    last_name VARCHAR(45), -- example: ['Hillyer', 'Stephens']\n    address_id INT, -- example: [3, 4]\n    picture BLOB,\n    PRIMARY KEY (staff_id),\n    CONSTRAINT fk_staff_address_id FOREIGN KEY (address_id) REFERENCES address (address_id),\n    CONSTRAINT fk_staff_store_id FOREIGN KEY (store_id) REFERENCES store (store_id)\n);\n\nCREATE TABLE store (\n    manager_staff_id SMALLINT, -- example: [1, 2]\n    address_id INT, -- example: [1, 2]\n    PRIMARY KEY (store_id),\n    CONSTRAINT fk_store_manager_staff_id FOREIGN KEY (manager_staff_id) REFERENCES staff (staff_id),\n    CONSTRAINT fk_store_address_id FOREIGN KEY (address_id) REFERENCES address (address_id)\n);\n\nCREATE TABLE payment (\n    customer_id INT, -- example: [1, 2, 3]\n    staff_id SMALLINT, -- example: [1, 2]\n    rental_id INT, -- example: [76, 573, 1185]\n    PRIMARY KEY (payment_id),\n    CONSTRAINT fk_payment_customer_id FOREIGN KEY (customer_id) REFERENCES customer (customer_id),\n    CONSTRAINT fk_payment_staff_id FOREIGN KEY (staff_id) REFERENCES staff (staff_id),\n    CONSTRAINT fk_payment_rental_id FOREIGN KEY (rental_id) REFERENCES rental (rental_id)\n);\n\nCREATE TABLE rental (\n    rental_id INT, -- example: [1, 2, 3]\n    rental_date TIMESTAMP, -- example: ['2005-05-24 22:53:30.000', '2005-05-24 22:54:33.000', '2005-05-24 23:03:39.000']\n    inventory_id INT, -- example: [1, 2, 3]\n    customer_id INT, -- example: [1, 2, 3]\n    staff_id SMALLINT, -- example: [1, 2]\n    PRIMARY KEY (rental_id),\n    CONSTRAINT fk_rental_inventory_id FOREIGN KEY (inventory_id) REFERENCES inventory (inventory_id),\n    CONSTRAINT fk_rental_customer_id FOREIGN KEY (customer_id) REFERENCES customer (customer_id),\n    CONSTRAINT fk_rental_staff_id FOREIGN KEY (staff_id) REFERENCES staff (staff_id)\n);",
        "question": "Please find out how widespread the appeal of our top five actors is. What percentage of our customers have rented films featuring these actors?",
        "instance_id": "local195",
        "db_id": "sqlite-sakila"
    },
    {
        "db_desc": "CREATE TABLE actor (\n    actor_id numeric, -- example: [1, 2, 3]\n    first_name VARCHAR(45), -- example: ['PENELOPE', 'NICK', 'ED']\n    last_name VARCHAR(45), -- example: ['AKROYD', 'ALLEN', 'ASTAIRE']\n    PRIMARY KEY (actor_id)\n);\n\nCREATE TABLE country (\n    country_id SMALLINT, -- example: [1, 2, 3]\n    country VARCHAR(50), -- example: ['Afghanistan', 'Algeria', 'American Samoa']\n    PRIMARY KEY (country_id)\n);\n\nCREATE TABLE city (\n    city_id int, -- example: [1, 2, 3]\n    city VARCHAR(50), -- example: ['A Corua (La Corua)', 'Abha', 'Abu Dhabi']\n    country_id SMALLINT, -- example: [1, 2, 3]\n    PRIMARY KEY (city_id),\n    CONSTRAINT fk_city_country_id FOREIGN KEY (country_id) REFERENCES country (country_id)\n);\n\nCREATE TABLE address (\n    address_id int, -- example: [1, 2, 3]\n    address VARCHAR(50), -- example: ['47 MySakila Drive', '28 MySQL Boulevard', '23 Workhaven Lane']\n    address2 VARCHAR(50),\n    city_id INT, -- example: [1, 2, 3]\n    phone VARCHAR(20), -- example: [' ']\n    PRIMARY KEY (address_id),\n    CONSTRAINT fk_address_city_id FOREIGN KEY (city_id) REFERENCES city (city_id)\n);\n\nCREATE TABLE `language` (\n    language_id SMALLINT, -- example: [1, 2, 3]\n    name CHAR(20), -- example: ['English', 'Italian', 'Japanese']\n    PRIMARY KEY (language_id)\n);\n\nCREATE TABLE category (\n    category_id SMALLINT, -- example: [1, 2, 3]\n    name VARCHAR(25), -- example: ['Action', 'Animation', 'Children']\n    PRIMARY KEY (category_id)\n);\n\nCREATE TABLE customer (\n    customer_id INT, -- example: [1, 2, 3]\n    first_name VARCHAR(45), -- example: ['MARY', 'PATRICIA', 'LINDA']\n    last_name VARCHAR(45), -- example: ['ABNEY', 'ADAM', 'ADAMS']\n    address_id INT, -- example: [5, 6, 7]\n    create_date TIMESTAMP, -- example: ['2006-02-14 22:04:36.000', '2006-02-14 22:04:37.000']\n    PRIMARY KEY (customer_id),\n    CONSTRAINT fk_customer_store_id FOREIGN KEY (store_id) REFERENCES store (store_id),\n    CONSTRAINT fk_customer_address_id FOREIGN KEY (address_id) REFERENCES address (address_id)\n);\n\nCREATE TABLE film (\n    film_id int, -- example: [1, 2, 3]\n    language_id SMALLINT, -- example: [1]\n    original_language_id SMALLINT,\n    rental_duration SMALLINT, -- example: [6, 3, 7]\n    rental_rate DECIMAL(4,2), -- example: [0.99, 4.99, 2.99]\n    length SMALLINT, -- example: [86, 48, 50]\n    rating VARCHAR(10), -- example: ['PG', 'G', 'NC-17']\n    PRIMARY KEY (film_id),\n    CONSTRAINT fk_film_language_id FOREIGN KEY (language_id) REFERENCES `language` (language_id),\n    CONSTRAINT fk_film_original_language_id FOREIGN KEY (original_language_id) REFERENCES `language` (language_id)\n);\n\nCREATE TABLE film_actor (\n    actor_id INT, -- example: [1, 2, 3]\n    film_id INT, -- example: [1, 2, 3]\n    PRIMARY KEY (actor_id),\n    CONSTRAINT fk_film_actor_actor_id FOREIGN KEY (actor_id) REFERENCES actor (actor_id),\n    CONSTRAINT fk_film_actor_film_id FOREIGN KEY (film_id) REFERENCES film (film_id)\n);\n\nCREATE TABLE film_category (\n    film_id INT, -- example: [1, 2, 3]\n    category_id SMALLINT, -- example: [1, 2, 3]\n    PRIMARY KEY (film_id),\n    CONSTRAINT fk_film_category_film_id FOREIGN KEY (film_id) REFERENCES film (film_id),\n    CONSTRAINT fk_film_category_category_id FOREIGN KEY (category_id) REFERENCES category (category_id)\n);\n\nCREATE TABLE film_text (\n    film_id SMALLINT,\n    title VARCHAR(255),\n    description BLOB SUB_TYPE TEXT,\n    PRIMARY KEY (film_id)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT, -- example: [1, 2, 3]\n    film_id INT, -- example: [1, 2, 3]\n    PRIMARY KEY (inventory_id),\n    CONSTRAINT fk_inventory_film_id FOREIGN KEY (film_id) REFERENCES film (film_id),\n    CONSTRAINT fk_inventory_store_id FOREIGN KEY (store_id) REFERENCES store (store_id)\n);\n\nCREATE TABLE staff (\n    staff_id SMALLINT, -- example: [1, 2]\n    first_name VARCHAR(45), -- example: ['Mike', 'Jon']\n    last_name VARCHAR(45), -- example: ['Hillyer', 'Stephens']\n    address_id INT, -- example: [3, 4]\n    picture BLOB,\n    username VARCHAR(16), -- example: ['Mike', 'Jon']\n    PRIMARY KEY (staff_id),\n    CONSTRAINT fk_staff_address_id FOREIGN KEY (address_id) REFERENCES address (address_id),\n    CONSTRAINT fk_staff_store_id FOREIGN KEY (store_id) REFERENCES store (store_id)\n);\n\nCREATE TABLE store (\n    manager_staff_id SMALLINT, -- example: [1, 2]\n    address_id INT, -- example: [1, 2]\n    PRIMARY KEY (store_id),\n    CONSTRAINT fk_store_manager_staff_id FOREIGN KEY (manager_staff_id) REFERENCES staff (staff_id),\n    CONSTRAINT fk_store_address_id FOREIGN KEY (address_id) REFERENCES address (address_id)\n);\n\nCREATE TABLE payment (\n    payment_id int, -- example: [1, 2, 3]\n    customer_id INT, -- example: [1, 2, 3]\n    staff_id SMALLINT, -- example: [1, 2]\n    rental_id INT, -- example: [76, 573, 1185]\n    amount DECIMAL(5,2), -- example: [2.99, 0.99, 5.99]\n    payment_date TIMESTAMP, -- example: ['2005-05-25 11:30:37.000', '2005-05-28 10:35:23.000', '2005-06-15 00:54:12.000']\n    PRIMARY KEY (payment_id),\n    CONSTRAINT fk_payment_customer_id FOREIGN KEY (customer_id) REFERENCES customer (customer_id),\n    CONSTRAINT fk_payment_staff_id FOREIGN KEY (staff_id) REFERENCES staff (staff_id),\n    CONSTRAINT fk_payment_rental_id FOREIGN KEY (rental_id) REFERENCES rental (rental_id)\n);\n\nCREATE TABLE rental (\n    rental_id INT, -- example: [1, 2, 3]\n    rental_date TIMESTAMP, -- example: ['2005-05-24 22:53:30.000', '2005-05-24 22:54:33.000', '2005-05-24 23:03:39.000']\n    inventory_id INT, -- example: [1, 2, 3]\n    customer_id INT, -- example: [1, 2, 3]\n    return_date TIMESTAMP, -- example: ['2005-05-26 22:04:30.000', '2005-05-28 19:40:33.000', '2005-06-01 22:12:39.000']\n    staff_id SMALLINT, -- example: [1, 2]\n    PRIMARY KEY (rental_id),\n    CONSTRAINT fk_rental_inventory_id FOREIGN KEY (inventory_id) REFERENCES inventory (inventory_id),\n    CONSTRAINT fk_rental_customer_id FOREIGN KEY (customer_id) REFERENCES customer (customer_id),\n    CONSTRAINT fk_rental_staff_id FOREIGN KEY (staff_id) REFERENCES staff (staff_id)\n);",
        "question": "For each rating category of the first movie rented by customers\u2014where the first movie is identified based on the earliest payment date per customer\u2014please provide the average total amount spent per customer and the average number of subsequent rentals (calculated as the total number of rentals minus one) for customers whose first rented movie falls into that rating category.",
        "instance_id": "local196",
        "db_id": "sqlite-sakila"
    },
    {
        "db_desc": "CREATE TABLE actor (\n    actor_id numeric, -- example: [1, 2, 3]\n    first_name VARCHAR(45), -- example: ['PENELOPE', 'NICK', 'ED']\n    last_name VARCHAR(45), -- example: ['AKROYD', 'ALLEN', 'ASTAIRE']\n    PRIMARY KEY (actor_id)\n);\n\nCREATE TABLE country (\n    country_id SMALLINT, -- example: [1, 2, 3]\n    country VARCHAR(50), -- example: ['Afghanistan', 'Algeria', 'American Samoa']\n    PRIMARY KEY (country_id)\n);\n\nCREATE TABLE city (\n    city_id int, -- example: [1, 2, 3]\n    city VARCHAR(50), -- example: ['A Corua (La Corua)', 'Abha', 'Abu Dhabi']\n    country_id SMALLINT, -- example: [1, 2, 3]\n    PRIMARY KEY (city_id),\n    CONSTRAINT fk_city_country_id FOREIGN KEY (country_id) REFERENCES country (country_id)\n);\n\nCREATE TABLE address (\n    address_id int, -- example: [1, 2, 3]\n    address VARCHAR(50), -- example: ['47 MySakila Drive', '28 MySQL Boulevard', '23 Workhaven Lane']\n    address2 VARCHAR(50),\n    city_id INT, -- example: [1, 2, 3]\n    phone VARCHAR(20), -- example: [' ']\n    PRIMARY KEY (address_id),\n    CONSTRAINT fk_address_city_id FOREIGN KEY (city_id) REFERENCES city (city_id)\n);\n\nCREATE TABLE `language` (\n    language_id SMALLINT, -- example: [1, 2, 3]\n    name CHAR(20), -- example: ['English', 'Italian', 'Japanese']\n    PRIMARY KEY (language_id)\n);\n\nCREATE TABLE category (\n    category_id SMALLINT, -- example: [1, 2, 3]\n    name VARCHAR(25), -- example: ['Action', 'Animation', 'Children']\n    PRIMARY KEY (category_id)\n);\n\nCREATE TABLE customer (\n    customer_id INT, -- example: [1, 2, 3]\n    first_name VARCHAR(45), -- example: ['APRIL']\n    last_name VARCHAR(45), -- example: ['ABNEY', 'ADAM', 'ADAMS']\n    address_id INT, -- example: [5, 6, 7]\n    create_date TIMESTAMP, -- example: ['2006-02-14 22:04:36.000', '2006-02-14 22:04:37.000']\n    PRIMARY KEY (customer_id),\n    CONSTRAINT fk_customer_store_id FOREIGN KEY (store_id) REFERENCES store (store_id),\n    CONSTRAINT fk_customer_address_id FOREIGN KEY (address_id) REFERENCES address (address_id)\n);\n\nCREATE TABLE film (\n    film_id int, -- example: [1, 2, 3]\n    language_id SMALLINT, -- example: [1]\n    original_language_id SMALLINT,\n    length SMALLINT, -- example: [86, 48, 50]\n    rating VARCHAR(10), -- example: ['PG', 'G', 'NC-17']\n    PRIMARY KEY (film_id),\n    CONSTRAINT fk_film_language_id FOREIGN KEY (language_id) REFERENCES `language` (language_id),\n    CONSTRAINT fk_film_original_language_id FOREIGN KEY (original_language_id) REFERENCES `language` (language_id)\n);\n\nCREATE TABLE film_actor (\n    actor_id INT, -- example: [1, 2, 3]\n    film_id INT, -- example: [1, 2, 3]\n    PRIMARY KEY (actor_id),\n    CONSTRAINT fk_film_actor_actor_id FOREIGN KEY (actor_id) REFERENCES actor (actor_id),\n    CONSTRAINT fk_film_actor_film_id FOREIGN KEY (film_id) REFERENCES film (film_id)\n);\n\nCREATE TABLE film_category (\n    film_id INT, -- example: [1, 2, 3]\n    category_id SMALLINT, -- example: [1, 2, 3]\n    PRIMARY KEY (film_id),\n    CONSTRAINT fk_film_category_film_id FOREIGN KEY (film_id) REFERENCES film (film_id),\n    CONSTRAINT fk_film_category_category_id FOREIGN KEY (category_id) REFERENCES category (category_id)\n);\n\nCREATE TABLE film_text (\n    film_id SMALLINT,\n    title VARCHAR(255),\n    description BLOB SUB_TYPE TEXT,\n    PRIMARY KEY (film_id)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT, -- example: [1, 2, 3]\n    film_id INT, -- example: [1, 2, 3]\n    PRIMARY KEY (inventory_id),\n    CONSTRAINT fk_inventory_film_id FOREIGN KEY (film_id) REFERENCES film (film_id),\n    CONSTRAINT fk_inventory_store_id FOREIGN KEY (store_id) REFERENCES store (store_id)\n);\n\nCREATE TABLE staff (\n    staff_id SMALLINT, -- example: [1, 2]\n    first_name VARCHAR(45), -- example: ['Mike', 'Jon']\n    last_name VARCHAR(45), -- example: ['Hillyer', 'Stephens']\n    address_id INT, -- example: [3, 4]\n    picture BLOB,\n    username VARCHAR(16), -- example: ['Mike', 'Jon']\n    PRIMARY KEY (staff_id),\n    CONSTRAINT fk_staff_address_id FOREIGN KEY (address_id) REFERENCES address (address_id),\n    CONSTRAINT fk_staff_store_id FOREIGN KEY (store_id) REFERENCES store (store_id)\n);\n\nCREATE TABLE store (\n    manager_staff_id SMALLINT, -- example: [1, 2]\n    address_id INT, -- example: [1, 2]\n    PRIMARY KEY (store_id),\n    CONSTRAINT fk_store_manager_staff_id FOREIGN KEY (manager_staff_id) REFERENCES staff (staff_id),\n    CONSTRAINT fk_store_address_id FOREIGN KEY (address_id) REFERENCES address (address_id)\n);\n\nCREATE TABLE payment (\n    payment_id int, -- example: [1, 2, 3]\n    customer_id INT, -- example: [1, 2, 3]\n    staff_id SMALLINT, -- example: [1, 2]\n    amount DECIMAL(5,2), -- example: [2.99, 0.99, 5.99]\n    payment_date TIMESTAMP, -- example: ['2005-05-25 11:30:37.000', '2005-05-28 10:35:23.000', '2005-06-15 00:54:12.000']\n    PRIMARY KEY (payment_id),\n    CONSTRAINT fk_payment_customer_id FOREIGN KEY (customer_id) REFERENCES customer (customer_id),\n    CONSTRAINT fk_payment_staff_id FOREIGN KEY (staff_id) REFERENCES staff (staff_id),\n    CONSTRAINT fk_payment_rental_id FOREIGN KEY (rental_id) REFERENCES rental (rental_id)\n);\n\nCREATE TABLE rental (\n    rental_date TIMESTAMP, -- example: ['2005-05-24 22:53:30.000', '2005-05-24 22:54:33.000', '2005-05-24 23:03:39.000']\n    inventory_id INT, -- example: [1, 2, 3]\n    customer_id INT, -- example: [1, 2, 3]\n    return_date TIMESTAMP, -- example: ['2005-05-26 22:04:30.000', '2005-05-28 19:40:33.000', '2005-06-01 22:12:39.000']\n    staff_id SMALLINT, -- example: [1, 2]\n    PRIMARY KEY (rental_id),\n    CONSTRAINT fk_rental_inventory_id FOREIGN KEY (inventory_id) REFERENCES inventory (inventory_id),\n    CONSTRAINT fk_rental_customer_id FOREIGN KEY (customer_id) REFERENCES customer (customer_id),\n    CONSTRAINT fk_rental_staff_id FOREIGN KEY (staff_id) REFERENCES staff (staff_id)\n);",
        "question": "Among our top 10 paying customers, can you identify the largest change in payment amounts from one month to the immediately following month? Specifically, please determine for which customer and during which month this maximum month-over-month difference occurred, and provide the difference rounded to two decimal places.",
        "instance_id": "local197",
        "db_id": "sqlite-sakila"
    },
    {
        "db_desc": "CREATE TABLE actor (\n    actor_id numeric, -- example: [1, 2, 3]\n    PRIMARY KEY (actor_id)\n);\n\nCREATE TABLE country (\n    country_id SMALLINT, -- example: [1, 2, 3]\n    country VARCHAR(50), -- example: ['Afghanistan', 'Algeria', 'American Samoa']\n    PRIMARY KEY (country_id)\n);\n\nCREATE TABLE city (\n    city_id int, -- example: [1, 2, 3]\n    city VARCHAR(50), -- example: ['A Corua (La Corua)', 'Abha', 'Abu Dhabi']\n    country_id SMALLINT, -- example: [1, 2, 3]\n    PRIMARY KEY (city_id),\n    CONSTRAINT fk_city_country_id FOREIGN KEY (country_id) REFERENCES country (country_id)\n);\n\nCREATE TABLE address (\n    address_id int, -- example: [1, 2, 3]\n    address2 VARCHAR(50),\n    city_id INT, -- example: [1, 2, 3]\n    phone VARCHAR(20), -- example: [' ']\n    PRIMARY KEY (address_id),\n    CONSTRAINT fk_address_city_id FOREIGN KEY (city_id) REFERENCES city (city_id)\n);\n\nCREATE TABLE `language` (\n    language_id SMALLINT, -- example: [1, 2, 3]\n    PRIMARY KEY (language_id)\n);\n\nCREATE TABLE category (\n    category_id SMALLINT, -- example: [1, 2, 3]\n    PRIMARY KEY (category_id)\n);\n\nCREATE TABLE customer (\n    customer_id INT, -- example: [1, 2, 3]\n    store_id INT, -- example: [1, 2]\n    first_name VARCHAR(45), -- example: ['APRIL']\n    address_id INT, -- example: [5, 6, 7]\n    PRIMARY KEY (customer_id),\n    CONSTRAINT fk_customer_store_id FOREIGN KEY (store_id) REFERENCES store (store_id),\n    CONSTRAINT fk_customer_address_id FOREIGN KEY (address_id) REFERENCES address (address_id)\n);\n\nCREATE TABLE film (\n    film_id int, -- example: [1, 2, 3]\n    title VARCHAR(255), -- example: ['CAUSE DATE']\n    release_year VARCHAR(4), -- example: ['2006']\n    language_id SMALLINT, -- example: [1]\n    original_language_id SMALLINT,\n    rental_duration SMALLINT, -- example: [6, 3, 7]\n    rental_rate DECIMAL(4,2), -- example: [0.99, 4.99, 2.99]\n    PRIMARY KEY (film_id),\n    CONSTRAINT fk_film_language_id FOREIGN KEY (language_id) REFERENCES `language` (language_id),\n    CONSTRAINT fk_film_original_language_id FOREIGN KEY (original_language_id) REFERENCES `language` (language_id)\n);\n\nCREATE TABLE film_actor (\n    actor_id INT, -- example: [1, 2, 3]\n    film_id INT, -- example: [1, 2, 3]\n    PRIMARY KEY (actor_id),\n    CONSTRAINT fk_film_actor_actor_id FOREIGN KEY (actor_id) REFERENCES actor (actor_id),\n    CONSTRAINT fk_film_actor_film_id FOREIGN KEY (film_id) REFERENCES film (film_id)\n);\n\nCREATE TABLE film_category (\n    film_id INT, -- example: [1, 2, 3]\n    category_id SMALLINT, -- example: [1, 2, 3]\n    PRIMARY KEY (film_id),\n    CONSTRAINT fk_film_category_film_id FOREIGN KEY (film_id) REFERENCES film (film_id),\n    CONSTRAINT fk_film_category_category_id FOREIGN KEY (category_id) REFERENCES category (category_id)\n);\n\nCREATE TABLE film_text (\n    film_id SMALLINT,\n    title VARCHAR(255),\n    description BLOB SUB_TYPE TEXT,\n    PRIMARY KEY (film_id)\n);\n\nCREATE TABLE inventory (\n    inventory_id INT, -- example: [1, 2, 3]\n    film_id INT, -- example: [1, 2, 3]\n    store_id INT, -- example: [1, 2]\n    PRIMARY KEY (inventory_id),\n    CONSTRAINT fk_inventory_film_id FOREIGN KEY (film_id) REFERENCES film (film_id),\n    CONSTRAINT fk_inventory_store_id FOREIGN KEY (store_id) REFERENCES store (store_id)\n);\n\nCREATE TABLE staff (\n    staff_id SMALLINT, -- example: [1, 2]\n    address_id INT, -- example: [3, 4]\n    picture BLOB,\n    store_id INT, -- example: [1, 2]\n    PRIMARY KEY (staff_id),\n    CONSTRAINT fk_staff_address_id FOREIGN KEY (address_id) REFERENCES address (address_id),\n    CONSTRAINT fk_staff_store_id FOREIGN KEY (store_id) REFERENCES store (store_id)\n);\n\nCREATE TABLE store (\n    store_id INT, -- example: [1, 2]\n    manager_staff_id SMALLINT, -- example: [1, 2]\n    address_id INT, -- example: [1, 2]\n    PRIMARY KEY (store_id),\n    CONSTRAINT fk_store_manager_staff_id FOREIGN KEY (manager_staff_id) REFERENCES staff (staff_id),\n    CONSTRAINT fk_store_address_id FOREIGN KEY (address_id) REFERENCES address (address_id)\n);\n\nCREATE TABLE payment (\n    customer_id INT, -- example: [1, 2, 3]\n    staff_id SMALLINT, -- example: [1, 2]\n    rental_id INT, -- example: [76, 573, 1185]\n    amount DECIMAL(5,2), -- example: [2.99, 0.99, 5.99]\n    PRIMARY KEY (payment_id),\n    CONSTRAINT fk_payment_customer_id FOREIGN KEY (customer_id) REFERENCES customer (customer_id),\n    CONSTRAINT fk_payment_staff_id FOREIGN KEY (staff_id) REFERENCES staff (staff_id),\n    CONSTRAINT fk_payment_rental_id FOREIGN KEY (rental_id) REFERENCES rental (rental_id)\n);\n\nCREATE TABLE rental (\n    rental_id INT, -- example: [1, 2, 3]\n    rental_date TIMESTAMP, -- example: ['2005-05-24 22:53:30.000', '2005-05-24 22:54:33.000', '2005-05-24 23:03:39.000']\n    inventory_id INT, -- example: [1, 2, 3]\n    customer_id INT, -- example: [1, 2, 3]\n    staff_id SMALLINT, -- example: [1, 2]\n    PRIMARY KEY (rental_id),\n    CONSTRAINT fk_rental_inventory_id FOREIGN KEY (inventory_id) REFERENCES inventory (inventory_id),\n    CONSTRAINT fk_rental_customer_id FOREIGN KEY (customer_id) REFERENCES customer (customer_id),\n    CONSTRAINT fk_rental_staff_id FOREIGN KEY (staff_id) REFERENCES staff (staff_id)\n);",
        "question": "Can you identify the year and month with the highest rental orders created by the store's staff for each store? Please list the store ID, the year, the month, and the total rentals for those dates.",
        "instance_id": "local199",
        "db_id": "sqlite-sakila"
    },
    {
        "db_desc": "CREATE TABLE pizza_names (\n    \n\nCREATE TABLE companies_funding (\n    \n\nCREATE TABLE pizza_customer_orders (\n    \n\nCREATE TABLE pizza_toppings (\n    \n\nCREATE TABLE trees (\n    status TEXT, -- example: ['Alive', 'Stump', 'Dead']\n\nCREATE TABLE pizza_recipes (\n    \n\nCREATE TABLE statistics (\n    \n\nCREATE TABLE income_trees (\n    \n\nCREATE TABLE pizza_clean_runner_orders (\n    distance REAL, -- example: [20.0, 13.4, 23.4]\n    duration REAL, -- example: [32.0, 27.0, 20.0]\n\nCREATE TABLE pizza_runner_orders (\n    distance TEXT, -- example: ['20km', '13.4km', '23.4']\n    duration TEXT, -- example: ['32 minutes', '27 minutes', '20 mins']\n\nCREATE TABLE word_list (\n    words TEXT, -- example: ['words', 'sorted', 'same', 'r', 'one', 'letters', 'length', 'least', 'count', 'characters', 'at', 'anagramming', 'anagram', 'alphabetically']\n);\n\nCREATE TABLE companies_dates (\n    \n\nCREATE TABLE pizza_get_extras (\n    extras_count INTEGER, -- example: [1, 2]\n);\n\nCREATE TABLE pizza_get_exclusions (\n    \n\nCREATE TABLE pizza_clean_customer_orders (\n    \n\nCREATE TABLE companies_industries (\n    \n\nCREATE TABLE pizza_runners (\n    ",
        "question": "Identify the first 10 words, sorted alphabetically, that are 4 to 5 characters long, start with 'r', and have at least one anagram of the same length, considering case-sensitive letters. Provide the count of such anagrams for each word.",
        "instance_id": "local201",
        "db_id": "modern_data"
    },
    {
        "db_desc": "CREATE TABLE victims (\n    id INTEGER, -- example: [1087998, 952544, 2227500]\n    case_id REAL, -- example: [5224627.0, 930503.0, 6390714.0]\n    victim_role TEXT, -- example: ['other']\n    victim_safety_equipment_1 TEXT, -- example: ['other']\n    victim_safety_equipment_2 TEXT, -- example: ['other']\n\nCREATE TABLE collisions (\n    case_id REAL, -- example: [5419819.0, 6603782.0, 5074872.0]\n    officer_id TEXT, -- example: ['OTHER']\n    distance REAL, -- example: [15470.0, 3000.0, 35.0]\n    intersection REAL, -- example: [0.0, 1.0]\n    weather_1 TEXT, -- example: ['other']\n    weather_2 TEXT, -- example: ['other']\n    primary_collision_factor TEXT, -- example: ['vehicle code violation', 'other than driver', 'other improper driving']\n    type_of_collision TEXT, -- example: ['other']\n    road_condition_1 TEXT, -- example: ['other']\n    road_condition_2 TEXT, -- example: ['other']\n    latitude REAL, -- example: [37.23878, 38.05759, 34.03757]\n    collision_date TEXT, -- example: ['2011-11-22', '2014-07-25', '2011-01-19']\n    process_date TEXT, -- example: ['2013-07-29', '2016-05-13', '2012-05-24']\n);\n\nCREATE TABLE case_ids (\n    case_id REAL, -- example: [3736596.0, 2711941.0, 7146408.0]\n    db_year INTEGER, -- example: [2020, 2018, 2021]\n);\n\nCREATE TABLE parties (\n    id INTEGER, -- example: [138356, 4145454, 1198510]\n    case_id REAL, -- example: [3640533.0, 2206036.0, 662674.0]\n    party_type TEXT, -- example: ['other']\n    party_safety_equipment_1 TEXT, -- example: ['other']\n    party_safety_equipment_2 TEXT, -- example: ['other']\n    other_associate_factor_1 TEXT, -- example: ['other']\n    other_associate_factor_2 TEXT, -- example: ['other']\n    movement_preceding_collision TEXT, -- example: ['other']\n    vehicle_year REAL, -- example: [1991.0, 1995.0, 1993.0]\n    party_race TEXT, -- example: ['other']\n);",
        "question": "In which year were the two most common causes of traffic accidents different from those in other years?",
        "instance_id": "local017",
        "db_id": "California_Traffic_Collision"
    },
    {
        "db_desc": "CREATE TABLE aliens_details (\n    aggressive INTEGER, -- example: [1, 0]\n);\n\nCREATE TABLE skills_dim (\n    \n\nCREATE TABLE legislators_terms (\n    state TEXT, -- example: ['OH', 'WA', 'MD']\n    party TEXT, -- example: ['Democrat', 'Republican', 'Independent']\n    how TEXT, -- example: ['appointment']\n    url TEXT, -- example: ['http://casey.senate.gov/', 'https://fulcher.house.gov', 'http://klobuchar.senate.gov/']\n    phone TEXT, -- example: ['202-224-6324', '202-225-6611', '202-224-3244']\n    office TEXT, -- example: ['393 Russell Senate Office Building', '1520 Longworth House Office Building', '302 Hart Senate Office Building']\n    state_rank TEXT, -- example: ['senior', 'junior']\n\nCREATE TABLE cities_currencies (\n    currency_code TEXT, -- example: ['top']\n);\n\nCREATE TABLE legislators (\n    other_names_middle REAL,\n    birthday TEXT, -- example: ['1952-11-09', '1958-10-13', '1943-10-05']\n    gender TEXT, -- example: ['M', 'F']\n\nCREATE TABLE skills_job_dim (\n    \n\nCREATE TABLE job_postings_fact (\n    job_title TEXT, -- example: ['Data']\n    salary_year_avg REAL, -- example: [300000.0, 120000.0, 99150.0]\n    salary_hour_avg REAL, -- example: [77.5, 27.979999542236328, 27.5]\n);\n\nCREATE TABLE alien_data (\n    last_name TEXT, -- example: ['top']\n    gender TEXT, -- example: ['non-binary', 'female', 'male']\n    birth_year INTEGER, -- example: [1717, 1673, 1675]\n    age INTEGER, -- example: [307, 351, 349]\n    aggressive INTEGER, -- example: [1, 0]\n    state TEXT, -- example: ['ohio', 'maryland', 'california']\n    us_region TEXT, -- example: ['great lakes', 'mideast', 'far west']\n\nCREATE TABLE cities_countries (\n    region TEXT, -- example: ['asia', 'europe', 'africa']\n\nCREATE TABLE legislation_date_dim (\n    \n\nCREATE TABLE cities (\n    population REAL, -- example: [37732000.0, 33756000.0, 32226000.0]\n\nCREATE TABLE aliens_location (\n    state TEXT, -- example: ['Ohio', 'Maryland', 'California']\n\nCREATE TABLE aliens (\n    last_name TEXT, -- example: ['Top']\n    gender TEXT, -- example: ['Agender', 'Female', 'Male']\n    birth_year INTEGER, -- example: [1717, 1673, 1675]\n);\n\nCREATE TABLE cities_languages (\n    `language` TEXT, -- example: ['pashto', 'persian', 'uzbek']\n\nCREATE TABLE job_company (\n    ",
        "question": "For alien data, how many of the top 10 states by alien population have a higher percentage of friendly aliens than hostile aliens, with an average alien age exceeding 200?",
        "instance_id": "local202",
        "db_id": "city_legislation"
    },
    {
        "db_desc": "CREATE TABLE channels (\n    PRIMARY KEY (channel_id)\n);\n\nCREATE TABLE drivers (\n    PRIMARY KEY (driver_id)\n);\n\nCREATE TABLE deliveries (\n    delivery_id INTEGER, -- example: [2174658, 2174660, 2174661]\n    delivery_order_id INTEGER, -- example: [68413340, 68414309, 68416230]\n    delivery_distance_meters DECIMAL(10, 2), -- example: [5199, 410, 3784]\n    delivery_status VARCHAR(50), -- example: ['DELIVERED']\n    PRIMARY KEY (delivery_id)\n);\n\nCREATE TABLE hubs (\n    PRIMARY KEY (hub_id)\n);\n\nCREATE TABLE payments (\n    payment_status VARCHAR(50), -- example: ['PAID', 'CHARGEBACK', 'AWAITING']\n    PRIMARY KEY (payment_id)\n);\n\nCREATE TABLE stores (\n    store_id INTEGER, -- example: [3, 6, 8]\n    store_name VARCHAR(50), -- example: ['CUMIURI', 'PIMGUCIS DA VIVA ', 'RASMUR S ']\n    store_segment VARCHAR(50), -- example: ['FOOD', 'GOOD']\n    store_plan_price DECIMAL(10, 2), -- example: [0, 49, 49.9]\n    store_latitude DECIMAL(9, 6), -- example: [-30.0374149, -22.921475, -23.0007498]\n    PRIMARY KEY (store_id)\n);\n\nCREATE TABLE orders (\n    order_id INTEGER, -- example: [68405119, 68405123, 68405206]\n    store_id INTEGER, -- example: [3512, 3401, 786]\n    delivery_order_id INTEGER, -- example: [68405119, 68405123, 68405206]\n    order_status VARCHAR(50), -- example: ['CANCELED', 'FINISHED']\n    order_amount DECIMAL(10, 2), -- example: [62.7, 115.5, 55.9]\n    order_delivery_cost DECIMAL(10, 2), -- example: [0, 6, 10.93]\n    order_moment_created DATETIME, -- example: ['1/1/2021 12:01:36 AM', '1/1/2021 12:04:26 AM', '1/1/2021 12:13:07 AM']\n    order_moment_accepted DATETIME, -- example: ['1/1/2021 1:57:00 AM', '1/1/2021 2:33:00 AM', '1/1/2021 2:12:17 PM']\n    order_moment_ready DATETIME, -- example: ['1/2/2021 6:24:06 PM', '1/1/2021 2:38:15 PM', '1/1/2021 2:29:28 PM']\n    order_moment_collected DATETIME, -- example: ['1/2/2021 6:30:44 PM', '1/1/2021 2:38:31 PM', '1/1/2021 2:36:30 PM']\n    order_moment_delivering DATETIME, -- example: ['1/2/2021 6:35:49 PM', '1/1/2021 2:49:18 PM', '1/1/2021 2:42:08 PM']\n    order_moment_delivered DATETIME, -- example: ['1/1/2021 4:22:19 PM', '1/1/2021 3:56:45 PM', '1/1/2021 6:01:30 PM']\n    order_moment_finished DATETIME, -- example: ['1/2/2021 6:57:34 PM', '1/1/2021 4:12:36 PM', '1/1/2021 3:31:54 PM']\n    PRIMARY KEY (order_id)\n);",
        "question": "In the dataset of orders joined with store information, which store has the highest total number of orders, and among that store\u2019s orders, what is the ratio of orders that appear in the deliveries table with a 'DELIVERED' status to the total orders for that store?",
        "instance_id": "local209",
        "db_id": "delivery_center"
    },
    {
        "db_desc": "CREATE TABLE channels (\n    PRIMARY KEY (channel_id)\n);\n\nCREATE TABLE drivers (\n    PRIMARY KEY (driver_id)\n);\n\nCREATE TABLE deliveries (\n    PRIMARY KEY (delivery_id)\n);\n\nCREATE TABLE hubs (\n    hub_id INTEGER, -- example: [2, 3, 4]\n    hub_name VARCHAR(50), -- example: ['BLUE SHOPPING', 'GREEN SHOPPING', 'RED SHOPPING']\n    hub_city VARCHAR(50), -- example: ['PORTO ALEGRE', 'RIO DE JANEIRO', 'S\u00c3O PAULO']\n    hub_state CHAR(2), -- example: ['RS', 'RJ', 'SP']\n    hub_latitude DECIMAL(9, 6), -- example: [-30.0474148, -30.0374149, -30.0219481]\n    PRIMARY KEY (hub_id)\n);\n\nCREATE TABLE payments (\n    PRIMARY KEY (payment_id)\n);\n\nCREATE TABLE stores (\n    store_id INTEGER, -- example: [3, 6, 8]\n    hub_id INTEGER, -- example: [2, 3, 8]\n    PRIMARY KEY (store_id)\n);\n\nCREATE TABLE orders (\n    order_id INTEGER, -- example: [68405119, 68405123, 68405206]\n    store_id INTEGER, -- example: [3512, 3401, 786]\n    order_status VARCHAR(50), -- example: ['FINISHED']\n    order_amount DECIMAL(10, 2), -- example: [62.7, 115.5, 55.9]\n    order_created_month INTEGER, -- example: [1, 2, 3]\n    order_created_year INTEGER, -- example: [2021]\n    order_moment_ready DATETIME, -- example: ['1/2/2021 6:24:06 PM', '1/1/2021 2:38:15 PM', '1/1/2021 2:29:28 PM']\n    order_moment_delivering DATETIME, -- example: ['1/2/2021 6:35:49 PM', '1/1/2021 2:49:18 PM', '1/1/2021 2:42:08 PM']\n    order_moment_delivered DATETIME, -- example: ['1/1/2021 4:22:19 PM', '1/1/2021 3:56:45 PM', '1/1/2021 6:01:30 PM']\n    order_moment_finished DATETIME, -- example: ['1/2/2021 6:57:34 PM', '1/1/2021 4:12:36 PM', '1/1/2021 3:31:54 PM']\n    PRIMARY KEY (order_id)\n);",
        "question": "Can you identify the hubs that saw more than a 20% increase in finished orders from February to March?",
        "instance_id": "local210",
        "db_id": "delivery_center"
    },
    {
        "db_desc": "CREATE TABLE channels (\n    PRIMARY KEY (channel_id)\n);\n\nCREATE TABLE drivers (\n    driver_id INTEGER, -- example: [133, 138, 140]\n    driver_type VARCHAR(50), -- example: ['LOGISTIC OPERATOR', 'FREELANCE']\n    PRIMARY KEY (driver_id)\n);\n\nCREATE TABLE deliveries (\n    delivery_id INTEGER, -- example: [2174658, 2174660, 2174661]\n    delivery_order_id INTEGER, -- example: [68413340, 68414309, 68416230]\n    driver_id INTEGER, -- example: [8378, 2473, 7615]\n    delivery_status VARCHAR(50), -- example: ['DELIVERING', 'DELIVERED']\n    PRIMARY KEY (delivery_id)\n);\n\nCREATE TABLE hubs (\n    PRIMARY KEY (hub_id)\n);\n\nCREATE TABLE payments (\n    PRIMARY KEY (payment_id)\n);\n\nCREATE TABLE stores (\n    PRIMARY KEY (store_id)\n);\n\nCREATE TABLE orders (\n    delivery_order_id INTEGER, -- example: [68405119, 68405123, 68405206]\n    order_delivery_cost DECIMAL(10, 2), -- example: [0, 6, 10.93]\n    order_created_day INTEGER, -- example: [1, 2, 3]\n    order_created_month INTEGER, -- example: [1, 2, 3]\n    order_created_year INTEGER, -- example: [2021]\n    order_moment_delivering DATETIME, -- example: ['1/2/2021 6:35:49 PM', '1/1/2021 2:49:18 PM', '1/1/2021 2:42:08 PM']\n    order_moment_delivered DATETIME, -- example: ['1/1/2021 4:22:19 PM', '1/1/2021 3:56:45 PM', '1/1/2021 6:01:30 PM']\n    PRIMARY KEY (order_id)\n);",
        "question": "Can you find 5 delivery drivers with the highest average number of daily deliveries?",
        "instance_id": "local212",
        "db_id": "delivery_center"
    },
    {
        "db_desc": "CREATE TABLE sqlite_sequence (\n    \n\nCREATE TABLE Player_Attributes (\n    player_api_id INTEGER, -- example: [505942, 155782, 162549]\n    PRIMARY KEY (id),\n    CONSTRAINT fk_player_attributes_player_fifa_api_id FOREIGN KEY (player_fifa_api_id) REFERENCES Player (player_fifa_api_id),\n    CONSTRAINT fk_player_attributes_player_api_id FOREIGN KEY (player_api_id) REFERENCES Player (player_api_id)\n);\n\nCREATE TABLE Player (\n    player_api_id INTEGER, -- example: [2625, 2752, 2768]\n    PRIMARY KEY (id)\n);\n\nCREATE TABLE `Match` (\n    season TEXT, -- example: ['2008/2009', '2009/2010', '2010/2011']\n    home_team_api_id INTEGER, -- example: [9987, 10000, 9984]\n    away_team_api_id INTEGER, -- example: [9993, 9994, 8635]\n    home_team_goal INTEGER, -- example: [1, 0, 5]\n    away_team_goal INTEGER, -- example: [1, 0, 3]\n    home_player_1 INTEGER, -- example: [39890, 38327, 95597]\n    home_player_2 INTEGER, -- example: [67950, 39580, 38292]\n    home_player_3 INTEGER, -- example: [38788, 67958, 30692]\n    home_player_4 INTEGER, -- example: [38312, 67959, 38435]\n    home_player_5 INTEGER, -- example: [26235, 37112, 94462]\n    home_player_6 INTEGER, -- example: [36393, 46004, 119117]\n    home_player_7 INTEGER, -- example: [148286, 164732, 35412]\n    home_player_8 INTEGER, -- example: [67898, 39631, 95609]\n    home_player_9 INTEGER, -- example: [26916, 164352, 38246]\n    home_player_10 INTEGER, -- example: [38801, 38423, 25957]\n    home_player_11 INTEGER, -- example: [94289, 26502, 38419]\n    away_player_1 INTEGER, -- example: [34480, 37937, 38252]\n    away_player_2 INTEGER, -- example: [38388, 38293, 39156]\n    away_player_3 INTEGER, -- example: [26458, 148313, 39151]\n    away_player_4 INTEGER, -- example: [13423, 104411, 166554]\n    away_player_5 INTEGER, -- example: [38389, 148314, 15652]\n    away_player_6 INTEGER, -- example: [38798, 37202, 39145]\n    away_player_7 INTEGER, -- example: [30949, 43158, 46890]\n    away_player_8 INTEGER, -- example: [38253, 9307, 38947]\n    away_player_9 INTEGER, -- example: [106013, 42153, 46881]\n    away_player_10 INTEGER, -- example: [38383, 32690, 39158]\n    away_player_11 INTEGER, -- example: [46552, 38782, 119118]\n    goal TEXT, -- example: ['<goal><value><comment>n</comment><stats>']\n    PRIMARY KEY (id),\n    CONSTRAINT fk_match_league_id FOREIGN KEY (league_id) REFERENCES League (id),\n    CONSTRAINT fk_match_home_team_api_id FOREIGN KEY (home_team_api_id) REFERENCES Team (team_api_id),\n    CONSTRAINT fk_match_away_team_api_id FOREIGN KEY (away_team_api_id) REFERENCES Team (team_api_id),\n    CONSTRAINT fk_match_home_player_1 FOREIGN KEY (home_player_1) REFERENCES Player (player_api_id),\n    CONSTRAINT fk_match_home_player_2 FOREIGN KEY (home_player_2) REFERENCES Player (player_api_id),\n    CONSTRAINT fk_match_home_player_3 FOREIGN KEY (home_player_3) REFERENCES Player (player_api_id),\n    CONSTRAINT fk_match_home_player_4 FOREIGN KEY (home_player_4) REFERENCES Player (player_api_id),\n    CONSTRAINT fk_match_home_player_5 FOREIGN KEY (home_player_5) REFERENCES Player (player_api_id),\n    CONSTRAINT fk_match_home_player_6 FOREIGN KEY (home_player_6) REFERENCES Player (player_api_id),\n    CONSTRAINT fk_match_home_player_7 FOREIGN KEY (home_player_7) REFERENCES Player (player_api_id),\n    CONSTRAINT fk_match_home_player_8 FOREIGN KEY (home_player_8) REFERENCES Player (player_api_id),\n    CONSTRAINT fk_match_home_player_9 FOREIGN KEY (home_player_9) REFERENCES Player (player_api_id),\n    CONSTRAINT fk_match_home_player_10 FOREIGN KEY (home_player_10) REFERENCES Player (player_api_id),\n    CONSTRAINT fk_match_home_player_11 FOREIGN KEY (home_player_11) REFERENCES Player (player_api_id),\n    CONSTRAINT fk_match_away_player_1 FOREIGN KEY (away_player_1) REFERENCES Player (player_api_id),\n    CONSTRAINT fk_match_away_player_2 FOREIGN KEY (away_player_2) REFERENCES Player (player_api_id),\n    CONSTRAINT fk_match_away_player_3 FOREIGN KEY (away_player_3) REFERENCES Player (player_api_id),\n    CONSTRAINT fk_match_away_player_4 FOREIGN KEY (away_player_4) REFERENCES Player (player_api_id),\n    CONSTRAINT fk_match_away_player_5 FOREIGN KEY (away_player_5) REFERENCES Player (player_api_id),\n    CONSTRAINT fk_match_away_player_6 FOREIGN KEY (away_player_6) REFERENCES Player (player_api_id),\n    CONSTRAINT fk_match_away_player_7 FOREIGN KEY (away_player_7) REFERENCES Player (player_api_id),\n    CONSTRAINT fk_match_away_player_8 FOREIGN KEY (away_player_8) REFERENCES Player (player_api_id),\n    CONSTRAINT fk_match_away_player_9 FOREIGN KEY (away_player_9) REFERENCES Player (player_api_id),\n    CONSTRAINT fk_match_away_player_10 FOREIGN KEY (away_player_10) REFERENCES Player (player_api_id),\n    CONSTRAINT fk_match_away_player_11 FOREIGN KEY (away_player_11) REFERENCES Player (player_api_id)\n);\n\nCREATE TABLE League (\n    PRIMARY KEY (id)\n);\n\nCREATE TABLE Country (\n    PRIMARY KEY (id)\n);\n\nCREATE TABLE Team (\n    team_api_id INTEGER, -- example: [1601, 1773, 1957]\n    team_fifa_api_id INTEGER, -- example: [673, 675, 15005]\n    team_long_name TEXT, -- example: ['KRC Genk', 'Beerschot AC', 'SV Zulte-Waregem']\n    team_short_name TEXT, -- example: ['GEN', 'BAC', 'ZUL']\n    PRIMARY KEY (id)\n);\n\nCREATE TABLE Team_Attributes (\n    team_fifa_api_id INTEGER, -- example: [434, 77, 614]\n    team_api_id INTEGER, -- example: [9930, 8485, 8576]\n    PRIMARY KEY (id),\n    CONSTRAINT fk_team_attributes_team_fifa_api_id FOREIGN KEY (team_fifa_api_id) REFERENCES Team (team_fifa_api_id),\n    CONSTRAINT fk_team_attributes_team_api_id FOREIGN KEY (team_api_id) REFERENCES Team (team_api_id)\n);",
        "question": "Can you calculate the median from the highest season goals of each team?",
        "instance_id": "local218",
        "db_id": "EU_soccer"
    },
    {
        "db_desc": "CREATE TABLE sqlite_sequence (\n    \n\nCREATE TABLE Player_Attributes (\n    id INTEGER, -- example: [1, 2, 3]\n    player_api_id INTEGER, -- example: [505942, 155782, 162549]\n    `date` TEXT, -- example: ['2016-02-18 00:00:00', '2015-11-19 00:00:00', '2015-09-21 00:00:00']\n    dribbling INTEGER, -- example: [51, 50, 73]\n    PRIMARY KEY (id),\n    CONSTRAINT fk_player_attributes_player_fifa_api_id FOREIGN KEY (player_fifa_api_id) REFERENCES Player (player_fifa_api_id),\n    CONSTRAINT fk_player_attributes_player_api_id FOREIGN KEY (player_api_id) REFERENCES Player (player_api_id)\n);\n\nCREATE TABLE Player (\n    id INTEGER, -- example: [3879, 401, 9179]\n    player_api_id INTEGER, -- example: [2625, 2752, 2768]\n    player_name TEXT, -- example: ['Aaron Appindangoye', 'Aaron Cresswell', 'Aaron Doran']\n    birthday TEXT, -- example: ['1992-02-29 00:00:00', '1989-12-15 00:00:00', '1991-05-13 00:00:00']\n    PRIMARY KEY (id)\n);\n\nCREATE TABLE `Match` (\n    id INTEGER, -- example: [4769, 4770, 4771]\n    country_id INTEGER, -- example: [1, 1729, 4769]\n    league_id INTEGER, -- example: [1, 1729, 4769]\n    season TEXT, -- example: ['2008/2009', '2009/2010', '2010/2011']\n    `date` TEXT, -- example: ['2008-08-17 00:00:00', '2008-08-16 00:00:00', '2008-09-24 00:00:00']\n    match_api_id INTEGER, -- example: [483129, 483130, 483131]\n    home_team_api_id INTEGER, -- example: [9987, 10000, 9984]\n    away_team_api_id INTEGER, -- example: [9993, 9994, 8635]\n    home_team_goal INTEGER, -- example: [1, 0, 5]\n    away_team_goal INTEGER, -- example: [1, 0, 3]\n    home_player_X2 INTEGER, -- example: [2, 4, 3]\n    away_player_X1 INTEGER, -- example: [1, 2, 6]\n    away_player_X2 INTEGER, -- example: [2, 4, 3]\n    away_player_X9 INTEGER, -- example: [8, 2, 6]\n    away_player_X10 INTEGER, -- example: [4, 6, 7]\n    away_player_Y8 INTEGER, -- example: [7, 8, 6]\n    away_player_Y11 INTEGER, -- example: [10, 11, 8]\n    home_player_1 INTEGER, -- example: [39890, 38327, 95597]\n    home_player_2 INTEGER, -- example: [67950, 39580, 38292]\n    home_player_3 INTEGER, -- example: [38788, 67958, 30692]\n    home_player_4 INTEGER, -- example: [38312, 67959, 38435]\n    home_player_5 INTEGER, -- example: [26235, 37112, 94462]\n    home_player_6 INTEGER, -- example: [36393, 46004, 119117]\n    home_player_7 INTEGER, -- example: [148286, 164732, 35412]\n    home_player_8 INTEGER, -- example: [67898, 39631, 95609]\n    home_player_9 INTEGER, -- example: [26916, 164352, 38246]\n    home_player_10 INTEGER, -- example: [38801, 38423, 25957]\n    home_player_11 INTEGER, -- example: [94289, 26502, 38419]\n    away_player_1 INTEGER, -- example: [34480, 37937, 38252]\n    away_player_2 INTEGER, -- example: [38388, 38293, 39156]\n    away_player_3 INTEGER, -- example: [26458, 148313, 39151]\n    away_player_4 INTEGER, -- example: [13423, 104411, 166554]\n    away_player_5 INTEGER, -- example: [38389, 148314, 15652]\n    away_player_6 INTEGER, -- example: [38798, 37202, 39145]\n    away_player_7 INTEGER, -- example: [30949, 43158, 46890]\n    away_player_8 INTEGER, -- example: [38253, 9307, 38947]\n    away_player_9 INTEGER, -- example: [106013, 42153, 46881]\n    away_player_10 INTEGER, -- example: [38383, 32690, 39158]\n    away_player_11 INTEGER, -- example: [46552, 38782, 119118]\n    goal TEXT, -- example: ['<goal><value><comment>n</comment><stats>']\n    card TEXT, -- example: ['<card><value><comment>y</comment><stats>', '<card />']\n    PRIMARY KEY (id),\n    CONSTRAINT fk_match_league_id FOREIGN KEY (league_id) REFERENCES League (id),\n    CONSTRAINT fk_match_home_team_api_id FOREIGN KEY (home_team_api_id) REFERENCES Team (team_api_id),\n    CONSTRAINT fk_match_away_team_api_id FOREIGN KEY (away_team_api_id) REFERENCES Team (team_api_id),\n    CONSTRAINT fk_match_home_player_1 FOREIGN KEY (home_player_1) REFERENCES Player (player_api_id),\n    CONSTRAINT fk_match_home_player_2 FOREIGN KEY (home_player_2) REFERENCES Player (player_api_id),\n    CONSTRAINT fk_match_home_player_3 FOREIGN KEY (home_player_3) REFERENCES Player (player_api_id),\n    CONSTRAINT fk_match_home_player_4 FOREIGN KEY (home_player_4) REFERENCES Player (player_api_id),\n    CONSTRAINT fk_match_home_player_5 FOREIGN KEY (home_player_5) REFERENCES Player (player_api_id),\n    CONSTRAINT fk_match_home_player_6 FOREIGN KEY (home_player_6) REFERENCES Player (player_api_id),\n    CONSTRAINT fk_match_home_player_7 FOREIGN KEY (home_player_7) REFERENCES Player (player_api_id),\n    CONSTRAINT fk_match_home_player_8 FOREIGN KEY (home_player_8) REFERENCES Player (player_api_id),\n    CONSTRAINT fk_match_home_player_9 FOREIGN KEY (home_player_9) REFERENCES Player (player_api_id),\n    CONSTRAINT fk_match_home_player_10 FOREIGN KEY (home_player_10) REFERENCES Player (player_api_id),\n    CONSTRAINT fk_match_home_player_11 FOREIGN KEY (home_player_11) REFERENCES Player (player_api_id),\n    CONSTRAINT fk_match_away_player_1 FOREIGN KEY (away_player_1) REFERENCES Player (player_api_id),\n    CONSTRAINT fk_match_away_player_2 FOREIGN KEY (away_player_2) REFERENCES Player (player_api_id),\n    CONSTRAINT fk_match_away_player_3 FOREIGN KEY (away_player_3) REFERENCES Player (player_api_id),\n    CONSTRAINT fk_match_away_player_4 FOREIGN KEY (away_player_4) REFERENCES Player (player_api_id),\n    CONSTRAINT fk_match_away_player_5 FOREIGN KEY (away_player_5) REFERENCES Player (player_api_id),\n    CONSTRAINT fk_match_away_player_6 FOREIGN KEY (away_player_6) REFERENCES Player (player_api_id),\n    CONSTRAINT fk_match_away_player_7 FOREIGN KEY (away_player_7) REFERENCES Player (player_api_id),\n    CONSTRAINT fk_match_away_player_8 FOREIGN KEY (away_player_8) REFERENCES Player (player_api_id),\n    CONSTRAINT fk_match_away_player_9 FOREIGN KEY (away_player_9) REFERENCES Player (player_api_id),\n    CONSTRAINT fk_match_away_player_10 FOREIGN KEY (away_player_10) REFERENCES Player (player_api_id),\n    CONSTRAINT fk_match_away_player_11 FOREIGN KEY (away_player_11) REFERENCES Player (player_api_id)\n);\n\nCREATE TABLE League (\n    id INTEGER, -- example: [1, 1729, 4769]\n    country_id INTEGER, -- example: [1, 1729, 4769]\n    name TEXT, -- example: ['Belgium Jupiler League', 'England Premier League', 'France Ligue 1']\n    PRIMARY KEY (id)\n);\n\nCREATE TABLE Country (\n    id INTEGER, -- example: [1, 1729, 4769]\n    name TEXT, -- example: ['Belgium', 'England', 'France']\n    PRIMARY KEY (id)\n);\n\nCREATE TABLE Team (\n    id INTEGER, -- example: [31446, 1513, 31456]\n    team_api_id INTEGER, -- example: [1601, 1773, 1957]\n    team_fifa_api_id INTEGER, -- example: [673, 675, 15005]\n    team_long_name TEXT, -- example: ['KRC Genk', 'Beerschot AC', 'SV Zulte-Waregem']\n    team_short_name TEXT, -- example: ['GEN', 'BAC', 'ZUL']\n    PRIMARY KEY (id)\n);\n\nCREATE TABLE Team_Attributes (\n    id INTEGER, -- example: [1, 2, 3]\n    team_fifa_api_id INTEGER, -- example: [434, 77, 614]\n    team_api_id INTEGER, -- example: [9930, 8485, 8576]\n    `date` TEXT, -- example: ['2010-02-22 00:00:00', '2014-09-19 00:00:00', '2015-09-10 00:00:00']\n    PRIMARY KEY (id),\n    CONSTRAINT fk_team_attributes_team_fifa_api_id FOREIGN KEY (team_fifa_api_id) REFERENCES Team (team_fifa_api_id),\n    CONSTRAINT fk_team_attributes_team_api_id FOREIGN KEY (team_api_id) REFERENCES Team (team_api_id)\n);",
        "question": "In each league, considering all seasons, which single team has the fewest total match wins based on comparing home and away goals, including teams with zero wins, ensuring that if multiple teams tie for the fewest wins, only one team is returned for each league?",
        "instance_id": "local219",
        "db_id": "EU_soccer"
    },
    {
        "db_desc": "CREATE TABLE sqlite_sequence (\n    \n\nCREATE TABLE Player_Attributes (\n    player_api_id INTEGER, -- example: [505942, 155782, 162549]\n    `date` TEXT, -- example: ['2016-02-18 00:00:00', '2015-11-19 00:00:00', '2015-09-21 00:00:00']\n    crossing INTEGER, -- example: [49, 48, 80]\n    dribbling INTEGER, -- example: [51, 50, 73]\n    PRIMARY KEY (id),\n    CONSTRAINT fk_player_attributes_player_fifa_api_id FOREIGN KEY (player_fifa_api_id) REFERENCES Player (player_fifa_api_id),\n    CONSTRAINT fk_player_attributes_player_api_id FOREIGN KEY (player_api_id) REFERENCES Player (player_api_id)\n);\n\nCREATE TABLE Player (\n    player_api_id INTEGER, -- example: [2625, 2752, 2768]\n    player_name TEXT, -- example: ['Aaron Appindangoye', 'Aaron Cresswell', 'Aaron Doran']\n    PRIMARY KEY (id)\n);\n\nCREATE TABLE `Match` (\n    league_id INTEGER, -- example: [1, 1729, 4769]\n    season TEXT, -- example: ['2008/2009', '2009/2010', '2010/2011']\n    `date` TEXT, -- example: ['2008-08-17 00:00:00', '2008-08-16 00:00:00', '2008-09-24 00:00:00']\n    match_api_id INTEGER, -- example: [483129, 483130, 483131]\n    home_team_api_id INTEGER, -- example: [9987, 10000, 9984]\n    away_team_api_id INTEGER, -- example: [9993, 9994, 8635]\n    home_team_goal INTEGER, -- example: [1, 0, 5]\n    away_team_goal INTEGER, -- example: [1, 0, 3]\n    home_player_X10 INTEGER, -- example: [4, 6, 9]\n    home_player_Y10 INTEGER, -- example: [10, 7, 8]\n    home_player_1 INTEGER, -- example: [39890, 38327, 95597]\n    home_player_2 INTEGER, -- example: [67950, 39580, 38292]\n    home_player_3 INTEGER, -- example: [38788, 67958, 30692]\n    home_player_4 INTEGER, -- example: [38312, 67959, 38435]\n    home_player_5 INTEGER, -- example: [26235, 37112, 94462]\n    home_player_6 INTEGER, -- example: [36393, 46004, 119117]\n    home_player_7 INTEGER, -- example: [148286, 164732, 35412]\n    home_player_8 INTEGER, -- example: [67898, 39631, 95609]\n    home_player_9 INTEGER, -- example: [26916, 164352, 38246]\n    home_player_10 INTEGER, -- example: [38801, 38423, 25957]\n    home_player_11 INTEGER, -- example: [94289, 26502, 38419]\n    away_player_1 INTEGER, -- example: [34480, 37937, 38252]\n    away_player_2 INTEGER, -- example: [38388, 38293, 39156]\n    away_player_3 INTEGER, -- example: [26458, 148313, 39151]\n    away_player_4 INTEGER, -- example: [13423, 104411, 166554]\n    away_player_5 INTEGER, -- example: [38389, 148314, 15652]\n    away_player_6 INTEGER, -- example: [38798, 37202, 39145]\n    away_player_7 INTEGER, -- example: [30949, 43158, 46890]\n    away_player_8 INTEGER, -- example: [38253, 9307, 38947]\n    away_player_9 INTEGER, -- example: [106013, 42153, 46881]\n    away_player_10 INTEGER, -- example: [38383, 32690, 39158]\n    away_player_11 INTEGER, -- example: [46552, 38782, 119118]\n    `cross` TEXT, -- example: ['<cross><value><stats><crosses>1</crosses']\n    PRIMARY KEY (id),\n    CONSTRAINT fk_match_league_id FOREIGN KEY (league_id) REFERENCES League (id),\n    CONSTRAINT fk_match_home_team_api_id FOREIGN KEY (home_team_api_id) REFERENCES Team (team_api_id),\n    CONSTRAINT fk_match_away_team_api_id FOREIGN KEY (away_team_api_id) REFERENCES Team (team_api_id),\n    CONSTRAINT fk_match_home_player_1 FOREIGN KEY (home_player_1) REFERENCES Player (player_api_id),\n    CONSTRAINT fk_match_home_player_2 FOREIGN KEY (home_player_2) REFERENCES Player (player_api_id),\n    CONSTRAINT fk_match_home_player_3 FOREIGN KEY (home_player_3) REFERENCES Player (player_api_id),\n    CONSTRAINT fk_match_home_player_4 FOREIGN KEY (home_player_4) REFERENCES Player (player_api_id),\n    CONSTRAINT fk_match_home_player_5 FOREIGN KEY (home_player_5) REFERENCES Player (player_api_id),\n    CONSTRAINT fk_match_home_player_6 FOREIGN KEY (home_player_6) REFERENCES Player (player_api_id),\n    CONSTRAINT fk_match_home_player_7 FOREIGN KEY (home_player_7) REFERENCES Player (player_api_id),\n    CONSTRAINT fk_match_home_player_8 FOREIGN KEY (home_player_8) REFERENCES Player (player_api_id),\n    CONSTRAINT fk_match_home_player_9 FOREIGN KEY (home_player_9) REFERENCES Player (player_api_id),\n    CONSTRAINT fk_match_home_player_10 FOREIGN KEY (home_player_10) REFERENCES Player (player_api_id),\n    CONSTRAINT fk_match_home_player_11 FOREIGN KEY (home_player_11) REFERENCES Player (player_api_id),\n    CONSTRAINT fk_match_away_player_1 FOREIGN KEY (away_player_1) REFERENCES Player (player_api_id),\n    CONSTRAINT fk_match_away_player_2 FOREIGN KEY (away_player_2) REFERENCES Player (player_api_id),\n    CONSTRAINT fk_match_away_player_3 FOREIGN KEY (away_player_3) REFERENCES Player (player_api_id),\n    CONSTRAINT fk_match_away_player_4 FOREIGN KEY (away_player_4) REFERENCES Player (player_api_id),\n    CONSTRAINT fk_match_away_player_5 FOREIGN KEY (away_player_5) REFERENCES Player (player_api_id),\n    CONSTRAINT fk_match_away_player_6 FOREIGN KEY (away_player_6) REFERENCES Player (player_api_id),\n    CONSTRAINT fk_match_away_player_7 FOREIGN KEY (away_player_7) REFERENCES Player (player_api_id),\n    CONSTRAINT fk_match_away_player_8 FOREIGN KEY (away_player_8) REFERENCES Player (player_api_id),\n    CONSTRAINT fk_match_away_player_9 FOREIGN KEY (away_player_9) REFERENCES Player (player_api_id),\n    CONSTRAINT fk_match_away_player_10 FOREIGN KEY (away_player_10) REFERENCES Player (player_api_id),\n    CONSTRAINT fk_match_away_player_11 FOREIGN KEY (away_player_11) REFERENCES Player (player_api_id)\n);\n\nCREATE TABLE League (\n    name TEXT, -- example: ['Belgium Jupiler League', 'England Premier League', 'France Ligue 1']\n    PRIMARY KEY (id)\n);\n\nCREATE TABLE Country (\n    name TEXT, -- example: ['Belgium', 'England', 'France']\n    PRIMARY KEY (id)\n);\n\nCREATE TABLE Team (\n    team_api_id INTEGER, -- example: [1601, 1773, 1957]\n    team_fifa_api_id INTEGER, -- example: [673, 675, 15005]\n    team_long_name TEXT, -- example: ['KRC Genk', 'Beerschot AC', 'SV Zulte-Waregem']\n    team_short_name TEXT, -- example: ['GEN', 'BAC', 'ZUL']\n    PRIMARY KEY (id)\n);\n\nCREATE TABLE Team_Attributes (\n    team_fifa_api_id INTEGER, -- example: [434, 77, 614]\n    team_api_id INTEGER, -- example: [9930, 8485, 8576]\n    `date` TEXT, -- example: ['2010-02-22 00:00:00', '2014-09-19 00:00:00', '2015-09-10 00:00:00']\n    PRIMARY KEY (id),\n    CONSTRAINT fk_team_attributes_team_fifa_api_id FOREIGN KEY (team_fifa_api_id) REFERENCES Team (team_fifa_api_id),\n    CONSTRAINT fk_team_attributes_team_api_id FOREIGN KEY (team_api_id) REFERENCES Team (team_api_id)\n);",
        "question": "Tell me top10 teams with the most wins across the league",
        "instance_id": "local221",
        "db_id": "EU_soccer"
    },
    {
        "db_desc": "CREATE TABLE sqlite_sequence (\n    \n\nCREATE TABLE Player_Attributes (\n    id INTEGER, -- example: [1, 2, 3]\n    player_api_id INTEGER, -- example: [505942, 155782, 162549]\n    `date` TEXT, -- example: ['2016-02-18 00:00:00', '2015-11-19 00:00:00', '2015-09-21 00:00:00']\n    finishing INTEGER, -- example: [44, 43, 53]\n    volleys INTEGER, -- example: [44, 43, 40]\n    reactions INTEGER, -- example: [47, 46, 67]\n    PRIMARY KEY (id),\n    CONSTRAINT fk_player_attributes_player_fifa_api_id FOREIGN KEY (player_fifa_api_id) REFERENCES Player (player_fifa_api_id),\n    CONSTRAINT fk_player_attributes_player_api_id FOREIGN KEY (player_api_id) REFERENCES Player (player_api_id)\n);\n\nCREATE TABLE Player (\n    id INTEGER, -- example: [3879, 401, 9179]\n    player_api_id INTEGER, -- example: [2625, 2752, 2768]\n    player_name TEXT, -- example: ['Aaron Appindangoye', 'Aaron Cresswell', 'Aaron Doran']\n    birthday TEXT, -- example: ['1992-02-29 00:00:00', '1989-12-15 00:00:00', '1991-05-13 00:00:00']\n    PRIMARY KEY (id)\n);\n\nCREATE TABLE `Match` (\n    id INTEGER, -- example: [4769, 4770, 4771]\n    country_id INTEGER, -- example: [1, 1729, 4769]\n    season TEXT, -- example: ['2008/2009', '2009/2010', '2010/2011']\n    `date` TEXT, -- example: ['2008-08-17 00:00:00', '2008-08-16 00:00:00', '2008-09-24 00:00:00']\n    home_team_goal INTEGER, -- example: [1, 0, 5]\n    away_team_goal INTEGER, -- example: [1, 0, 3]\n    home_player_X2 INTEGER, -- example: [2, 4, 3]\n    home_player_X3 INTEGER, -- example: [4, 6, 8]\n    away_player_X1 INTEGER, -- example: [1, 2, 6]\n    away_player_X2 INTEGER, -- example: [2, 4, 3]\n    away_player_X3 INTEGER, -- example: [4, 6, 5]\n    away_player_X4 INTEGER, -- example: [6, 8, 2]\n    away_player_X9 INTEGER, -- example: [8, 2, 6]\n    away_player_X10 INTEGER, -- example: [4, 6, 7]\n    home_player_Y10 INTEGER, -- example: [10, 7, 8]\n    away_player_Y4 INTEGER, -- example: [3, 5, 7]\n    away_player_Y5 INTEGER, -- example: [3, 7, 6]\n    away_player_Y9 INTEGER, -- example: [7, 10, 8]\n    home_player_1 INTEGER, -- example: [39890, 38327, 95597]\n    home_player_2 INTEGER, -- example: [67950, 39580, 38292]\n    home_player_3 INTEGER, -- example: [38788, 67958, 30692]\n    home_player_4 INTEGER, -- example: [38312, 67959, 38435]\n    home_player_5 INTEGER, -- example: [26235, 37112, 94462]\n    home_player_6 INTEGER, -- example: [36393, 46004, 119117]\n    home_player_7 INTEGER, -- example: [148286, 164732, 35412]\n    home_player_8 INTEGER, -- example: [67898, 39631, 95609]\n    home_player_9 INTEGER, -- example: [26916, 164352, 38246]\n    home_player_10 INTEGER, -- example: [38801, 38423, 25957]\n    home_player_11 INTEGER, -- example: [94289, 26502, 38419]\n    away_player_1 INTEGER, -- example: [34480, 37937, 38252]\n    away_player_2 INTEGER, -- example: [38388, 38293, 39156]\n    away_player_3 INTEGER, -- example: [26458, 148313, 39151]\n    away_player_4 INTEGER, -- example: [13423, 104411, 166554]\n    away_player_5 INTEGER, -- example: [38389, 148314, 15652]\n    away_player_6 INTEGER, -- example: [38798, 37202, 39145]\n    away_player_7 INTEGER, -- example: [30949, 43158, 46890]\n    away_player_8 INTEGER, -- example: [38253, 9307, 38947]\n    away_player_9 INTEGER, -- example: [106013, 42153, 46881]\n    away_player_10 INTEGER, -- example: [38383, 32690, 39158]\n    away_player_11 INTEGER, -- example: [46552, 38782, 119118]\n    goal TEXT, -- example: ['<goal><value><comment>n</comment><stats>']\n    card TEXT, -- example: ['<card><value><comment>y</comment><stats>', '<card />']\n    PRIMARY KEY (id),\n    CONSTRAINT fk_match_league_id FOREIGN KEY (league_id) REFERENCES League (id),\n    CONSTRAINT fk_match_home_team_api_id FOREIGN KEY (home_team_api_id) REFERENCES Team (team_api_id),\n    CONSTRAINT fk_match_away_team_api_id FOREIGN KEY (away_team_api_id) REFERENCES Team (team_api_id),\n    CONSTRAINT fk_match_home_player_1 FOREIGN KEY (home_player_1) REFERENCES Player (player_api_id),\n    CONSTRAINT fk_match_home_player_2 FOREIGN KEY (home_player_2) REFERENCES Player (player_api_id),\n    CONSTRAINT fk_match_home_player_3 FOREIGN KEY (home_player_3) REFERENCES Player (player_api_id),\n    CONSTRAINT fk_match_home_player_4 FOREIGN KEY (home_player_4) REFERENCES Player (player_api_id),\n    CONSTRAINT fk_match_home_player_5 FOREIGN KEY (home_player_5) REFERENCES Player (player_api_id),\n    CONSTRAINT fk_match_home_player_6 FOREIGN KEY (home_player_6) REFERENCES Player (player_api_id),\n    CONSTRAINT fk_match_home_player_7 FOREIGN KEY (home_player_7) REFERENCES Player (player_api_id),\n    CONSTRAINT fk_match_home_player_8 FOREIGN KEY (home_player_8) REFERENCES Player (player_api_id),\n    CONSTRAINT fk_match_home_player_9 FOREIGN KEY (home_player_9) REFERENCES Player (player_api_id),\n    CONSTRAINT fk_match_home_player_10 FOREIGN KEY (home_player_10) REFERENCES Player (player_api_id),\n    CONSTRAINT fk_match_home_player_11 FOREIGN KEY (home_player_11) REFERENCES Player (player_api_id),\n    CONSTRAINT fk_match_away_player_1 FOREIGN KEY (away_player_1) REFERENCES Player (player_api_id),\n    CONSTRAINT fk_match_away_player_2 FOREIGN KEY (away_player_2) REFERENCES Player (player_api_id),\n    CONSTRAINT fk_match_away_player_3 FOREIGN KEY (away_player_3) REFERENCES Player (player_api_id),\n    CONSTRAINT fk_match_away_player_4 FOREIGN KEY (away_player_4) REFERENCES Player (player_api_id),\n    CONSTRAINT fk_match_away_player_5 FOREIGN KEY (away_player_5) REFERENCES Player (player_api_id),\n    CONSTRAINT fk_match_away_player_6 FOREIGN KEY (away_player_6) REFERENCES Player (player_api_id),\n    CONSTRAINT fk_match_away_player_7 FOREIGN KEY (away_player_7) REFERENCES Player (player_api_id),\n    CONSTRAINT fk_match_away_player_8 FOREIGN KEY (away_player_8) REFERENCES Player (player_api_id),\n    CONSTRAINT fk_match_away_player_9 FOREIGN KEY (away_player_9) REFERENCES Player (player_api_id),\n    CONSTRAINT fk_match_away_player_10 FOREIGN KEY (away_player_10) REFERENCES Player (player_api_id),\n    CONSTRAINT fk_match_away_player_11 FOREIGN KEY (away_player_11) REFERENCES Player (player_api_id)\n);\n\nCREATE TABLE League (\n    id INTEGER, -- example: [1, 1729, 4769]\n    country_id INTEGER, -- example: [1, 1729, 4769]\n    name TEXT, -- example: ['Belgium Jupiler League', 'England Premier League', 'France Ligue 1']\n    PRIMARY KEY (id)\n);\n\nCREATE TABLE Country (\n    id INTEGER, -- example: [1, 1729, 4769]\n    name TEXT, -- example: ['Belgium', 'England', 'France']\n    PRIMARY KEY (id)\n);\n\nCREATE TABLE Team (\n    id INTEGER, -- example: [31446, 1513, 31456]\n    team_api_id INTEGER, -- example: [1601, 1773, 1957]\n    team_fifa_api_id INTEGER, -- example: [673, 675, 15005]\n    team_long_name TEXT, -- example: ['KRC Genk', 'Beerschot AC', 'SV Zulte-Waregem']\n    team_short_name TEXT, -- example: ['GET']\n    PRIMARY KEY (id)\n);\n\nCREATE TABLE Team_Attributes (\n    id INTEGER, -- example: [1, 2, 3]\n    team_fifa_api_id INTEGER, -- example: [434, 77, 614]\n    team_api_id INTEGER, -- example: [9930, 8485, 8576]\n    `date` TEXT, -- example: ['2010-02-22 00:00:00', '2014-09-19 00:00:00', '2015-09-10 00:00:00']\n    buildUpPlayPassing INTEGER, -- example: [50, 56, 54]\n    buildUpPlayPassingClass TEXT, -- example: ['Mixed', 'Long', 'Short']\n    PRIMARY KEY (id),\n    CONSTRAINT fk_team_attributes_team_fifa_api_id FOREIGN KEY (team_fifa_api_id) REFERENCES Team (team_fifa_api_id),\n    CONSTRAINT fk_team_attributes_team_api_id FOREIGN KEY (team_api_id) REFERENCES Team (team_api_id)\n);",
        "question": "Which player has participated in the highest number of winning matches and which player has participated in the highest number of losing matches, considering only matches where they actually played (excluding null entries) and where their team won or lost (excluding draws)?",
        "instance_id": "local220",
        "db_id": "EU_soccer"
    },
    {
        "db_desc": "CREATE TABLE player (\n    player_id INTEGER, -- example: [1, 2, 3]\n    player_name TEXT, -- example: ['SC Ganguly', 'BB McCullum', 'RT Ponting']\n    batting_hand TEXT, -- example: ['Left-hand bat', 'Right-hand bat']\n    bowling_skill TEXT, -- example: ['Right-arm medium', 'Right-arm offbreak', 'Right-arm fast-medium']\n    PRIMARY KEY (player_id)\n);\n\nCREATE TABLE team (\n    team_id INTEGER, -- example: [2, 3, 4]\n    PRIMARY KEY (team_id)\n);\n\nCREATE TABLE `match` (\n    match_id INTEGER, -- example: [335987, 335988, 335989]\n    team_1 INTEGER, -- example: [2, 4, 6]\n    team_2 INTEGER, -- example: [1, 3, 5]\n    match_date DATE, -- example: ['2008-04-18', '2008-04-19', '2008-04-20']\n    season_id INTEGER, -- example: [1, 2, 3]\n    venue TEXT, -- example: ['M Chinnaswamy Stadium', 'Punjab Cricket Association Stadium Mohal', 'Feroz Shah Kotla']\n    win_type TEXT, -- example: ['wickets', 'runs']\n    match_winner INTEGER, -- example: [1, 3, 6]\n    man_of_the_match INTEGER, -- example: [2, 19, 90]\n    PRIMARY KEY (match_id)\n);\n\nCREATE TABLE player_match (\n    match_id INTEGER, -- example: [335987, 335988, 335989]\n    player_id INTEGER, -- example: [1, 2, 3]\n    `role` TEXT, -- example: ['Player']\n    team_id INTEGER, -- example: [7, 1, 11]\n    PRIMARY KEY (match_id)\n);\n\nCREATE TABLE ball_by_ball (\n    match_id INTEGER, -- example: [335987, 335988, 335989]\n    ball_id INTEGER, -- example: [1, 2, 3]\n    team_batting INTEGER, -- example: [2, 1, 3]\n    team_bowling INTEGER, -- example: [1, 2, 4]\n    striker_batting_position INTEGER, -- example: [1, 2, 3]\n    striker INTEGER, -- example: [6, 2, 7]\n    bowler INTEGER, -- example: [106, 14, 15]\n    PRIMARY KEY (match_id)\n);\n\nCREATE TABLE batsman_scored (\n    match_id INTEGER, -- example: [335987, 335988, 335989]\n    ball_id INTEGER, -- example: [1, 2, 3]\n    runs_scored INTEGER, -- example: [1, 0, 4]\n    PRIMARY KEY (match_id)\n);\n\nCREATE TABLE wicket_taken (\n    match_id INTEGER, -- example: [335987, 335988, 335989]\n    ball_id INTEGER, -- example: [1, 2, 5]\n    player_out INTEGER, -- example: [154, 46, 8]\n    kind_out TEXT, -- example: ['run out', 'retired hurt', 'hit wicket', 'bowled']\n    PRIMARY KEY (match_id)\n);\n\nCREATE TABLE extra_runs (\n    match_id INTEGER, -- example: [335987, 335988, 335989]\n    ball_id INTEGER, -- example: [1, 2, 3]\n    extra_runs INTEGER, -- example: [1, 4, 2]\n    PRIMARY KEY (match_id)\n);",
        "question": "For each IPL season, identify the top three batsmen with the highest total runs scored and the top three bowlers with the most wickets taken, excluding \u2018run out\u2019, \u2018hit wicket\u2019, and \u2018retired hurt\u2019 dismissals. In the event of ties in runs or wickets, break the tie using the smaller player ID. Then output these six players in matched positions\u2014batsman 1 with bowler 1, batsman 2 with bowler 2, and batsman 3 with bowler 3\u2014in ascending order of the season ID, along with each player\u2019s total runs or wickets.",
        "instance_id": "local228",
        "db_id": "IPL"
    },
    {
        "db_desc": "CREATE TABLE player (\n    player_id INTEGER, -- example: [1, 2, 3]\n    player_name TEXT, -- example: ['SC Ganguly', 'BB McCullum', 'RT Ponting']\n    country_name TEXT, -- example: ['India', 'New Zealand', 'Australia']\n    PRIMARY KEY (player_id)\n);\n\nCREATE TABLE team (\n    team_id INTEGER, -- example: [2, 3, 4]\n    name TEXT, -- example: ['Royal Challengers Bangalore', 'Chennai Super Kings', 'Kings XI Punjab']\n    PRIMARY KEY (team_id)\n);\n\nCREATE TABLE `match` (\n    match_id INTEGER, -- example: [335987, 335988, 335989]\n    team_1 INTEGER, -- example: [2, 4, 6]\n    team_2 INTEGER, -- example: [1, 3, 5]\n    match_date DATE, -- example: ['2008-04-18', '2008-04-19', '2008-04-20']\n    venue TEXT, -- example: ['M Chinnaswamy Stadium', 'Punjab Cricket Association Stadium Mohal', 'Feroz Shah Kotla']\n    match_winner INTEGER, -- example: [1, 3, 6]\n    man_of_the_match INTEGER, -- example: [2, 19, 90]\n    PRIMARY KEY (match_id)\n);\n\nCREATE TABLE player_match (\n    match_id INTEGER, -- example: [335987, 335988, 335989]\n    player_id INTEGER, -- example: [1, 2, 3]\n    `role` TEXT, -- example: ['Player']\n    team_id INTEGER, -- example: [7, 1, 11]\n    PRIMARY KEY (match_id)\n);\n\nCREATE TABLE ball_by_ball (\n    match_id INTEGER, -- example: [335987, 335988, 335989]\n    ball_id INTEGER, -- example: [1, 2, 3]\n    team_batting INTEGER, -- example: [2, 1, 3]\n    team_bowling INTEGER, -- example: [1, 2, 4]\n    striker INTEGER, -- example: [6, 2, 7]\n    non_striker INTEGER, -- example: [7, 1, 6]\n    bowler INTEGER, -- example: [106, 14, 15]\n    PRIMARY KEY (match_id)\n);\n\nCREATE TABLE batsman_scored (\n    match_id INTEGER, -- example: [335987, 335988, 335989]\n    ball_id INTEGER, -- example: [1, 2, 3]\n    runs_scored INTEGER, -- example: [1, 0, 4]\n    PRIMARY KEY (match_id)\n);\n\nCREATE TABLE wicket_taken (\n    match_id INTEGER, -- example: [335987, 335988, 335989]\n    ball_id INTEGER, -- example: [1, 2, 5]\n    player_out INTEGER, -- example: [154, 46, 8]\n    PRIMARY KEY (match_id)\n);\n\nCREATE TABLE extra_runs (\n    match_id INTEGER, -- example: [335987, 335988, 335989]\n    ball_id INTEGER, -- example: [1, 2, 3]\n    extra_runs INTEGER, -- example: [1, 4, 2]\n    PRIMARY KEY (match_id)\n);",
        "question": "Find the IDs of players who scored the highest number of partnership runs for each match. The output should include the IDs of two players, each with their individual scores and the total partnership score. For each pair, the player with the higher individual score should be listed as player 1, and the player with the lower score as player 2. In cases where both players have the same score, the player with the higher ID should be player 1, and the player with the lower ID should be player 2. There can be multiple rows for a single match.",
        "instance_id": "local229",
        "db_id": "IPL"
    },
    {
        "db_desc": "CREATE TABLE victims (\n    \n\nCREATE TABLE collisions (\n    primary_road TEXT, -- example: ['RT 15', 'RT 880', '7TH ST']\n    secondary_road TEXT, -- example: ['CIMA RD', 'MONTAGUE EXPWY', 'MIRA MAR']\n    distance REAL, -- example: [15470.0, 3000.0, 35.0]\n    intersection REAL, -- example: [0.0, 1.0]\n    collision_severity TEXT, -- example: ['property damage only', 'pain', 'severe injury']\n    primary_collision_factor TEXT, -- example: ['vehicle code violation', 'other than driver', 'other improper driving']\n    pcf_violation_code TEXT, -- example: ['vehicle', \"'\", 'city ordinance']\n    pcf_violation_category TEXT, -- example: ['speeding', 'other than driver (or pedestrian)', 'unsafe lane change']\n    pcf_violation REAL, -- example: [22350.0, 21658.0, 21800.0]\n    pcf_violation_subsection TEXT, -- example: ['A', 'B', '1']\n    type_of_collision TEXT, -- example: ['rear end', 'hit object', 'sideswipe']\n    road_surface TEXT, -- example: ['dry', 'wet', 'snowy']\n    road_condition_1 TEXT, -- example: ['construction', 'normal', 'obstruction']\n    road_condition_2 TEXT, -- example: ['normal', 'reduced width', 'construction']\n    pedestrian_collision INTEGER, -- example: [0, 1]\n    bicycle_collision INTEGER, -- example: [0, 1]\n    motorcycle_collision INTEGER, -- example: [0, 1]\n    truck_collision INTEGER, -- example: [0, 1]\n    primary_ramp TEXT, -- example: ['FR', 'TO', 'southbound off-ramp']\n    collision_date TEXT, -- example: ['2011-11-22', '2014-07-25', '2011-01-19']\n    collision_time TEXT, -- example: ['13:27:00', '14:00:00', '08:19:00']\n\nCREATE TABLE case_ids (\n    \n\nCREATE TABLE parties (\n    oaf_violation_code TEXT, -- example: ['vehicle', 'A', 'business and professions']\n    oaf_violation_category TEXT, -- example: ['improper turning', 'unsafe speed', 'wrong side of road']\n    oaf_violation_section REAL, -- example: [0.0, 22107.0, 22350.0]\n    oaf_violation_suffix TEXT, -- example: ['0', 'A', '1']\n    other_associate_factor_1 TEXT, -- example: ['violation']\n    other_associate_factor_2 TEXT, -- example: ['other', 'none apparent', 'stop and go traffic']",
        "question": "For the primary collision factor violation category that was the most common cause of traffic accidents in 2021, how many percentage points did its share of annual road incidents in 2021 decrease compared to its share in 2011?",
        "instance_id": "local018",
        "db_id": "California_Traffic_Collision"
    }
]